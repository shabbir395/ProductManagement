package ncl.pm.model.bc.eo;

import java.math.BigDecimal;

import java.util.Calendar;
import java.util.logging.Logger;

import ncl.pm.model.bc.view.xxpmJC.ModelActions;

import oracle.adf.share.ADFContext;

import oracle.jbo.DMLConstraintException;
import oracle.jbo.DMLException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 07 17:02:55 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmItemMasterImpl extends EntityImpl {
    Logger logger = Logger.getLogger(this.getClass().getName());
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Segment2 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getSegment2();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setSegment2((String)value);
            }
        },
        Description {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getDescription();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        },
        YarnCount {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getYarnCount();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setYarnCount((Number)value);
            }
        },
        YarnPlies {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getYarnPlies();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setYarnPlies((String)value);
            }
        },
        YarnType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getYarnType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setYarnType((String)value);
            }
        },
        MeasuringSystem {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getMeasuringSystem();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setMeasuringSystem((String)value);
            }
        },
        YarnStatus {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getYarnStatus();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setYarnStatus((String)value);
            }
        },
        Segment1 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getSegment1();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setSegment1((String)value);
            }
        },
        ImId {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getImId();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setImId((DBSequence)value);
            }
        },
        EbsItemId {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getEbsItemId();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setEbsItemId((Number)value);
            }
        },
        ItemStatusFlag {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getItemStatusFlag();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setItemStatusFlag((Integer)value);
            }
        },
        Segment3 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getSegment3();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setSegment3((String)value);
            }
        },
        Segment4 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getSegment4();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setSegment4((String)value);
            }
        },
        Segment5 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getSegment5();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setSegment5((String)value);
            }
        },
        Segment6 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getSegment6();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setSegment6((String)value);
            }
        },
        Segment7 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getSegment7();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setSegment7((String)value);
            }
        },
        Ends {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getEnds();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setEnds((Number)value);
            }
        },
        Picks {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getPicks();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setPicks((Number)value);
            }
        },
        Width {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getWidth();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setWidth((Number)value);
            }
        },
        Weave {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getWeave();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setWeave((String)value);
            }
        },
        Direction {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getDirection();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setDirection((String)value);
            }
        },
        Design {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getDesign();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setDesign((String)value);
            }
        },
        FabBlendType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getFabBlendType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setFabBlendType((String)value);
            }
        },
        Insertion {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getInsertion();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setInsertion((String)value);
            }
        },
        SelvedgeType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getSelvedgeType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setSelvedgeType((String)value);
            }
        },
        WeaveSize {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getWeaveSize();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setWeaveSize((String)value);
            }
        },
        YarnOutput {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getYarnOutput();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setYarnOutput((String)value);
            }
        },
        BaseImId {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBaseImId();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBaseImId((Number)value);
            }
        },
        FinishType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getFinishType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setFinishType((String)value);
            }
        },
        EngravedNum {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getEngravedNum();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setEngravedNum((String)value);
            }
        },
        Category {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCategory();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCategory((String)value);
            }
        },
        BaseDye {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBaseDye();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBaseDye((String)value);
            }
        },
        FolderCode {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getFolderCode();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setFolderCode((Integer)value);
            }
        },
        BgGusset {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgGusset();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgGusset((Number)value);
            }
        },
        BgFlap {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgFlap();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgFlap((Number)value);
            }
        },
        BgBagDimensions {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgBagDimensions();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgBagDimensions((String)value);
            }
        },
        BgPrintType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgPrintType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgPrintType((String)value);
            }
        },
        BgBagType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgBagType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgBagType((String)value);
            }
        },
        BgBtnMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgBtnMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgBtnMaterial((String)value);
            }
        },
        BgBtnColor {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgBtnColor();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgBtnColor((String)value);
            }
        },
        BgZipSize {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgZipSize();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgZipSize((BigDecimal)value);
            }
        },
        BgZipColor {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgZipColor();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgZipColor((String)value);
            }
        },
        BgZipMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgZipMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgZipMaterial((String)value);
            }
        },
        BgBagMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgBagMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgBagMaterial((String)value);
            }
        },
        BgMaterialSpecs {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgMaterialSpecs();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgMaterialSpecs((String)value);
            }
        },
        BgMaterialGuage {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgMaterialGuage();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgMaterialGuage((String)value);
            }
        },
        BgBagPocket {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgBagPocket();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgBagPocket((String)value);
            }
        },
        BgFpLength {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgFpLength();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgFpLength((Number)value);
            }
        },
        BgFpWidth {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgFpWidth();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgFpWidth((Number)value);
            }
        },
        BgBpLength {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgBpLength();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgBpLength((Number)value);
            }
        },
        BgBpWidth {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBgBpWidth();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBgBpWidth((Number)value);
            }
        },
        InsInsertType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getInsInsertType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setInsInsertType((String)value);
            }
        },
        InsGusset {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getInsGusset();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setInsGusset((Number)value);
            }
        },
        InsDimensions {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getInsDimensions();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setInsDimensions((String)value);
            }
        },
        InsMaterialGsm {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getInsMaterialGsm();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setInsMaterialGsm((String)value);
            }
        },
        InsPaperType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getInsPaperType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setInsPaperType((String)value);
            }
        },
        InsLamination {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getInsLamination();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setInsLamination((String)value);
            }
        },
        InsVarnish {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getInsVarnish();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setInsVarnish((String)value);
            }
        },
        InsFixType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getInsFixType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setInsFixType((String)value);
            }
        },
        StfStifnerType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStfStifnerType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStfStifnerType((String)value);
            }
        },
        StfGusset1 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStfGusset1();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStfGusset1((Number)value);
            }
        },
        StfGusset2 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStfGusset2();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStfGusset2((Number)value);
            }
        },
        StfPly {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStfPly();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStfPly((String)value);
            }
        },
        StfMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStfMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStfMaterial((String)value);
            }
        },
        CrtCartonType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtCartonType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtCartonType((String)value);
            }
        },
        CrtPrintedType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtPrintedType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtPrintedType((String)value);
            }
        },
        CrtOutWidth {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtOutWidth();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtOutWidth((Number)value);
            }
        },
        CrtOutLength {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtOutLength();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtOutLength((Number)value);
            }
        },
        CrtOutHeight {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtOutHeight();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtOutHeight((Number)value);
            }
        },
        CrtOutUom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtOutUom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtOutUom((String)value);
            }
        },
        CrtOutDimensions {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtOutDimensions();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtOutDimensions((String)value);
            }
        },
        CrtInnWidth {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtInnWidth();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtInnWidth((Number)value);
            }
        },
        CrtInnLength {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtInnLength();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtInnLength((Number)value);
            }
        },
        CrtInnHeight {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtInnHeight();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtInnHeight((Number)value);
            }
        },
        CrtInnUom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtInnUom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtInnUom((String)value);
            }
        },
        CrtInnDimensions {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtInnDimensions();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtInnDimensions((String)value);
            }
        },
        CrtPly {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtPly();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtPly((String)value);
            }
        },
        CrtMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtMaterial((String)value);
            }
        },
        CrtPrintType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtPrintType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtPrintType((String)value);
            }
        },
        CrtEct {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtEct();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtEct((String)value);
            }
        },
        CrtBusting {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtBusting();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtBusting((String)value);
            }
        },
        LblLableType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLblLableType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLblLableType((String)value);
            }
        },
        LblPlainLength {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLblPlainLength();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLblPlainLength((Number)value);
            }
        },
        LblPlainWidth {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLblPlainWidth();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLblPlainWidth((Number)value);
            }
        },
        LblPlainSwingMargin {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLblPlainSwingMargin();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLblPlainSwingMargin((String)value);
            }
        },
        LblPlainSize {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLblPlainSize();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLblPlainSize((String)value);
            }
        },
        LblFoldLength {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLblFoldLength();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLblFoldLength((Number)value);
            }
        },
        LblFoldWidth {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLblFoldWidth();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLblFoldWidth((Number)value);
            }
        },
        LblFoldSwingMargin {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLblFoldSwingMargin();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLblFoldSwingMargin((String)value);
            }
        },
        LblFoldSize {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLblFoldSize();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLblFoldSize((String)value);
            }
        },
        LblFoldingType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLblFoldingType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLblFoldingType((String)value);
            }
        },
        LblMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLblMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLblMaterial((String)value);
            }
        },
        ZipMaterialType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getZipMaterialType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setZipMaterialType((String)value);
            }
        },
        ZipTeethType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getZipTeethType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setZipTeethType((String)value);
            }
        },
        ZipUom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getZipUom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setZipUom((String)value);
            }
        },
        ThrThreadUsage {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getThrThreadUsage();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setThrThreadUsage((String)value);
            }
        },
        ThrThreadType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getThrThreadType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setThrThreadType((String)value);
            }
        },
        ThrMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getThrMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setThrMaterial((String)value);
            }
        },
        ThrTexSizePly {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getThrTexSizePly();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setThrTexSizePly((String)value);
            }
        },
        ElsElasticType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getElsElasticType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setElsElasticType((String)value);
            }
        },
        ElsCordType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getElsCordType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setElsCordType((String)value);
            }
        },
        ElsRatio {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getElsRatio();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setElsRatio((String)value);
            }
        },
        CtcMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCtcMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCtcMaterial((String)value);
            }
        },
        CtcDiaThickness {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCtcDiaThickness();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCtcDiaThickness((String)value);
            }
        },
        FusMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getFusMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setFusMaterial((String)value);
            }
        },
        FusGsm {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getFusGsm();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setFusGsm((String)value);
            }
        },
        NwvGsm {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getNwvGsm();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setNwvGsm((Integer)value);
            }
        },
        NwvMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getNwvMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setNwvMaterial((String)value);
            }
        },
        WdGsm {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getWdGsm();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setWdGsm((String)value);
            }
        },
        WdLoaft {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getWdLoaft();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setWdLoaft((String)value);
            }
        },
        WdMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getWdMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setWdMaterial((String)value);
            }
        },
        WdRatio {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getWdRatio();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setWdRatio((String)value);
            }
        },
        BfMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBfMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBfMaterial((String)value);
            }
        },
        BfMaterialType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBfMaterialType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBfMaterialType((String)value);
            }
        },
        BtnButtonSize {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBtnButtonSize();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBtnButtonSize((String)value);
            }
        },
        BtnHolesNum {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBtnHolesNum();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBtnHolesNum((Integer)value);
            }
        },
        BtnButtonType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBtnButtonType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBtnButtonType((String)value);
            }
        },
        BtnButtonMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBtnButtonMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBtnButtonMaterial((String)value);
            }
        },
        BtnButtonColor {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBtnButtonColor();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBtnButtonColor((String)value);
            }
        },
        PprPaperColor {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getPprPaperColor();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setPprPaperColor((String)value);
            }
        },
        PprPaperMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getPprPaperMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setPprPaperMaterial((String)value);
            }
        },
        StkStickerType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStkStickerType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStkStickerType((String)value);
            }
        },
        StkMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStkMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStkMaterial((String)value);
            }
        },
        StkPeelableType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStkPeelableType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStkPeelableType((String)value);
            }
        },
        StkPerforatedType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStkPerforatedType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStkPerforatedType((String)value);
            }
        },
        StkColor {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStkColor();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStkColor((String)value);
            }
        },
        StkText {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStkText();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStkText((String)value);
            }
        },
        SgItem {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getSgItem();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setSgItem((String)value);
            }
        },
        SgWeight {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getSgWeight();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setSgWeight((Number)value);
            }
        },
        TpColor {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getTpColor();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setTpColor((String)value);
            }
        },
        TpMaterialType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getTpMaterialType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setTpMaterialType((String)value);
            }
        },
        LacType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLacType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLacType((String)value);
            }
        },
        LacMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLacMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLacMaterial((String)value);
            }
        },
        LacUom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLacUom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLacUom((String)value);
            }
        },
        LacColor {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLacColor();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLacColor((String)value);
            }
        },
        EyColor {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getEyColor();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setEyColor((String)value);
            }
        },
        EyMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getEyMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setEyMaterial((String)value);
            }
        },
        EyFinish {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getEyFinish();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setEyFinish((String)value);
            }
        },
        HngMaterialCombination {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getHngMaterialCombination();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setHngMaterialCombination((String)value);
            }
        },
        HngThickness {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getHngThickness();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setHngThickness((Number)value);
            }
        },
        HngThicknessUom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getHngThicknessUom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setHngThicknessUom((String)value);
            }
        },
        HngHookType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getHngHookType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setHngHookType((String)value);
            }
        },
        StrDescription {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getStrDescription();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setStrDescription((String)value);
            }
        },
        TapMaterial {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getTapMaterial();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setTapMaterial((String)value);
            }
        },
        TapPrintText {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getTapPrintText();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setTapPrintText((String)value);
            }
        },
        AccHeight {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccHeight();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccHeight((Number)value);
            }
        },
        AccHeightUom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccHeightUom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccHeightUom((String)value);
            }
        },
        AccLength {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccLength();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccLength((Number)value);
            }
        },
        AccLengthUom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccLengthUom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccLengthUom((String)value);
            }
        },
        AccLength1 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccLength1();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccLength1((Number)value);
            }
        },
        AccLength1Uom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccLength1Uom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccLength1Uom((String)value);
            }
        },
        AccLength2 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccLength2();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccLength2((Number)value);
            }
        },
        AccLength2Uom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccLength2Uom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccLength2Uom((String)value);
            }
        },
        AccWidth {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccWidth();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccWidth((Number)value);
            }
        },
        AccWidthUom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccWidthUom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccWidthUom((String)value);
            }
        },
        AccWidth1 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccWidth1();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccWidth1((Number)value);
            }
        },
        AccWidth1Uom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccWidth1Uom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccWidth1Uom((String)value);
            }
        },
        AccWidth2 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccWidth2();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccWidth2((Number)value);
            }
        },
        AccWidth2Uom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccWidth2Uom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccWidth2Uom((String)value);
            }
        },
        AccDiameter {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccDiameter();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccDiameter((Number)value);
            }
        },
        AccDiameterUom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccDiameterUom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccDiameterUom((String)value);
            }
        },
        AccListPrice {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccListPrice();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccListPrice((BigDecimal)value);
            }
        },
        AccWastage {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccWastage();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccWastage((BigDecimal)value);
            }
        },
        AccRemarks {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccRemarks();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccRemarks((String)value);
            }
        },
        AccAccessoryType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccAccessoryType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccAccessoryType((String)value);
            }
        },
        CtcItemType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCtcItemType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCtcItemType((String)value);
            }
        },
        WarpContraction {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getWarpContraction();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setWarpContraction((Number)value);
            }
        },
        WeftContraction {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getWeftContraction();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setWeftContraction((Number)value);
            }
        },
        CreatedBy {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        },
        CreationDate {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        },
        LastUpdatedBy {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        },
        LastUpdateDate {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        },
        RespId {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getRespId();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setRespId((String)value);
            }
        },
        Segment3Value {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getSegment3Value();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setSegment3Value((String)value);
            }
        },
        AccSize {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccSize();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccSize((String)value);
            }
        },
        AccSizeDesc {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccSizeDesc();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccSizeDesc((String)value);
            }
        },
        MinOrderQty {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getMinOrderQty();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setMinOrderQty((Number)value);
            }
        },
        AccItemUom {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccItemUom();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccItemUom((String)value);
            }
        },
        Dyed {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getDyed();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setDyed((String)value);
            }
        },
        DyeColor {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getDyeColor();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setDyeColor((String)value);
            }
        },
        RefLotNum {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getRefLotNum();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setRefLotNum((String)value);
            }
        },
        DyeCode {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getDyeCode();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setDyeCode((String)value);
            }
        },
        DyeStandard {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getDyeStandard();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setDyeStandard((String)value);
            }
        },
        WvFabricBlend {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getWvFabricBlend();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setWvFabricBlend((String)value);
            }
        },
        AccCustVal {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getAccCustVal();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAccCustVal((String)value);
            }
        },
        InsText {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getInsText();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setInsText((String)value);
            }
        },
        CrtText {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getCrtText();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setCrtText((String)value);
            }
        },
        XxpmYarnBlend {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmYarnBlend();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmYarnType {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmYarnType();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmWarp {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmWarp();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmWeft {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmWeft();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmItemMaster {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmItemMaster();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        BaseImIdXxpmItemMaster {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBaseImIdXxpmItemMaster();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBaseImIdXxpmItemMaster((XxpmItemMasterImpl)value);
            }
        },
        XxpmWarp1 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmWarp1();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmAttachments {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmAttachments();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmWeft1 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmWeft1();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmYarnType1 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmYarnType1();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmItemMaster1 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmItemMaster1();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        BaseImIdXxpmItemMaster1 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getBaseImIdXxpmItemMaster1();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setBaseImIdXxpmItemMaster1((XxpmItemMasterImpl)value);
            }
        },
        XxpmYarnBlend1 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmYarnBlend1();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmArticleBomAccessories {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmArticleBomAccessories();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmWeft2 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmWeft2();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmWeft3 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmWeft3();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmArticleBomFabric {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmArticleBomFabric();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmWarp2 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmWarp2();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmWarp3 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmWarp3();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmAttachments1 {
            public Object get(XxpmItemMasterImpl obj) {
                return obj.getXxpmAttachments1();
            }

            public void put(XxpmItemMasterImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxpmItemMasterImpl object);

        public abstract void put(XxpmItemMasterImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    Row curRow = null;


    //public static final int XXPMWEFT1 = AttributesEnum.XxpmWeft1.index();


    public static final int SEGMENT2 = AttributesEnum.Segment2.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int YARNCOUNT = AttributesEnum.YarnCount.index();
    public static final int YARNPLIES = AttributesEnum.YarnPlies.index();
    public static final int YARNTYPE = AttributesEnum.YarnType.index();
    public static final int MEASURINGSYSTEM =
        AttributesEnum.MeasuringSystem.index();
    public static final int YARNSTATUS = AttributesEnum.YarnStatus.index();
    public static final int SEGMENT1 = AttributesEnum.Segment1.index();
    public static final int IMID = AttributesEnum.ImId.index();
    public static final int EBSITEMID = AttributesEnum.EbsItemId.index();
    public static final int ITEMSTATUSFLAG =
        AttributesEnum.ItemStatusFlag.index();
    public static final int SEGMENT3 = AttributesEnum.Segment3.index();
    public static final int SEGMENT4 = AttributesEnum.Segment4.index();
    public static final int SEGMENT5 = AttributesEnum.Segment5.index();
    public static final int SEGMENT6 = AttributesEnum.Segment6.index();
    public static final int SEGMENT7 = AttributesEnum.Segment7.index();
    public static final int ENDS = AttributesEnum.Ends.index();
    public static final int PICKS = AttributesEnum.Picks.index();
    public static final int WIDTH = AttributesEnum.Width.index();
    public static final int WEAVE = AttributesEnum.Weave.index();
    public static final int DIRECTION = AttributesEnum.Direction.index();
    public static final int DESIGN = AttributesEnum.Design.index();
    public static final int FABBLENDTYPE = AttributesEnum.FabBlendType.index();
    public static final int INSERTION = AttributesEnum.Insertion.index();
    public static final int SELVEDGETYPE = AttributesEnum.SelvedgeType.index();
    public static final int WEAVESIZE = AttributesEnum.WeaveSize.index();
    public static final int YARNOUTPUT = AttributesEnum.YarnOutput.index();
    public static final int BASEIMID = AttributesEnum.BaseImId.index();
    public static final int FINISHTYPE = AttributesEnum.FinishType.index();
    public static final int ENGRAVEDNUM = AttributesEnum.EngravedNum.index();
    public static final int CATEGORY = AttributesEnum.Category.index();
    public static final int BASEDYE = AttributesEnum.BaseDye.index();
    public static final int FOLDERCODE = AttributesEnum.FolderCode.index();
    public static final int BGGUSSET = AttributesEnum.BgGusset.index();
    public static final int BGFLAP = AttributesEnum.BgFlap.index();
    public static final int BGBAGDIMENSIONS =
        AttributesEnum.BgBagDimensions.index();
    public static final int BGPRINTTYPE = AttributesEnum.BgPrintType.index();
    public static final int BGBAGTYPE = AttributesEnum.BgBagType.index();
    public static final int BGBTNMATERIAL =
        AttributesEnum.BgBtnMaterial.index();
    public static final int BGBTNCOLOR = AttributesEnum.BgBtnColor.index();
    public static final int BGZIPSIZE = AttributesEnum.BgZipSize.index();
    public static final int BGZIPCOLOR = AttributesEnum.BgZipColor.index();
    public static final int BGZIPMATERIAL =
        AttributesEnum.BgZipMaterial.index();
    public static final int BGBAGMATERIAL =
        AttributesEnum.BgBagMaterial.index();
    public static final int BGMATERIALSPECS =
        AttributesEnum.BgMaterialSpecs.index();
    public static final int BGMATERIALGUAGE =
        AttributesEnum.BgMaterialGuage.index();
    public static final int BGBAGPOCKET = AttributesEnum.BgBagPocket.index();
    public static final int BGFPLENGTH = AttributesEnum.BgFpLength.index();
    public static final int BGFPWIDTH = AttributesEnum.BgFpWidth.index();
    public static final int BGBPLENGTH = AttributesEnum.BgBpLength.index();
    public static final int BGBPWIDTH = AttributesEnum.BgBpWidth.index();
    public static final int INSINSERTTYPE =
        AttributesEnum.InsInsertType.index();
    public static final int INSGUSSET = AttributesEnum.InsGusset.index();
    public static final int INSDIMENSIONS =
        AttributesEnum.InsDimensions.index();
    public static final int INSMATERIALGSM =
        AttributesEnum.InsMaterialGsm.index();
    public static final int INSPAPERTYPE = AttributesEnum.InsPaperType.index();
    public static final int INSLAMINATION =
        AttributesEnum.InsLamination.index();
    public static final int INSVARNISH = AttributesEnum.InsVarnish.index();
    public static final int INSFIXTYPE = AttributesEnum.InsFixType.index();
    public static final int STFSTIFNERTYPE =
        AttributesEnum.StfStifnerType.index();
    public static final int STFGUSSET1 = AttributesEnum.StfGusset1.index();
    public static final int STFGUSSET2 = AttributesEnum.StfGusset2.index();
    public static final int STFPLY = AttributesEnum.StfPly.index();
    public static final int STFMATERIAL = AttributesEnum.StfMaterial.index();
    public static final int CRTCARTONTYPE =
        AttributesEnum.CrtCartonType.index();
    public static final int CRTPRINTEDTYPE =
        AttributesEnum.CrtPrintedType.index();
    public static final int CRTOUTWIDTH = AttributesEnum.CrtOutWidth.index();
    public static final int CRTOUTLENGTH = AttributesEnum.CrtOutLength.index();
    public static final int CRTOUTHEIGHT = AttributesEnum.CrtOutHeight.index();
    public static final int CRTOUTUOM = AttributesEnum.CrtOutUom.index();
    public static final int CRTOUTDIMENSIONS =
        AttributesEnum.CrtOutDimensions.index();
    public static final int CRTINNWIDTH = AttributesEnum.CrtInnWidth.index();
    public static final int CRTINNLENGTH = AttributesEnum.CrtInnLength.index();
    public static final int CRTINNHEIGHT = AttributesEnum.CrtInnHeight.index();
    public static final int CRTINNUOM = AttributesEnum.CrtInnUom.index();
    public static final int CRTINNDIMENSIONS =
        AttributesEnum.CrtInnDimensions.index();
    public static final int CRTPLY = AttributesEnum.CrtPly.index();
    public static final int CRTMATERIAL = AttributesEnum.CrtMaterial.index();
    public static final int CRTPRINTTYPE = AttributesEnum.CrtPrintType.index();
    public static final int CRTECT = AttributesEnum.CrtEct.index();
    public static final int CRTBUSTING = AttributesEnum.CrtBusting.index();
    public static final int LBLLABLETYPE = AttributesEnum.LblLableType.index();
    public static final int LBLPLAINLENGTH =
        AttributesEnum.LblPlainLength.index();
    public static final int LBLPLAINWIDTH =
        AttributesEnum.LblPlainWidth.index();
    public static final int LBLPLAINSWINGMARGIN =
        AttributesEnum.LblPlainSwingMargin.index();
    public static final int LBLPLAINSIZE = AttributesEnum.LblPlainSize.index();
    public static final int LBLFOLDLENGTH =
        AttributesEnum.LblFoldLength.index();
    public static final int LBLFOLDWIDTH = AttributesEnum.LblFoldWidth.index();
    public static final int LBLFOLDSWINGMARGIN =
        AttributesEnum.LblFoldSwingMargin.index();
    public static final int LBLFOLDSIZE = AttributesEnum.LblFoldSize.index();
    public static final int LBLFOLDINGTYPE =
        AttributesEnum.LblFoldingType.index();
    public static final int LBLMATERIAL = AttributesEnum.LblMaterial.index();
    public static final int ZIPMATERIALTYPE =
        AttributesEnum.ZipMaterialType.index();
    public static final int ZIPTEETHTYPE = AttributesEnum.ZipTeethType.index();
    public static final int ZIPUOM = AttributesEnum.ZipUom.index();
    public static final int THRTHREADUSAGE =
        AttributesEnum.ThrThreadUsage.index();
    public static final int THRTHREADTYPE =
        AttributesEnum.ThrThreadType.index();
    public static final int THRMATERIAL = AttributesEnum.ThrMaterial.index();
    public static final int THRTEXSIZEPLY =
        AttributesEnum.ThrTexSizePly.index();
    public static final int ELSELASTICTYPE =
        AttributesEnum.ElsElasticType.index();
    public static final int ELSCORDTYPE = AttributesEnum.ElsCordType.index();
    public static final int ELSRATIO = AttributesEnum.ElsRatio.index();
    public static final int CTCMATERIAL = AttributesEnum.CtcMaterial.index();
    public static final int CTCDIATHICKNESS =
        AttributesEnum.CtcDiaThickness.index();
    public static final int FUSMATERIAL = AttributesEnum.FusMaterial.index();
    public static final int FUSGSM = AttributesEnum.FusGsm.index();
    public static final int NWVGSM = AttributesEnum.NwvGsm.index();
    public static final int NWVMATERIAL = AttributesEnum.NwvMaterial.index();
    public static final int WDGSM = AttributesEnum.WdGsm.index();
    public static final int WDLOAFT = AttributesEnum.WdLoaft.index();
    public static final int WDMATERIAL = AttributesEnum.WdMaterial.index();
    public static final int WDRATIO = AttributesEnum.WdRatio.index();
    public static final int BFMATERIAL = AttributesEnum.BfMaterial.index();
    public static final int BFMATERIALTYPE =
        AttributesEnum.BfMaterialType.index();
    public static final int BTNBUTTONSIZE =
        AttributesEnum.BtnButtonSize.index();
    public static final int BTNHOLESNUM = AttributesEnum.BtnHolesNum.index();
    public static final int BTNBUTTONTYPE =
        AttributesEnum.BtnButtonType.index();
    public static final int BTNBUTTONMATERIAL =
        AttributesEnum.BtnButtonMaterial.index();
    public static final int BTNBUTTONCOLOR =
        AttributesEnum.BtnButtonColor.index();
    public static final int PPRPAPERCOLOR =
        AttributesEnum.PprPaperColor.index();
    public static final int PPRPAPERMATERIAL =
        AttributesEnum.PprPaperMaterial.index();
    public static final int STKSTICKERTYPE =
        AttributesEnum.StkStickerType.index();
    public static final int STKMATERIAL = AttributesEnum.StkMaterial.index();
    public static final int STKPEELABLETYPE =
        AttributesEnum.StkPeelableType.index();
    public static final int STKPERFORATEDTYPE =
        AttributesEnum.StkPerforatedType.index();
    public static final int STKCOLOR = AttributesEnum.StkColor.index();
    public static final int STKTEXT = AttributesEnum.StkText.index();
    public static final int SGITEM = AttributesEnum.SgItem.index();
    public static final int SGWEIGHT = AttributesEnum.SgWeight.index();
    public static final int TPCOLOR = AttributesEnum.TpColor.index();
    public static final int TPMATERIALTYPE =
        AttributesEnum.TpMaterialType.index();
    public static final int LACTYPE = AttributesEnum.LacType.index();
    public static final int LACMATERIAL = AttributesEnum.LacMaterial.index();
    public static final int LACUOM = AttributesEnum.LacUom.index();
    public static final int LACCOLOR = AttributesEnum.LacColor.index();
    public static final int EYCOLOR = AttributesEnum.EyColor.index();
    public static final int EYMATERIAL = AttributesEnum.EyMaterial.index();
    public static final int EYFINISH = AttributesEnum.EyFinish.index();
    public static final int HNGMATERIALCOMBINATION =
        AttributesEnum.HngMaterialCombination.index();
    public static final int HNGTHICKNESS = AttributesEnum.HngThickness.index();
    public static final int HNGTHICKNESSUOM =
        AttributesEnum.HngThicknessUom.index();
    public static final int HNGHOOKTYPE = AttributesEnum.HngHookType.index();
    public static final int STRDESCRIPTION =
        AttributesEnum.StrDescription.index();
    public static final int TAPMATERIAL = AttributesEnum.TapMaterial.index();
    public static final int TAPPRINTTEXT = AttributesEnum.TapPrintText.index();
    public static final int ACCHEIGHT = AttributesEnum.AccHeight.index();
    public static final int ACCHEIGHTUOM = AttributesEnum.AccHeightUom.index();
    public static final int ACCLENGTH = AttributesEnum.AccLength.index();
    public static final int ACCLENGTHUOM = AttributesEnum.AccLengthUom.index();
    public static final int ACCLENGTH1 = AttributesEnum.AccLength1.index();
    public static final int ACCLENGTH1UOM =
        AttributesEnum.AccLength1Uom.index();
    public static final int ACCLENGTH2 = AttributesEnum.AccLength2.index();
    public static final int ACCLENGTH2UOM =
        AttributesEnum.AccLength2Uom.index();
    public static final int ACCWIDTH = AttributesEnum.AccWidth.index();
    public static final int ACCWIDTHUOM = AttributesEnum.AccWidthUom.index();
    public static final int ACCWIDTH1 = AttributesEnum.AccWidth1.index();
    public static final int ACCWIDTH1UOM = AttributesEnum.AccWidth1Uom.index();
    public static final int ACCWIDTH2 = AttributesEnum.AccWidth2.index();
    public static final int ACCWIDTH2UOM = AttributesEnum.AccWidth2Uom.index();
    public static final int ACCDIAMETER = AttributesEnum.AccDiameter.index();
    public static final int ACCDIAMETERUOM =
        AttributesEnum.AccDiameterUom.index();
    public static final int ACCLISTPRICE = AttributesEnum.AccListPrice.index();
    public static final int ACCWASTAGE = AttributesEnum.AccWastage.index();
    public static final int ACCREMARKS = AttributesEnum.AccRemarks.index();
    public static final int ACCACCESSORYTYPE =
        AttributesEnum.AccAccessoryType.index();
    public static final int CTCITEMTYPE = AttributesEnum.CtcItemType.index();
    public static final int WARPCONTRACTION =
        AttributesEnum.WarpContraction.index();
    public static final int WEFTCONTRACTION =
        AttributesEnum.WeftContraction.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY =
        AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE =
        AttributesEnum.LastUpdateDate.index();
    public static final int RESPID = AttributesEnum.RespId.index();
    public static final int SEGMENT3VALUE =
        AttributesEnum.Segment3Value.index();
    public static final int ACCSIZE = AttributesEnum.AccSize.index();
    public static final int ACCSIZEDESC = AttributesEnum.AccSizeDesc.index();
    public static final int MINORDERQTY = AttributesEnum.MinOrderQty.index();
    public static final int ACCITEMUOM = AttributesEnum.AccItemUom.index();
    public static final int DYED = AttributesEnum.Dyed.index();
    public static final int DYECOLOR = AttributesEnum.DyeColor.index();
    public static final int REFLOTNUM = AttributesEnum.RefLotNum.index();
    public static final int DYECODE = AttributesEnum.DyeCode.index();
    public static final int DYESTANDARD = AttributesEnum.DyeStandard.index();
    public static final int WVFABRICBLEND =
        AttributesEnum.WvFabricBlend.index();
    public static final int ACCCUSTVAL = AttributesEnum.AccCustVal.index();
    public static final int INSTEXT = AttributesEnum.InsText.index();
    public static final int CRTTEXT = AttributesEnum.CrtText.index();
    public static final int XXPMYARNBLEND =
        AttributesEnum.XxpmYarnBlend.index();
    public static final int XXPMYARNTYPE = AttributesEnum.XxpmYarnType.index();
    public static final int XXPMWARP = AttributesEnum.XxpmWarp.index();
    public static final int XXPMWEFT = AttributesEnum.XxpmWeft.index();
    public static final int XXPMITEMMASTER =
        AttributesEnum.XxpmItemMaster.index();
    public static final int BASEIMIDXXPMITEMMASTER =
        AttributesEnum.BaseImIdXxpmItemMaster.index();
    public static final int XXPMWARP1 = AttributesEnum.XxpmWarp1.index();
    public static final int XXPMATTACHMENTS =
        AttributesEnum.XxpmAttachments.index();
    public static final int XXPMWEFT1 = AttributesEnum.XxpmWeft1.index();
    public static final int XXPMYARNTYPE1 =
        AttributesEnum.XxpmYarnType1.index();
    public static final int XXPMITEMMASTER1 =
        AttributesEnum.XxpmItemMaster1.index();
    public static final int BASEIMIDXXPMITEMMASTER1 =
        AttributesEnum.BaseImIdXxpmItemMaster1.index();
    public static final int XXPMYARNBLEND1 =
        AttributesEnum.XxpmYarnBlend1.index();
    public static final int XXPMARTICLEBOMACCESSORIES =
        AttributesEnum.XxpmArticleBomAccessories.index();
    public static final int XXPMWEFT2 = AttributesEnum.XxpmWeft2.index();
    public static final int XXPMWEFT3 = AttributesEnum.XxpmWeft3.index();
    public static final int XXPMARTICLEBOMFABRIC =
        AttributesEnum.XxpmArticleBomFabric.index();
    public static final int XXPMWARP2 = AttributesEnum.XxpmWarp2.index();
    public static final int XXPMWARP3 = AttributesEnum.XxpmWarp3.index();
    public static final int XXPMATTACHMENTS1 =
        AttributesEnum.XxpmAttachments1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxpmItemMasterImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject =
                    EntityDefImpl.findDefObject("ncl.pm.model.bc.eo.XxpmItemMaster");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Segment2, using the alias name Segment2.
     * @return the Segment2
     */
    public String getSegment2() {
        return (String)getAttributeInternal(SEGMENT2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Segment2.
     * @param value value to set the Segment2
     */
    public void setSegment2(String value) {
        setAttributeInternal(SEGMENT2, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for YarnCount, using the alias name YarnCount.
     * @return the YarnCount
     */
    public Number getYarnCount() {
        return (Number)getAttributeInternal(YARNCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for YarnCount.
     * @param value value to set the YarnCount
     */
    public void setYarnCount(Number value) {
        setAttributeInternal(YARNCOUNT, value);
    }

    /**
     * Gets the attribute value for YarnPlies, using the alias name YarnPlies.
     * @return the YarnPlies
     */
    public String getYarnPlies() {
        return (String)getAttributeInternal(YARNPLIES);
    }

    /**
     * Sets <code>value</code> as the attribute value for YarnPlies.
     * @param value value to set the YarnPlies
     */
    public void setYarnPlies(String value) {
        setAttributeInternal(YARNPLIES, value);
    }

    /**
     * Gets the attribute value for YarnType, using the alias name YarnType.
     * @return the YarnType
     */
    public String getYarnType() {
        return (String)getAttributeInternal(YARNTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for YarnType.
     * @param value value to set the YarnType
     */
    public void setYarnType(String value) {
        setAttributeInternal(YARNTYPE, value);
    }

    /**
     * Gets the attribute value for MeasuringSystem, using the alias name MeasuringSystem.
     * @return the MeasuringSystem
     */
    public String getMeasuringSystem() {
        return (String)getAttributeInternal(MEASURINGSYSTEM);
    }

    /**
     * Sets <code>value</code> as the attribute value for MeasuringSystem.
     * @param value value to set the MeasuringSystem
     */
    public void setMeasuringSystem(String value) {
        setAttributeInternal(MEASURINGSYSTEM, value);
    }

    /**
     * Gets the attribute value for YarnStatus, using the alias name YarnStatus.
     * @return the YarnStatus
     */
    public String getYarnStatus() {
        return (String)getAttributeInternal(YARNSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for YarnStatus.
     * @param value value to set the YarnStatus
     */
    public void setYarnStatus(String value) {
        setAttributeInternal(YARNSTATUS, value);
    }

    /**
     * Gets the attribute value for Segment1, using the alias name Segment1.
     * @return the Segment1
     */
    public String getSegment1() {
        return (String)getAttributeInternal(SEGMENT1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Segment1.
     * @param value value to set the Segment1
     */
    public void setSegment1(String value) {
        setAttributeInternal(SEGMENT1, value);
    }

    /**
     * Gets the attribute value for ImId, using the alias name ImId.
     * @return the ImId
     */
    public DBSequence getImId() {
        return (DBSequence)getAttributeInternal(IMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImId.
     * @param value value to set the ImId
     */
    public void setImId(DBSequence value) {
        setAttributeInternal(IMID, value);
    }


    /**
     * Gets the attribute value for EbsItemId, using the alias name EbsItemId.
     * @return the EbsItemId
     */
    public Number getEbsItemId() {
        return (Number)getAttributeInternal(EBSITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EbsItemId.
     * @param value value to set the EbsItemId
     */
    public void setEbsItemId(Number value) {
        setAttributeInternal(EBSITEMID, value);
    }

    /**
     * Gets the attribute value for ItemStatusFlag, using the alias name ItemStatusFlag.
     * @return the ItemStatusFlag
     */
    public Integer getItemStatusFlag() {
        return (Integer)getAttributeInternal(ITEMSTATUSFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemStatusFlag.
     * @param value value to set the ItemStatusFlag
     */
    public void setItemStatusFlag(Integer value) {
        setAttributeInternal(ITEMSTATUSFLAG, value);
    }

    /**
     * Gets the attribute value for Segment3, using the alias name Segment3.
     * @return the Segment3
     */
    public String getSegment3() {
        return (String)getAttributeInternal(SEGMENT3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Segment3.
     * @param value value to set the Segment3
     */
    public void setSegment3(String value) {
        setAttributeInternal(SEGMENT3, value);
    }

    /**
     * Gets the attribute value for Segment4, using the alias name Segment4.
     * @return the Segment4
     */
    public String getSegment4() {
        return (String)getAttributeInternal(SEGMENT4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Segment4.
     * @param value value to set the Segment4
     */
    public void setSegment4(String value) {
        setAttributeInternal(SEGMENT4, value);
    }

    /**
     * Gets the attribute value for Segment5, using the alias name Segment5.
     * @return the Segment5
     */
    public String getSegment5() {
        return (String)getAttributeInternal(SEGMENT5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Segment5.
     * @param value value to set the Segment5
     */
    public void setSegment5(String value) {
        setAttributeInternal(SEGMENT5, value);
    }

    /**
     * Gets the attribute value for Segment6, using the alias name Segment6.
     * @return the Segment6
     */
    public String getSegment6() {
        return (String)getAttributeInternal(SEGMENT6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Segment6.
     * @param value value to set the Segment6
     */
    public void setSegment6(String value) {
        setAttributeInternal(SEGMENT6, value);
    }

    /**
     * Gets the attribute value for Segment7, using the alias name Segment7.
     * @return the Segment7
     */
    public String getSegment7() {
        return (String)getAttributeInternal(SEGMENT7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Segment7.
     * @param value value to set the Segment7
     */
    public void setSegment7(String value) {
        setAttributeInternal(SEGMENT7, value);
    }

    /**
     * Gets the attribute value for Ends, using the alias name Ends.
     * @return the Ends
     */
    public Number getEnds() {
        return (Number)getAttributeInternal(ENDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ends.
     * @param value value to set the Ends
     */
    public void setEnds(Number value) {
        setAttributeInternal(ENDS, value);
    }

    /**
     * Gets the attribute value for Picks, using the alias name Picks.
     * @return the Picks
     */
    public Number getPicks() {
        return (Number)getAttributeInternal(PICKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Picks.
     * @param value value to set the Picks
     */
    public void setPicks(Number value) {
        setAttributeInternal(PICKS, value);
    }

    /**
     * Gets the attribute value for Width, using the alias name Width.
     * @return the Width
     */
    public Number getWidth() {
        return (Number)getAttributeInternal(WIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Width.
     * @param value value to set the Width
     */
    public void setWidth(Number value) {
        setAttributeInternal(WIDTH, value);
    }

    /**
     * Gets the attribute value for Weave, using the alias name Weave.
     * @return the Weave
     */
    public String getWeave() {
        return (String)getAttributeInternal(WEAVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Weave.
     * @param value value to set the Weave
     */
    public void setWeave(String value) {
        setAttributeInternal(WEAVE, value);
    }

    /**
     * Gets the attribute value for Direction, using the alias name Direction.
     * @return the Direction
     */
    public String getDirection() {
        return (String)getAttributeInternal(DIRECTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Direction.
     * @param value value to set the Direction
     */
    public void setDirection(String value) {
        setAttributeInternal(DIRECTION, value);
    }

    /**
     * Gets the attribute value for Design, using the alias name Design.
     * @return the Design
     */
    public String getDesign() {
        return (String)getAttributeInternal(DESIGN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Design.
     * @param value value to set the Design
     */
    public void setDesign(String value) {
        setAttributeInternal(DESIGN, value);
    }

    /**
     * Gets the attribute value for FabBlendType, using the alias name FabBlendType.
     * @return the FabBlendType
     */
    public String getFabBlendType() {
        return (String)getAttributeInternal(FABBLENDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FabBlendType.
     * @param value value to set the FabBlendType
     */
    public void setFabBlendType(String value) {
        setAttributeInternal(FABBLENDTYPE, value);
    }

    /**
     * Gets the attribute value for Insertion, using the alias name Insertion.
     * @return the Insertion
     */
    public String getInsertion() {
        return (String)getAttributeInternal(INSERTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Insertion.
     * @param value value to set the Insertion
     */
    public void setInsertion(String value) {
        setAttributeInternal(INSERTION, value);
    }

    /**
     * Gets the attribute value for SelvedgeType, using the alias name SelvedgeType.
     * @return the SelvedgeType
     */
    public String getSelvedgeType() {
        return (String)getAttributeInternal(SELVEDGETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SelvedgeType.
     * @param value value to set the SelvedgeType
     */
    public void setSelvedgeType(String value) {
        setAttributeInternal(SELVEDGETYPE, value);
    }

    /**
     * Gets the attribute value for WeaveSize, using the alias name WeaveSize.
     * @return the WeaveSize
     */
    public String getWeaveSize() {
        return (String)getAttributeInternal(WEAVESIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WeaveSize.
     * @param value value to set the WeaveSize
     */
    public void setWeaveSize(String value) {
        setAttributeInternal(WEAVESIZE, value);
    }

    /**
     * Gets the attribute value for YarnOutput, using the alias name YarnOutput.
     * @return the YarnOutput
     */
    public String getYarnOutput() {
        return (String)getAttributeInternal(YARNOUTPUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for YarnOutput.
     * @param value value to set the YarnOutput
     */
    public void setYarnOutput(String value) {
        setAttributeInternal(YARNOUTPUT, value);
    }

    /**
     * Gets the attribute value for BaseImId, using the alias name BaseImId.
     * @return the BaseImId
     */
    public Number getBaseImId() {
        return (Number)getAttributeInternal(BASEIMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BaseImId.
     * @param value value to set the BaseImId
     */
    public void setBaseImId(Number value) {
        setAttributeInternal(BASEIMID, value);
    }

    /**
     * Gets the attribute value for FinishType, using the alias name FinishType.
     * @return the FinishType
     */
    public String getFinishType() {
        return (String)getAttributeInternal(FINISHTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FinishType.
     * @param value value to set the FinishType
     */
    public void setFinishType(String value) {
        setAttributeInternal(FINISHTYPE, value);
    }

    /**
     * Gets the attribute value for EngravedNum, using the alias name EngravedNum.
     * @return the EngravedNum
     */
    public String getEngravedNum() {
        return (String)getAttributeInternal(ENGRAVEDNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EngravedNum.
     * @param value value to set the EngravedNum
     */
    public void setEngravedNum(String value) {
        setAttributeInternal(ENGRAVEDNUM, value);
    }

    /**
     * Gets the attribute value for Category, using the alias name Category.
     * @return the Category
     */
    public String getCategory() {
        return (String)getAttributeInternal(CATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Category.
     * @param value value to set the Category
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**
     * Gets the attribute value for BaseDye, using the alias name BaseDye.
     * @return the BaseDye
     */
    public String getBaseDye() {
        return (String)getAttributeInternal(BASEDYE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BaseDye.
     * @param value value to set the BaseDye
     */
    public void setBaseDye(String value) {
        setAttributeInternal(BASEDYE, value);
    }

    /**
     * Gets the attribute value for FolderCode, using the alias name FolderCode.
     * @return the FolderCode
     */
    public Integer getFolderCode() {
        return (Integer)getAttributeInternal(FOLDERCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FolderCode.
     * @param value value to set the FolderCode
     */
    public void setFolderCode(Integer value) {
        setAttributeInternal(FOLDERCODE, value);
    }

    /**
     * Gets the attribute value for BgGusset, using the alias name BgGusset.
     * @return the BgGusset
     */
    public Number getBgGusset() {
        return (Number)getAttributeInternal(BGGUSSET);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgGusset.
     * @param value value to set the BgGusset
     */
    public void setBgGusset(Number value) {
        setAttributeInternal(BGGUSSET, value);
    }

    /**
     * Gets the attribute value for BgFlap, using the alias name BgFlap.
     * @return the BgFlap
     */
    public Number getBgFlap() {
        return (Number)getAttributeInternal(BGFLAP);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgFlap.
     * @param value value to set the BgFlap
     */
    public void setBgFlap(Number value) {
        setAttributeInternal(BGFLAP, value);
    }

    /**
     * Gets the attribute value for BgBagDimensions, using the alias name BgBagDimensions.
     * @return the BgBagDimensions
     */
    public String getBgBagDimensions() {
        return (String)getAttributeInternal(BGBAGDIMENSIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgBagDimensions.
     * @param value value to set the BgBagDimensions
     */
    public void setBgBagDimensions(String value) {
        setAttributeInternal(BGBAGDIMENSIONS, value);
    }

    /**
     * Gets the attribute value for BgPrintType, using the alias name BgPrintType.
     * @return the BgPrintType
     */
    public String getBgPrintType() {
        return (String)getAttributeInternal(BGPRINTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgPrintType.
     * @param value value to set the BgPrintType
     */
    public void setBgPrintType(String value) {
        setAttributeInternal(BGPRINTTYPE, value);
    }

    /**
     * Gets the attribute value for BgBagType, using the alias name BgBagType.
     * @return the BgBagType
     */
    public String getBgBagType() {
        return (String)getAttributeInternal(BGBAGTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgBagType.
     * @param value value to set the BgBagType
     */
    public void setBgBagType(String value) {
        setAttributeInternal(BGBAGTYPE, value);
    }

    /**
     * Gets the attribute value for BgBtnMaterial, using the alias name BgBtnMaterial.
     * @return the BgBtnMaterial
     */
    public String getBgBtnMaterial() {
        return (String)getAttributeInternal(BGBTNMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgBtnMaterial.
     * @param value value to set the BgBtnMaterial
     */
    public void setBgBtnMaterial(String value) {
        setAttributeInternal(BGBTNMATERIAL, value);
    }

    /**
     * Gets the attribute value for BgBtnColor, using the alias name BgBtnColor.
     * @return the BgBtnColor
     */
    public String getBgBtnColor() {
        return (String)getAttributeInternal(BGBTNCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgBtnColor.
     * @param value value to set the BgBtnColor
     */
    public void setBgBtnColor(String value) {
        setAttributeInternal(BGBTNCOLOR, value);
    }

    /**
     * Gets the attribute value for BgZipSize, using the alias name BgZipSize.
     * @return the BgZipSize
     */
    public BigDecimal getBgZipSize() {
        return (BigDecimal)getAttributeInternal(BGZIPSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgZipSize.
     * @param value value to set the BgZipSize
     */
    public void setBgZipSize(BigDecimal value) {
        setAttributeInternal(BGZIPSIZE, value);
    }

    /**
     * Gets the attribute value for BgZipColor, using the alias name BgZipColor.
     * @return the BgZipColor
     */
    public String getBgZipColor() {
        return (String)getAttributeInternal(BGZIPCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgZipColor.
     * @param value value to set the BgZipColor
     */
    public void setBgZipColor(String value) {
        setAttributeInternal(BGZIPCOLOR, value);
    }

    /**
     * Gets the attribute value for BgZipMaterial, using the alias name BgZipMaterial.
     * @return the BgZipMaterial
     */
    public String getBgZipMaterial() {
        return (String)getAttributeInternal(BGZIPMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgZipMaterial.
     * @param value value to set the BgZipMaterial
     */
    public void setBgZipMaterial(String value) {
        setAttributeInternal(BGZIPMATERIAL, value);
    }

    /**
     * Gets the attribute value for BgBagMaterial, using the alias name BgBagMaterial.
     * @return the BgBagMaterial
     */
    public String getBgBagMaterial() {
        return (String)getAttributeInternal(BGBAGMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgBagMaterial.
     * @param value value to set the BgBagMaterial
     */
    public void setBgBagMaterial(String value) {
        setAttributeInternal(BGBAGMATERIAL, value);
    }

    /**
     * Gets the attribute value for BgMaterialSpecs, using the alias name BgMaterialSpecs.
     * @return the BgMaterialSpecs
     */
    public String getBgMaterialSpecs() {
        return (String)getAttributeInternal(BGMATERIALSPECS);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgMaterialSpecs.
     * @param value value to set the BgMaterialSpecs
     */
    public void setBgMaterialSpecs(String value) {
        setAttributeInternal(BGMATERIALSPECS, value);
    }

    /**
     * Gets the attribute value for BgMaterialGuage, using the alias name BgMaterialGuage.
     * @return the BgMaterialGuage
     */
    public String getBgMaterialGuage() {
        return (String)getAttributeInternal(BGMATERIALGUAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgMaterialGuage.
     * @param value value to set the BgMaterialGuage
     */
    public void setBgMaterialGuage(String value) {
        setAttributeInternal(BGMATERIALGUAGE, value);
    }

    /**
     * Gets the attribute value for BgBagPocket, using the alias name BgBagPocket.
     * @return the BgBagPocket
     */
    public String getBgBagPocket() {
        return (String)getAttributeInternal(BGBAGPOCKET);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgBagPocket.
     * @param value value to set the BgBagPocket
     */
    public void setBgBagPocket(String value) {
        setAttributeInternal(BGBAGPOCKET, value);
    }

    /**
     * Gets the attribute value for BgFpLength, using the alias name BgFpLength.
     * @return the BgFpLength
     */
    public Number getBgFpLength() {
        return (Number)getAttributeInternal(BGFPLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgFpLength.
     * @param value value to set the BgFpLength
     */
    public void setBgFpLength(Number value) {
        setAttributeInternal(BGFPLENGTH, value);
    }

    /**
     * Gets the attribute value for BgFpWidth, using the alias name BgFpWidth.
     * @return the BgFpWidth
     */
    public Number getBgFpWidth() {
        return (Number)getAttributeInternal(BGFPWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgFpWidth.
     * @param value value to set the BgFpWidth
     */
    public void setBgFpWidth(Number value) {
        setAttributeInternal(BGFPWIDTH, value);
    }

    /**
     * Gets the attribute value for BgBpLength, using the alias name BgBpLength.
     * @return the BgBpLength
     */
    public Number getBgBpLength() {
        return (Number)getAttributeInternal(BGBPLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgBpLength.
     * @param value value to set the BgBpLength
     */
    public void setBgBpLength(Number value) {
        setAttributeInternal(BGBPLENGTH, value);
    }

    /**
     * Gets the attribute value for BgBpWidth, using the alias name BgBpWidth.
     * @return the BgBpWidth
     */
    public Number getBgBpWidth() {
        return (Number)getAttributeInternal(BGBPWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for BgBpWidth.
     * @param value value to set the BgBpWidth
     */
    public void setBgBpWidth(Number value) {
        setAttributeInternal(BGBPWIDTH, value);
    }

    /**
     * Gets the attribute value for InsInsertType, using the alias name InsInsertType.
     * @return the InsInsertType
     */
    public String getInsInsertType() {
        return (String)getAttributeInternal(INSINSERTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsInsertType.
     * @param value value to set the InsInsertType
     */
    public void setInsInsertType(String value) {
        setAttributeInternal(INSINSERTTYPE, value);
    }

    /**
     * Gets the attribute value for InsGusset, using the alias name InsGusset.
     * @return the InsGusset
     */
    public Number getInsGusset() {
        return (Number)getAttributeInternal(INSGUSSET);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsGusset.
     * @param value value to set the InsGusset
     */
    public void setInsGusset(Number value) {
        setAttributeInternal(INSGUSSET, value);
    }

    /**
     * Gets the attribute value for InsDimensions, using the alias name InsDimensions.
     * @return the InsDimensions
     */
    public String getInsDimensions() {
        return (String)getAttributeInternal(INSDIMENSIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsDimensions.
     * @param value value to set the InsDimensions
     */
    public void setInsDimensions(String value) {
        setAttributeInternal(INSDIMENSIONS, value);
    }

    /**
     * Gets the attribute value for InsMaterialGsm, using the alias name InsMaterialGsm.
     * @return the InsMaterialGsm
     */
    public String getInsMaterialGsm() {
        return (String)getAttributeInternal(INSMATERIALGSM);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsMaterialGsm.
     * @param value value to set the InsMaterialGsm
     */
    public void setInsMaterialGsm(String value) {
        setAttributeInternal(INSMATERIALGSM, value);
    }

    /**
     * Gets the attribute value for InsPaperType, using the alias name InsPaperType.
     * @return the InsPaperType
     */
    public String getInsPaperType() {
        return (String)getAttributeInternal(INSPAPERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsPaperType.
     * @param value value to set the InsPaperType
     */
    public void setInsPaperType(String value) {
        setAttributeInternal(INSPAPERTYPE, value);
    }

    /**
     * Gets the attribute value for InsLamination, using the alias name InsLamination.
     * @return the InsLamination
     */
    public String getInsLamination() {
        return (String)getAttributeInternal(INSLAMINATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsLamination.
     * @param value value to set the InsLamination
     */
    public void setInsLamination(String value) {
        setAttributeInternal(INSLAMINATION, value);
    }

    /**
     * Gets the attribute value for InsVarnish, using the alias name InsVarnish.
     * @return the InsVarnish
     */
    public String getInsVarnish() {
        return (String)getAttributeInternal(INSVARNISH);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsVarnish.
     * @param value value to set the InsVarnish
     */
    public void setInsVarnish(String value) {
        setAttributeInternal(INSVARNISH, value);
    }

    /**
     * Gets the attribute value for InsFixType, using the alias name InsFixType.
     * @return the InsFixType
     */
    public String getInsFixType() {
        return (String)getAttributeInternal(INSFIXTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsFixType.
     * @param value value to set the InsFixType
     */
    public void setInsFixType(String value) {
        setAttributeInternal(INSFIXTYPE, value);
    }

    /**
     * Gets the attribute value for StfStifnerType, using the alias name StfStifnerType.
     * @return the StfStifnerType
     */
    public String getStfStifnerType() {
        return (String)getAttributeInternal(STFSTIFNERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StfStifnerType.
     * @param value value to set the StfStifnerType
     */
    public void setStfStifnerType(String value) {
        setAttributeInternal(STFSTIFNERTYPE, value);
    }

    /**
     * Gets the attribute value for StfGusset1, using the alias name StfGusset1.
     * @return the StfGusset1
     */
    public Number getStfGusset1() {
        return (Number)getAttributeInternal(STFGUSSET1);
    }

    /**
     * Sets <code>value</code> as the attribute value for StfGusset1.
     * @param value value to set the StfGusset1
     */
    public void setStfGusset1(Number value) {
        setAttributeInternal(STFGUSSET1, value);
    }

    /**
     * Gets the attribute value for StfGusset2, using the alias name StfGusset2.
     * @return the StfGusset2
     */
    public Number getStfGusset2() {
        return (Number)getAttributeInternal(STFGUSSET2);
    }

    /**
     * Sets <code>value</code> as the attribute value for StfGusset2.
     * @param value value to set the StfGusset2
     */
    public void setStfGusset2(Number value) {
        setAttributeInternal(STFGUSSET2, value);
    }

    /**
     * Gets the attribute value for StfPly, using the alias name StfPly.
     * @return the StfPly
     */
    public String getStfPly() {
        return (String)getAttributeInternal(STFPLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for StfPly.
     * @param value value to set the StfPly
     */
    public void setStfPly(String value) {
        setAttributeInternal(STFPLY, value);
    }

    /**
     * Gets the attribute value for StfMaterial, using the alias name StfMaterial.
     * @return the StfMaterial
     */
    public String getStfMaterial() {
        return (String)getAttributeInternal(STFMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for StfMaterial.
     * @param value value to set the StfMaterial
     */
    public void setStfMaterial(String value) {
        setAttributeInternal(STFMATERIAL, value);
    }

    /**
     * Gets the attribute value for CrtCartonType, using the alias name CrtCartonType.
     * @return the CrtCartonType
     */
    public String getCrtCartonType() {
        return (String)getAttributeInternal(CRTCARTONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtCartonType.
     * @param value value to set the CrtCartonType
     */
    public void setCrtCartonType(String value) {
        setAttributeInternal(CRTCARTONTYPE, value);
    }

    /**
     * Gets the attribute value for CrtPrintedType, using the alias name CrtPrintedType.
     * @return the CrtPrintedType
     */
    public String getCrtPrintedType() {
        return (String)getAttributeInternal(CRTPRINTEDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtPrintedType.
     * @param value value to set the CrtPrintedType
     */
    public void setCrtPrintedType(String value) {
        setAttributeInternal(CRTPRINTEDTYPE, value);
    }

    /**
     * Gets the attribute value for CrtOutWidth, using the alias name CrtOutWidth.
     * @return the CrtOutWidth
     */
    public Number getCrtOutWidth() {
        return (Number)getAttributeInternal(CRTOUTWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtOutWidth.
     * @param value value to set the CrtOutWidth
     */
    public void setCrtOutWidth(Number value) {
        setAttributeInternal(CRTOUTWIDTH, value);
    }

    /**
     * Gets the attribute value for CrtOutLength, using the alias name CrtOutLength.
     * @return the CrtOutLength
     */
    public Number getCrtOutLength() {
        return (Number)getAttributeInternal(CRTOUTLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtOutLength.
     * @param value value to set the CrtOutLength
     */
    public void setCrtOutLength(Number value) {
        setAttributeInternal(CRTOUTLENGTH, value);
    }

    /**
     * Gets the attribute value for CrtOutHeight, using the alias name CrtOutHeight.
     * @return the CrtOutHeight
     */
    public Number getCrtOutHeight() {
        return (Number)getAttributeInternal(CRTOUTHEIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtOutHeight.
     * @param value value to set the CrtOutHeight
     */
    public void setCrtOutHeight(Number value) {
        setAttributeInternal(CRTOUTHEIGHT, value);
    }

    /**
     * Gets the attribute value for CrtOutUom, using the alias name CrtOutUom.
     * @return the CrtOutUom
     */
    public String getCrtOutUom() {
        return (String)getAttributeInternal(CRTOUTUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtOutUom.
     * @param value value to set the CrtOutUom
     */
    public void setCrtOutUom(String value) {
        setAttributeInternal(CRTOUTUOM, value);
    }

    /**
     * Gets the attribute value for CrtOutDimensions, using the alias name CrtOutDimensions.
     * @return the CrtOutDimensions
     */
    public String getCrtOutDimensions() {
        return (String)getAttributeInternal(CRTOUTDIMENSIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtOutDimensions.
     * @param value value to set the CrtOutDimensions
     */
    public void setCrtOutDimensions(String value) {
        setAttributeInternal(CRTOUTDIMENSIONS, value);
    }

    /**
     * Gets the attribute value for CrtInnWidth, using the alias name CrtInnWidth.
     * @return the CrtInnWidth
     */
    public Number getCrtInnWidth() {
        return (Number)getAttributeInternal(CRTINNWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtInnWidth.
     * @param value value to set the CrtInnWidth
     */
    public void setCrtInnWidth(Number value) {
        setAttributeInternal(CRTINNWIDTH, value);
    }

    /**
     * Gets the attribute value for CrtInnLength, using the alias name CrtInnLength.
     * @return the CrtInnLength
     */
    public Number getCrtInnLength() {
        return (Number)getAttributeInternal(CRTINNLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtInnLength.
     * @param value value to set the CrtInnLength
     */
    public void setCrtInnLength(Number value) {
        setAttributeInternal(CRTINNLENGTH, value);
    }

    /**
     * Gets the attribute value for CrtInnHeight, using the alias name CrtInnHeight.
     * @return the CrtInnHeight
     */
    public Number getCrtInnHeight() {
        return (Number)getAttributeInternal(CRTINNHEIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtInnHeight.
     * @param value value to set the CrtInnHeight
     */
    public void setCrtInnHeight(Number value) {
        setAttributeInternal(CRTINNHEIGHT, value);
    }

    /**
     * Gets the attribute value for CrtInnUom, using the alias name CrtInnUom.
     * @return the CrtInnUom
     */
    public String getCrtInnUom() {
        return (String)getAttributeInternal(CRTINNUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtInnUom.
     * @param value value to set the CrtInnUom
     */
    public void setCrtInnUom(String value) {
        setAttributeInternal(CRTINNUOM, value);
    }

    /**
     * Gets the attribute value for CrtInnDimensions, using the alias name CrtInnDimensions.
     * @return the CrtInnDimensions
     */
    public String getCrtInnDimensions() {
        return (String)getAttributeInternal(CRTINNDIMENSIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtInnDimensions.
     * @param value value to set the CrtInnDimensions
     */
    public void setCrtInnDimensions(String value) {
        setAttributeInternal(CRTINNDIMENSIONS, value);
    }

    /**
     * Gets the attribute value for CrtPly, using the alias name CrtPly.
     * @return the CrtPly
     */
    public String getCrtPly() {
        return (String)getAttributeInternal(CRTPLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtPly.
     * @param value value to set the CrtPly
     */
    public void setCrtPly(String value) {
        setAttributeInternal(CRTPLY, value);
    }

    /**
     * Gets the attribute value for CrtMaterial, using the alias name CrtMaterial.
     * @return the CrtMaterial
     */
    public String getCrtMaterial() {
        return (String)getAttributeInternal(CRTMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtMaterial.
     * @param value value to set the CrtMaterial
     */
    public void setCrtMaterial(String value) {
        setAttributeInternal(CRTMATERIAL, value);
    }

    /**
     * Gets the attribute value for CrtPrintType, using the alias name CrtPrintType.
     * @return the CrtPrintType
     */
    public String getCrtPrintType() {
        return (String)getAttributeInternal(CRTPRINTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtPrintType.
     * @param value value to set the CrtPrintType
     */
    public void setCrtPrintType(String value) {
        setAttributeInternal(CRTPRINTTYPE, value);
    }

    /**
     * Gets the attribute value for CrtEct, using the alias name CrtEct.
     * @return the CrtEct
     */
    public String getCrtEct() {
        return (String)getAttributeInternal(CRTECT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtEct.
     * @param value value to set the CrtEct
     */
    public void setCrtEct(String value) {
        setAttributeInternal(CRTECT, value);
    }

    /**
     * Gets the attribute value for CrtBusting, using the alias name CrtBusting.
     * @return the CrtBusting
     */
    public String getCrtBusting() {
        return (String)getAttributeInternal(CRTBUSTING);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtBusting.
     * @param value value to set the CrtBusting
     */
    public void setCrtBusting(String value) {
        setAttributeInternal(CRTBUSTING, value);
    }

    /**
     * Gets the attribute value for LblLableType, using the alias name LblLableType.
     * @return the LblLableType
     */
    public String getLblLableType() {
        return (String)getAttributeInternal(LBLLABLETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LblLableType.
     * @param value value to set the LblLableType
     */
    public void setLblLableType(String value) {
        setAttributeInternal(LBLLABLETYPE, value);
    }

    /**
     * Gets the attribute value for LblPlainLength, using the alias name LblPlainLength.
     * @return the LblPlainLength
     */
    public Number getLblPlainLength() {
        return (Number)getAttributeInternal(LBLPLAINLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for LblPlainLength.
     * @param value value to set the LblPlainLength
     */
    public void setLblPlainLength(Number value) {
        setAttributeInternal(LBLPLAINLENGTH, value);
    }

    /**
     * Gets the attribute value for LblPlainWidth, using the alias name LblPlainWidth.
     * @return the LblPlainWidth
     */
    public Number getLblPlainWidth() {
        return (Number)getAttributeInternal(LBLPLAINWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for LblPlainWidth.
     * @param value value to set the LblPlainWidth
     */
    public void setLblPlainWidth(Number value) {
        setAttributeInternal(LBLPLAINWIDTH, value);
    }

    /**
     * Gets the attribute value for LblPlainSwingMargin, using the alias name LblPlainSwingMargin.
     * @return the LblPlainSwingMargin
     */
    public String getLblPlainSwingMargin() {
        return (String)getAttributeInternal(LBLPLAINSWINGMARGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LblPlainSwingMargin.
     * @param value value to set the LblPlainSwingMargin
     */
    public void setLblPlainSwingMargin(String value) {
        setAttributeInternal(LBLPLAINSWINGMARGIN, value);
    }

    /**
     * Gets the attribute value for LblPlainSize, using the alias name LblPlainSize.
     * @return the LblPlainSize
     */
    public String getLblPlainSize() {
        return (String)getAttributeInternal(LBLPLAINSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LblPlainSize.
     * @param value value to set the LblPlainSize
     */
    public void setLblPlainSize(String value) {
        setAttributeInternal(LBLPLAINSIZE, value);
    }

    /**
     * Gets the attribute value for LblFoldLength, using the alias name LblFoldLength.
     * @return the LblFoldLength
     */
    public Number getLblFoldLength() {
        return (Number)getAttributeInternal(LBLFOLDLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for LblFoldLength.
     * @param value value to set the LblFoldLength
     */
    public void setLblFoldLength(Number value) {
        setAttributeInternal(LBLFOLDLENGTH, value);
    }

    /**
     * Gets the attribute value for LblFoldWidth, using the alias name LblFoldWidth.
     * @return the LblFoldWidth
     */
    public Number getLblFoldWidth() {
        return (Number)getAttributeInternal(LBLFOLDWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for LblFoldWidth.
     * @param value value to set the LblFoldWidth
     */
    public void setLblFoldWidth(Number value) {
        setAttributeInternal(LBLFOLDWIDTH, value);
    }

    /**
     * Gets the attribute value for LblFoldSwingMargin, using the alias name LblFoldSwingMargin.
     * @return the LblFoldSwingMargin
     */
    public String getLblFoldSwingMargin() {
        return (String)getAttributeInternal(LBLFOLDSWINGMARGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LblFoldSwingMargin.
     * @param value value to set the LblFoldSwingMargin
     */
    public void setLblFoldSwingMargin(String value) {
        setAttributeInternal(LBLFOLDSWINGMARGIN, value);
    }

    /**
     * Gets the attribute value for LblFoldSize, using the alias name LblFoldSize.
     * @return the LblFoldSize
     */
    public String getLblFoldSize() {
        return (String)getAttributeInternal(LBLFOLDSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LblFoldSize.
     * @param value value to set the LblFoldSize
     */
    public void setLblFoldSize(String value) {
        setAttributeInternal(LBLFOLDSIZE, value);
    }

    /**
     * Gets the attribute value for LblFoldingType, using the alias name LblFoldingType.
     * @return the LblFoldingType
     */
    public String getLblFoldingType() {
        return (String)getAttributeInternal(LBLFOLDINGTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LblFoldingType.
     * @param value value to set the LblFoldingType
     */
    public void setLblFoldingType(String value) {
        setAttributeInternal(LBLFOLDINGTYPE, value);
    }

    /**
     * Gets the attribute value for LblMaterial, using the alias name LblMaterial.
     * @return the LblMaterial
     */
    public String getLblMaterial() {
        return (String)getAttributeInternal(LBLMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for LblMaterial.
     * @param value value to set the LblMaterial
     */
    public void setLblMaterial(String value) {
        setAttributeInternal(LBLMATERIAL, value);
    }

    /**
     * Gets the attribute value for ZipMaterialType, using the alias name ZipMaterialType.
     * @return the ZipMaterialType
     */
    public String getZipMaterialType() {
        return (String)getAttributeInternal(ZIPMATERIALTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ZipMaterialType.
     * @param value value to set the ZipMaterialType
     */
    public void setZipMaterialType(String value) {
        setAttributeInternal(ZIPMATERIALTYPE, value);
    }

    /**
     * Gets the attribute value for ZipTeethType, using the alias name ZipTeethType.
     * @return the ZipTeethType
     */
    public String getZipTeethType() {
        return (String)getAttributeInternal(ZIPTEETHTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ZipTeethType.
     * @param value value to set the ZipTeethType
     */
    public void setZipTeethType(String value) {
        setAttributeInternal(ZIPTEETHTYPE, value);
    }

    /**
     * Gets the attribute value for ZipUom, using the alias name ZipUom.
     * @return the ZipUom
     */
    public String getZipUom() {
        return (String)getAttributeInternal(ZIPUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ZipUom.
     * @param value value to set the ZipUom
     */
    public void setZipUom(String value) {
        setAttributeInternal(ZIPUOM, value);
    }

    /**
     * Gets the attribute value for ThrThreadUsage, using the alias name ThrThreadUsage.
     * @return the ThrThreadUsage
     */
    public String getThrThreadUsage() {
        return (String)getAttributeInternal(THRTHREADUSAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ThrThreadUsage.
     * @param value value to set the ThrThreadUsage
     */
    public void setThrThreadUsage(String value) {
        setAttributeInternal(THRTHREADUSAGE, value);
    }

    /**
     * Gets the attribute value for ThrThreadType, using the alias name ThrThreadType.
     * @return the ThrThreadType
     */
    public String getThrThreadType() {
        return (String)getAttributeInternal(THRTHREADTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ThrThreadType.
     * @param value value to set the ThrThreadType
     */
    public void setThrThreadType(String value) {
        setAttributeInternal(THRTHREADTYPE, value);
    }

    /**
     * Gets the attribute value for ThrMaterial, using the alias name ThrMaterial.
     * @return the ThrMaterial
     */
    public String getThrMaterial() {
        return (String)getAttributeInternal(THRMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ThrMaterial.
     * @param value value to set the ThrMaterial
     */
    public void setThrMaterial(String value) {
        setAttributeInternal(THRMATERIAL, value);
    }

    /**
     * Gets the attribute value for ThrTexSizePly, using the alias name ThrTexSizePly.
     * @return the ThrTexSizePly
     */
    public String getThrTexSizePly() {
        return (String)getAttributeInternal(THRTEXSIZEPLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ThrTexSizePly.
     * @param value value to set the ThrTexSizePly
     */
    public void setThrTexSizePly(String value) {
        setAttributeInternal(THRTEXSIZEPLY, value);
    }

    /**
     * Gets the attribute value for ElsElasticType, using the alias name ElsElasticType.
     * @return the ElsElasticType
     */
    public String getElsElasticType() {
        return (String)getAttributeInternal(ELSELASTICTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ElsElasticType.
     * @param value value to set the ElsElasticType
     */
    public void setElsElasticType(String value) {
        setAttributeInternal(ELSELASTICTYPE, value);
    }

    /**
     * Gets the attribute value for ElsCordType, using the alias name ElsCordType.
     * @return the ElsCordType
     */
    public String getElsCordType() {
        return (String)getAttributeInternal(ELSCORDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ElsCordType.
     * @param value value to set the ElsCordType
     */
    public void setElsCordType(String value) {
        setAttributeInternal(ELSCORDTYPE, value);
    }

    /**
     * Gets the attribute value for ElsRatio, using the alias name ElsRatio.
     * @return the ElsRatio
     */
    public String getElsRatio() {
        return (String)getAttributeInternal(ELSRATIO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ElsRatio.
     * @param value value to set the ElsRatio
     */
    public void setElsRatio(String value) {
        setAttributeInternal(ELSRATIO, value);
    }

    /**
     * Gets the attribute value for CtcMaterial, using the alias name CtcMaterial.
     * @return the CtcMaterial
     */
    public String getCtcMaterial() {
        return (String)getAttributeInternal(CTCMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for CtcMaterial.
     * @param value value to set the CtcMaterial
     */
    public void setCtcMaterial(String value) {
        setAttributeInternal(CTCMATERIAL, value);
    }

    /**
     * Gets the attribute value for CtcDiaThickness, using the alias name CtcDiaThickness.
     * @return the CtcDiaThickness
     */
    public String getCtcDiaThickness() {
        return (String)getAttributeInternal(CTCDIATHICKNESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for CtcDiaThickness.
     * @param value value to set the CtcDiaThickness
     */
    public void setCtcDiaThickness(String value) {
        setAttributeInternal(CTCDIATHICKNESS, value);
    }

    /**
     * Gets the attribute value for FusMaterial, using the alias name FusMaterial.
     * @return the FusMaterial
     */
    public String getFusMaterial() {
        return (String)getAttributeInternal(FUSMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for FusMaterial.
     * @param value value to set the FusMaterial
     */
    public void setFusMaterial(String value) {
        setAttributeInternal(FUSMATERIAL, value);
    }

    /**
     * Gets the attribute value for FusGsm, using the alias name FusGsm.
     * @return the FusGsm
     */
    public String getFusGsm() {
        return (String)getAttributeInternal(FUSGSM);
    }

    /**
     * Sets <code>value</code> as the attribute value for FusGsm.
     * @param value value to set the FusGsm
     */
    public void setFusGsm(String value) {
        setAttributeInternal(FUSGSM, value);
    }

    /**
     * Gets the attribute value for NwvGsm, using the alias name NwvGsm.
     * @return the NwvGsm
     */
    public Integer getNwvGsm() {
        return (Integer)getAttributeInternal(NWVGSM);
    }

    /**
     * Sets <code>value</code> as the attribute value for NwvGsm.
     * @param value value to set the NwvGsm
     */
    public void setNwvGsm(Integer value) {
        setAttributeInternal(NWVGSM, value);
    }

    /**
     * Gets the attribute value for NwvMaterial, using the alias name NwvMaterial.
     * @return the NwvMaterial
     */
    public String getNwvMaterial() {
        return (String)getAttributeInternal(NWVMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for NwvMaterial.
     * @param value value to set the NwvMaterial
     */
    public void setNwvMaterial(String value) {
        setAttributeInternal(NWVMATERIAL, value);
    }

    /**
     * Gets the attribute value for WdGsm, using the alias name WdGsm.
     * @return the WdGsm
     */
    public String getWdGsm() {
        return (String)getAttributeInternal(WDGSM);
    }

    /**
     * Sets <code>value</code> as the attribute value for WdGsm.
     * @param value value to set the WdGsm
     */
    public void setWdGsm(String value) {
        setAttributeInternal(WDGSM, value);
    }

    /**
     * Gets the attribute value for WdLoaft, using the alias name WdLoaft.
     * @return the WdLoaft
     */
    public String getWdLoaft() {
        return (String)getAttributeInternal(WDLOAFT);
    }

    /**
     * Sets <code>value</code> as the attribute value for WdLoaft.
     * @param value value to set the WdLoaft
     */
    public void setWdLoaft(String value) {
        setAttributeInternal(WDLOAFT, value);
    }

    /**
     * Gets the attribute value for WdMaterial, using the alias name WdMaterial.
     * @return the WdMaterial
     */
    public String getWdMaterial() {
        return (String)getAttributeInternal(WDMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for WdMaterial.
     * @param value value to set the WdMaterial
     */
    public void setWdMaterial(String value) {
        setAttributeInternal(WDMATERIAL, value);
    }

    /**
     * Gets the attribute value for WdRatio, using the alias name WdRatio.
     * @return the WdRatio
     */
    public String getWdRatio() {
        return (String)getAttributeInternal(WDRATIO);
    }

    /**
     * Sets <code>value</code> as the attribute value for WdRatio.
     * @param value value to set the WdRatio
     */
    public void setWdRatio(String value) {
        setAttributeInternal(WDRATIO, value);
    }

    /**
     * Gets the attribute value for BfMaterial, using the alias name BfMaterial.
     * @return the BfMaterial
     */
    public String getBfMaterial() {
        return (String)getAttributeInternal(BFMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for BfMaterial.
     * @param value value to set the BfMaterial
     */
    public void setBfMaterial(String value) {
        setAttributeInternal(BFMATERIAL, value);
    }

    /**
     * Gets the attribute value for BfMaterialType, using the alias name BfMaterialType.
     * @return the BfMaterialType
     */
    public String getBfMaterialType() {
        return (String)getAttributeInternal(BFMATERIALTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BfMaterialType.
     * @param value value to set the BfMaterialType
     */
    public void setBfMaterialType(String value) {
        setAttributeInternal(BFMATERIALTYPE, value);
    }

    /**
     * Gets the attribute value for BtnButtonSize, using the alias name BtnButtonSize.
     * @return the BtnButtonSize
     */
    public String getBtnButtonSize() {
        return (String)getAttributeInternal(BTNBUTTONSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BtnButtonSize.
     * @param value value to set the BtnButtonSize
     */
    public void setBtnButtonSize(String value) {
        setAttributeInternal(BTNBUTTONSIZE, value);
    }

    /**
     * Gets the attribute value for BtnHolesNum, using the alias name BtnHolesNum.
     * @return the BtnHolesNum
     */
    public Integer getBtnHolesNum() {
        return (Integer)getAttributeInternal(BTNHOLESNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for BtnHolesNum.
     * @param value value to set the BtnHolesNum
     */
    public void setBtnHolesNum(Integer value) {
        setAttributeInternal(BTNHOLESNUM, value);
    }

    /**
     * Gets the attribute value for BtnButtonType, using the alias name BtnButtonType.
     * @return the BtnButtonType
     */
    public String getBtnButtonType() {
        return (String)getAttributeInternal(BTNBUTTONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BtnButtonType.
     * @param value value to set the BtnButtonType
     */
    public void setBtnButtonType(String value) {
        setAttributeInternal(BTNBUTTONTYPE, value);
    }

    /**
     * Gets the attribute value for BtnButtonMaterial, using the alias name BtnButtonMaterial.
     * @return the BtnButtonMaterial
     */
    public String getBtnButtonMaterial() {
        return (String)getAttributeInternal(BTNBUTTONMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for BtnButtonMaterial.
     * @param value value to set the BtnButtonMaterial
     */
    public void setBtnButtonMaterial(String value) {
        setAttributeInternal(BTNBUTTONMATERIAL, value);
    }

    /**
     * Gets the attribute value for BtnButtonColor, using the alias name BtnButtonColor.
     * @return the BtnButtonColor
     */
    public String getBtnButtonColor() {
        return (String)getAttributeInternal(BTNBUTTONCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for BtnButtonColor.
     * @param value value to set the BtnButtonColor
     */
    public void setBtnButtonColor(String value) {
        setAttributeInternal(BTNBUTTONCOLOR, value);
    }

    /**
     * Gets the attribute value for PprPaperColor, using the alias name PprPaperColor.
     * @return the PprPaperColor
     */
    public String getPprPaperColor() {
        return (String)getAttributeInternal(PPRPAPERCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for PprPaperColor.
     * @param value value to set the PprPaperColor
     */
    public void setPprPaperColor(String value) {
        setAttributeInternal(PPRPAPERCOLOR, value);
    }

    /**
     * Gets the attribute value for PprPaperMaterial, using the alias name PprPaperMaterial.
     * @return the PprPaperMaterial
     */
    public String getPprPaperMaterial() {
        return (String)getAttributeInternal(PPRPAPERMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for PprPaperMaterial.
     * @param value value to set the PprPaperMaterial
     */
    public void setPprPaperMaterial(String value) {
        setAttributeInternal(PPRPAPERMATERIAL, value);
    }

    /**
     * Gets the attribute value for StkStickerType, using the alias name StkStickerType.
     * @return the StkStickerType
     */
    public String getStkStickerType() {
        return (String)getAttributeInternal(STKSTICKERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StkStickerType.
     * @param value value to set the StkStickerType
     */
    public void setStkStickerType(String value) {
        setAttributeInternal(STKSTICKERTYPE, value);
    }

    /**
     * Gets the attribute value for StkMaterial, using the alias name StkMaterial.
     * @return the StkMaterial
     */
    public String getStkMaterial() {
        return (String)getAttributeInternal(STKMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for StkMaterial.
     * @param value value to set the StkMaterial
     */
    public void setStkMaterial(String value) {
        setAttributeInternal(STKMATERIAL, value);
    }

    /**
     * Gets the attribute value for StkPeelableType, using the alias name StkPeelableType.
     * @return the StkPeelableType
     */
    public String getStkPeelableType() {
        return (String)getAttributeInternal(STKPEELABLETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StkPeelableType.
     * @param value value to set the StkPeelableType
     */
    public void setStkPeelableType(String value) {
        setAttributeInternal(STKPEELABLETYPE, value);
    }

    /**
     * Gets the attribute value for StkPerforatedType, using the alias name StkPerforatedType.
     * @return the StkPerforatedType
     */
    public String getStkPerforatedType() {
        return (String)getAttributeInternal(STKPERFORATEDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StkPerforatedType.
     * @param value value to set the StkPerforatedType
     */
    public void setStkPerforatedType(String value) {
        setAttributeInternal(STKPERFORATEDTYPE, value);
    }

    /**
     * Gets the attribute value for StkColor, using the alias name StkColor.
     * @return the StkColor
     */
    public String getStkColor() {
        return (String)getAttributeInternal(STKCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for StkColor.
     * @param value value to set the StkColor
     */
    public void setStkColor(String value) {
        setAttributeInternal(STKCOLOR, value);
    }

    /**
     * Gets the attribute value for StkText, using the alias name StkText.
     * @return the StkText
     */
    public String getStkText() {
        return (String)getAttributeInternal(STKTEXT);
    }

    /**
     * Sets <code>value</code> as the attribute value for StkText.
     * @param value value to set the StkText
     */
    public void setStkText(String value) {
        setAttributeInternal(STKTEXT, value);
    }

    /**
     * Gets the attribute value for SgItem, using the alias name SgItem.
     * @return the SgItem
     */
    public String getSgItem() {
        return (String)getAttributeInternal(SGITEM);
    }

    /**
     * Sets <code>value</code> as the attribute value for SgItem.
     * @param value value to set the SgItem
     */
    public void setSgItem(String value) {
        setAttributeInternal(SGITEM, value);
    }

    /**
     * Gets the attribute value for SgWeight, using the alias name SgWeight.
     * @return the SgWeight
     */
    public Number getSgWeight() {
        return (Number)getAttributeInternal(SGWEIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for SgWeight.
     * @param value value to set the SgWeight
     */
    public void setSgWeight(Number value) {
        setAttributeInternal(SGWEIGHT, value);
    }

    /**
     * Gets the attribute value for TpColor, using the alias name TpColor.
     * @return the TpColor
     */
    public String getTpColor() {
        return (String)getAttributeInternal(TPCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for TpColor.
     * @param value value to set the TpColor
     */
    public void setTpColor(String value) {
        setAttributeInternal(TPCOLOR, value);
    }

    /**
     * Gets the attribute value for TpMaterialType, using the alias name TpMaterialType.
     * @return the TpMaterialType
     */
    public String getTpMaterialType() {
        return (String)getAttributeInternal(TPMATERIALTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TpMaterialType.
     * @param value value to set the TpMaterialType
     */
    public void setTpMaterialType(String value) {
        setAttributeInternal(TPMATERIALTYPE, value);
    }

    /**
     * Gets the attribute value for LacType, using the alias name LacType.
     * @return the LacType
     */
    public String getLacType() {
        return (String)getAttributeInternal(LACTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LacType.
     * @param value value to set the LacType
     */
    public void setLacType(String value) {
        setAttributeInternal(LACTYPE, value);
    }

    /**
     * Gets the attribute value for LacMaterial, using the alias name LacMaterial.
     * @return the LacMaterial
     */
    public String getLacMaterial() {
        return (String)getAttributeInternal(LACMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for LacMaterial.
     * @param value value to set the LacMaterial
     */
    public void setLacMaterial(String value) {
        setAttributeInternal(LACMATERIAL, value);
    }

    /**
     * Gets the attribute value for LacUom, using the alias name LacUom.
     * @return the LacUom
     */
    public String getLacUom() {
        return (String)getAttributeInternal(LACUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for LacUom.
     * @param value value to set the LacUom
     */
    public void setLacUom(String value) {
        setAttributeInternal(LACUOM, value);
    }

    /**
     * Gets the attribute value for LacColor, using the alias name LacColor.
     * @return the LacColor
     */
    public String getLacColor() {
        return (String)getAttributeInternal(LACCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for LacColor.
     * @param value value to set the LacColor
     */
    public void setLacColor(String value) {
        setAttributeInternal(LACCOLOR, value);
    }

    /**
     * Gets the attribute value for EyColor, using the alias name EyColor.
     * @return the EyColor
     */
    public String getEyColor() {
        return (String)getAttributeInternal(EYCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for EyColor.
     * @param value value to set the EyColor
     */
    public void setEyColor(String value) {
        setAttributeInternal(EYCOLOR, value);
    }

    /**
     * Gets the attribute value for EyMaterial, using the alias name EyMaterial.
     * @return the EyMaterial
     */
    public String getEyMaterial() {
        return (String)getAttributeInternal(EYMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for EyMaterial.
     * @param value value to set the EyMaterial
     */
    public void setEyMaterial(String value) {
        setAttributeInternal(EYMATERIAL, value);
    }

    /**
     * Gets the attribute value for EyFinish, using the alias name EyFinish.
     * @return the EyFinish
     */
    public String getEyFinish() {
        return (String)getAttributeInternal(EYFINISH);
    }

    /**
     * Sets <code>value</code> as the attribute value for EyFinish.
     * @param value value to set the EyFinish
     */
    public void setEyFinish(String value) {
        setAttributeInternal(EYFINISH, value);
    }

    /**
     * Gets the attribute value for HngMaterialCombination, using the alias name HngMaterialCombination.
     * @return the HngMaterialCombination
     */
    public String getHngMaterialCombination() {
        return (String)getAttributeInternal(HNGMATERIALCOMBINATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for HngMaterialCombination.
     * @param value value to set the HngMaterialCombination
     */
    public void setHngMaterialCombination(String value) {
        setAttributeInternal(HNGMATERIALCOMBINATION, value);
    }

    /**
     * Gets the attribute value for HngThickness, using the alias name HngThickness.
     * @return the HngThickness
     */
    public Number getHngThickness() {
        return (Number)getAttributeInternal(HNGTHICKNESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for HngThickness.
     * @param value value to set the HngThickness
     */
    public void setHngThickness(Number value) {
        setAttributeInternal(HNGTHICKNESS, value);
    }

    /**
     * Gets the attribute value for HngThicknessUom, using the alias name HngThicknessUom.
     * @return the HngThicknessUom
     */
    public String getHngThicknessUom() {
        return (String)getAttributeInternal(HNGTHICKNESSUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for HngThicknessUom.
     * @param value value to set the HngThicknessUom
     */
    public void setHngThicknessUom(String value) {
        setAttributeInternal(HNGTHICKNESSUOM, value);
    }

    /**
     * Gets the attribute value for HngHookType, using the alias name HngHookType.
     * @return the HngHookType
     */
    public String getHngHookType() {
        return (String)getAttributeInternal(HNGHOOKTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for HngHookType.
     * @param value value to set the HngHookType
     */
    public void setHngHookType(String value) {
        setAttributeInternal(HNGHOOKTYPE, value);
    }

    /**
     * Gets the attribute value for StrDescription, using the alias name StrDescription.
     * @return the StrDescription
     */
    public String getStrDescription() {
        return (String)getAttributeInternal(STRDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for StrDescription.
     * @param value value to set the StrDescription
     */
    public void setStrDescription(String value) {
        setAttributeInternal(STRDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for TapMaterial, using the alias name TapMaterial.
     * @return the TapMaterial
     */
    public String getTapMaterial() {
        return (String)getAttributeInternal(TAPMATERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for TapMaterial.
     * @param value value to set the TapMaterial
     */
    public void setTapMaterial(String value) {
        setAttributeInternal(TAPMATERIAL, value);
    }

    /**
     * Gets the attribute value for TapPrintText, using the alias name TapPrintText.
     * @return the TapPrintText
     */
    public String getTapPrintText() {
        return (String)getAttributeInternal(TAPPRINTTEXT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TapPrintText.
     * @param value value to set the TapPrintText
     */
    public void setTapPrintText(String value) {
        setAttributeInternal(TAPPRINTTEXT, value);
    }

    /**
     * Gets the attribute value for AccHeight, using the alias name AccHeight.
     * @return the AccHeight
     */
    public Number getAccHeight() {
        return (Number)getAttributeInternal(ACCHEIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccHeight.
     * @param value value to set the AccHeight
     */
    public void setAccHeight(Number value) {
        setAttributeInternal(ACCHEIGHT, value);
    }

    /**
     * Gets the attribute value for AccHeightUom, using the alias name AccHeightUom.
     * @return the AccHeightUom
     */
    public String getAccHeightUom() {
        return (String)getAttributeInternal(ACCHEIGHTUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccHeightUom.
     * @param value value to set the AccHeightUom
     */
    public void setAccHeightUom(String value) {
        setAttributeInternal(ACCHEIGHTUOM, value);
    }

    /**
     * Gets the attribute value for AccLength, using the alias name AccLength.
     * @return the AccLength
     */
    public Number getAccLength() {
        return (Number)getAttributeInternal(ACCLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccLength.
     * @param value value to set the AccLength
     */
    public void setAccLength(Number value) {
        setAttributeInternal(ACCLENGTH, value);
    }

    /**
     * Gets the attribute value for AccLengthUom, using the alias name AccLengthUom.
     * @return the AccLengthUom
     */
    public String getAccLengthUom() {
        return (String)getAttributeInternal(ACCLENGTHUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccLengthUom.
     * @param value value to set the AccLengthUom
     */
    public void setAccLengthUom(String value) {
        setAttributeInternal(ACCLENGTHUOM, value);
    }

    /**
     * Gets the attribute value for AccLength1, using the alias name AccLength1.
     * @return the AccLength1
     */
    public Number getAccLength1() {
        return (Number)getAttributeInternal(ACCLENGTH1);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccLength1.
     * @param value value to set the AccLength1
     */
    public void setAccLength1(Number value) {
        setAttributeInternal(ACCLENGTH1, value);
    }

    /**
     * Gets the attribute value for AccLength1Uom, using the alias name AccLength1Uom.
     * @return the AccLength1Uom
     */
    public String getAccLength1Uom() {
        return (String)getAttributeInternal(ACCLENGTH1UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccLength1Uom.
     * @param value value to set the AccLength1Uom
     */
    public void setAccLength1Uom(String value) {
        setAttributeInternal(ACCLENGTH1UOM, value);
    }

    /**
     * Gets the attribute value for AccLength2, using the alias name AccLength2.
     * @return the AccLength2
     */
    public Number getAccLength2() {
        return (Number)getAttributeInternal(ACCLENGTH2);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccLength2.
     * @param value value to set the AccLength2
     */
    public void setAccLength2(Number value) {
        setAttributeInternal(ACCLENGTH2, value);
    }

    /**
     * Gets the attribute value for AccLength2Uom, using the alias name AccLength2Uom.
     * @return the AccLength2Uom
     */
    public String getAccLength2Uom() {
        return (String)getAttributeInternal(ACCLENGTH2UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccLength2Uom.
     * @param value value to set the AccLength2Uom
     */
    public void setAccLength2Uom(String value) {
        setAttributeInternal(ACCLENGTH2UOM, value);
    }

    /**
     * Gets the attribute value for AccWidth, using the alias name AccWidth.
     * @return the AccWidth
     */
    public Number getAccWidth() {
        return (Number)getAttributeInternal(ACCWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccWidth.
     * @param value value to set the AccWidth
     */
    public void setAccWidth(Number value) {
        setAttributeInternal(ACCWIDTH, value);
    }

    /**
     * Gets the attribute value for AccWidthUom, using the alias name AccWidthUom.
     * @return the AccWidthUom
     */
    public String getAccWidthUom() {
        return (String)getAttributeInternal(ACCWIDTHUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccWidthUom.
     * @param value value to set the AccWidthUom
     */
    public void setAccWidthUom(String value) {
        setAttributeInternal(ACCWIDTHUOM, value);
    }

    /**
     * Gets the attribute value for AccWidth1, using the alias name AccWidth1.
     * @return the AccWidth1
     */
    public Number getAccWidth1() {
        return (Number)getAttributeInternal(ACCWIDTH1);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccWidth1.
     * @param value value to set the AccWidth1
     */
    public void setAccWidth1(Number value) {
        setAttributeInternal(ACCWIDTH1, value);
    }

    /**
     * Gets the attribute value for AccWidth1Uom, using the alias name AccWidth1Uom.
     * @return the AccWidth1Uom
     */
    public String getAccWidth1Uom() {
        return (String)getAttributeInternal(ACCWIDTH1UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccWidth1Uom.
     * @param value value to set the AccWidth1Uom
     */
    public void setAccWidth1Uom(String value) {
        setAttributeInternal(ACCWIDTH1UOM, value);
    }

    /**
     * Gets the attribute value for AccWidth2, using the alias name AccWidth2.
     * @return the AccWidth2
     */
    public Number getAccWidth2() {
        return (Number)getAttributeInternal(ACCWIDTH2);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccWidth2.
     * @param value value to set the AccWidth2
     */
    public void setAccWidth2(Number value) {
        setAttributeInternal(ACCWIDTH2, value);
    }

    /**
     * Gets the attribute value for AccWidth2Uom, using the alias name AccWidth2Uom.
     * @return the AccWidth2Uom
     */
    public String getAccWidth2Uom() {
        return (String)getAttributeInternal(ACCWIDTH2UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccWidth2Uom.
     * @param value value to set the AccWidth2Uom
     */
    public void setAccWidth2Uom(String value) {
        setAttributeInternal(ACCWIDTH2UOM, value);
    }

    /**
     * Gets the attribute value for AccDiameter, using the alias name AccDiameter.
     * @return the AccDiameter
     */
    public Number getAccDiameter() {
        return (Number)getAttributeInternal(ACCDIAMETER);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccDiameter.
     * @param value value to set the AccDiameter
     */
    public void setAccDiameter(Number value) {
        setAttributeInternal(ACCDIAMETER, value);
    }

    /**
     * Gets the attribute value for AccDiameterUom, using the alias name AccDiameterUom.
     * @return the AccDiameterUom
     */
    public String getAccDiameterUom() {
        return (String)getAttributeInternal(ACCDIAMETERUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccDiameterUom.
     * @param value value to set the AccDiameterUom
     */
    public void setAccDiameterUom(String value) {
        setAttributeInternal(ACCDIAMETERUOM, value);
    }

    /**
     * Gets the attribute value for AccListPrice, using the alias name AccListPrice.
     * @return the AccListPrice
     */
    public BigDecimal getAccListPrice() {
        return (BigDecimal)getAttributeInternal(ACCLISTPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccListPrice.
     * @param value value to set the AccListPrice
     */
    public void setAccListPrice(BigDecimal value) {
        setAttributeInternal(ACCLISTPRICE, value);
    }

    /**
     * Gets the attribute value for AccWastage, using the alias name AccWastage.
     * @return the AccWastage
     */
    public BigDecimal getAccWastage() {
        return (BigDecimal)getAttributeInternal(ACCWASTAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccWastage.
     * @param value value to set the AccWastage
     */
    public void setAccWastage(BigDecimal value) {
        setAttributeInternal(ACCWASTAGE, value);
    }

    /**
     * Gets the attribute value for AccRemarks, using the alias name AccRemarks.
     * @return the AccRemarks
     */
    public String getAccRemarks() {
        return (String)getAttributeInternal(ACCREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccRemarks.
     * @param value value to set the AccRemarks
     */
    public void setAccRemarks(String value) {
        setAttributeInternal(ACCREMARKS, value);
    }

    /**
     * Gets the attribute value for AccAccessoryType, using the alias name AccAccessoryType.
     * @return the AccAccessoryType
     */
    public String getAccAccessoryType() {
        return (String)getAttributeInternal(ACCACCESSORYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccAccessoryType.
     * @param value value to set the AccAccessoryType
     */
    public void setAccAccessoryType(String value) {
        setAttributeInternal(ACCACCESSORYTYPE, value);
    }

    /**
     * Gets the attribute value for CtcItemType, using the alias name CtcItemType.
     * @return the CtcItemType
     */
    public String getCtcItemType() {
        return (String)getAttributeInternal(CTCITEMTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CtcItemType.
     * @param value value to set the CtcItemType
     */
    public void setCtcItemType(String value) {
        setAttributeInternal(CTCITEMTYPE, value);
    }

    /**
     * Gets the attribute value for WarpContraction, using the alias name WarpContraction.
     * @return the WarpContraction
     */
    public Number getWarpContraction() {
        return (Number)getAttributeInternal(WARPCONTRACTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for WarpContraction.
     * @param value value to set the WarpContraction
     */
    public void setWarpContraction(Number value) {
        setAttributeInternal(WARPCONTRACTION, value);
    }

    /**
     * Gets the attribute value for WeftContraction, using the alias name WeftContraction.
     * @return the WeftContraction
     */
    public Number getWeftContraction() {
        return (Number)getAttributeInternal(WEFTCONTRACTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for WeftContraction.
     * @param value value to set the WeftContraction
     */
    public void setWeftContraction(Number value) {
        setAttributeInternal(WEFTCONTRACTION, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for RespId, using the alias name RespId.
     * @return the RespId
     */
    public String getRespId() {
        return (String)getAttributeInternal(RESPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RespId.
     * @param value value to set the RespId
     */
    public void setRespId(String value) {
        setAttributeInternal(RESPID, value);
    }

    /**
     * Gets the attribute value for Segment3Value, using the alias name Segment3Value.
     * @return the Segment3Value
     */
    public String getSegment3Value() {
        return (String)getAttributeInternal(SEGMENT3VALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Segment3Value.
     * @param value value to set the Segment3Value
     */
    public void setSegment3Value(String value) {
        setAttributeInternal(SEGMENT3VALUE, value);
    }

    /**
     * Gets the attribute value for AccSize, using the alias name AccSize.
     * @return the AccSize
     */
    public String getAccSize() {
        return (String)getAttributeInternal(ACCSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccSize.
     * @param value value to set the AccSize
     */
    public void setAccSize(String value) {
        setAttributeInternal(ACCSIZE, value);
    }

    /**
     * Gets the attribute value for AccSizeDesc, using the alias name AccSizeDesc.
     * @return the AccSizeDesc
     */
    public String getAccSizeDesc() {
        return (String)getAttributeInternal(ACCSIZEDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccSizeDesc.
     * @param value value to set the AccSizeDesc
     */
    public void setAccSizeDesc(String value) {
        setAttributeInternal(ACCSIZEDESC, value);
    }

    /**
     * Gets the attribute value for MinOrderQty, using the alias name MinOrderQty.
     * @return the MinOrderQty
     */
    public Number getMinOrderQty() {
        return (Number)getAttributeInternal(MINORDERQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinOrderQty.
     * @param value value to set the MinOrderQty
     */
    public void setMinOrderQty(Number value) {
        setAttributeInternal(MINORDERQTY, value);
    }

    /**
     * Gets the attribute value for AccItemUom, using the alias name AccItemUom.
     * @return the AccItemUom
     */
    public String getAccItemUom() {
        return (String)getAttributeInternal(ACCITEMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccItemUom.
     * @param value value to set the AccItemUom
     */
    public void setAccItemUom(String value) {
        setAttributeInternal(ACCITEMUOM, value);
    }

    /**
     * Gets the attribute value for Dyed, using the alias name Dyed.
     * @return the Dyed
     */
    public String getDyed() {
        return (String)getAttributeInternal(DYED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dyed.
     * @param value value to set the Dyed
     */
    public void setDyed(String value) {
        setAttributeInternal(DYED, value);
    }

    /**
     * Gets the attribute value for DyeColor, using the alias name DyeColor.
     * @return the DyeColor
     */
    public String getDyeColor() {
        return (String)getAttributeInternal(DYECOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for DyeColor.
     * @param value value to set the DyeColor
     */
    public void setDyeColor(String value) {
        setAttributeInternal(DYECOLOR, value);
    }

    /**
     * Gets the attribute value for RefLotNum, using the alias name RefLotNum.
     * @return the RefLotNum
     */
    public String getRefLotNum() {
        return (String)getAttributeInternal(REFLOTNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefLotNum.
     * @param value value to set the RefLotNum
     */
    public void setRefLotNum(String value) {
        setAttributeInternal(REFLOTNUM, value);
    }

    /**
     * Gets the attribute value for DyeCode, using the alias name DyeCode.
     * @return the DyeCode
     */
    public String getDyeCode() {
        return (String)getAttributeInternal(DYECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DyeCode.
     * @param value value to set the DyeCode
     */
    public void setDyeCode(String value) {
        setAttributeInternal(DYECODE, value);
    }

    /**
     * Gets the attribute value for DyeStandard, using the alias name DyeStandard.
     * @return the DyeStandard
     */
    public String getDyeStandard() {
        return (String)getAttributeInternal(DYESTANDARD);
    }

    /**
     * Sets <code>value</code> as the attribute value for DyeStandard.
     * @param value value to set the DyeStandard
     */
    public void setDyeStandard(String value) {
        setAttributeInternal(DYESTANDARD, value);
    }

    /**
     * Gets the attribute value for WvFabricBlend, using the alias name WvFabricBlend.
     * @return the WvFabricBlend
     */
    public String getWvFabricBlend() {
        return (String)getAttributeInternal(WVFABRICBLEND);
    }

    /**
     * Sets <code>value</code> as the attribute value for WvFabricBlend.
     * @param value value to set the WvFabricBlend
     */
    public void setWvFabricBlend(String value) {
        setAttributeInternal(WVFABRICBLEND, value);
    }

    /**
     * Gets the attribute value for AccCustVal, using the alias name AccCustVal.
     * @return the AccCustVal
     */
    public String getAccCustVal() {
        return (String)getAttributeInternal(ACCCUSTVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccCustVal.
     * @param value value to set the AccCustVal
     */
    public void setAccCustVal(String value) {
        setAttributeInternal(ACCCUSTVAL, value);
    }

    /**
     * Gets the attribute value for InsText, using the alias name InsText.
     * @return the InsText
     */
    public String getInsText() {
        return (String)getAttributeInternal(INSTEXT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsText.
     * @param value value to set the InsText
     */
    public void setInsText(String value) {
        setAttributeInternal(INSTEXT, value);
    }

    /**
     * Gets the attribute value for CrtText, using the alias name CrtText.
     * @return the CrtText
     */
    public String getCrtText() {
        return (String)getAttributeInternal(CRTTEXT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtText.
     * @param value value to set the CrtText
     */
    public void setCrtText(String value) {
        setAttributeInternal(CRTTEXT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmYarnBlend() {
        return (RowIterator)getAttributeInternal(XXPMYARNBLEND);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmYarnType() {
        return (RowIterator)getAttributeInternal(XXPMYARNTYPE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmWarp() {
        return (RowIterator)getAttributeInternal(XXPMWARP);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmWeft() {
        return (RowIterator)getAttributeInternal(XXPMWEFT);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmItemMaster() {
        return (RowIterator)getAttributeInternal(XXPMITEMMASTER);
    }

    /**
     * @return the associated entity XxpmItemMasterImpl.
     */
    public XxpmItemMasterImpl getBaseImIdXxpmItemMaster() {
        return (XxpmItemMasterImpl)getAttributeInternal(BASEIMIDXXPMITEMMASTER);
    }

    /**
     * Sets <code>value</code> as the associated entity XxpmItemMasterImpl.
     */
    public void setBaseImIdXxpmItemMaster(XxpmItemMasterImpl value) {
        setAttributeInternal(BASEIMIDXXPMITEMMASTER, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    /*     public RowIterator getXxpmWeft1() {
        return (RowIterator)getAttributeInternal(XXPMWEFT1);
    } */


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmWarp1() {
        return (RowIterator)getAttributeInternal(XXPMWARP1);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmAttachments() {
        return (RowIterator)getAttributeInternal(XXPMATTACHMENTS);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmWeft1() {
        return (RowIterator)getAttributeInternal(XXPMWEFT1);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmYarnType1() {
        return (RowIterator)getAttributeInternal(XXPMYARNTYPE1);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmItemMaster1() {
        return (RowIterator)getAttributeInternal(XXPMITEMMASTER1);
    }

    /**
     * @return the associated entity XxpmItemMasterImpl.
     */
    public XxpmItemMasterImpl getBaseImIdXxpmItemMaster1() {
        return (XxpmItemMasterImpl)getAttributeInternal(BASEIMIDXXPMITEMMASTER1);
    }

    /**
     * Sets <code>value</code> as the associated entity XxpmItemMasterImpl.
     */
    public void setBaseImIdXxpmItemMaster1(XxpmItemMasterImpl value) {
        setAttributeInternal(BASEIMIDXXPMITEMMASTER1, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmYarnBlend1() {
        return (RowIterator)getAttributeInternal(XXPMYARNBLEND1);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmArticleBomAccessories() {
        return (RowIterator)getAttributeInternal(XXPMARTICLEBOMACCESSORIES);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmWeft2() {
        return (RowIterator)getAttributeInternal(XXPMWEFT2);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmWeft3() {
        return (RowIterator)getAttributeInternal(XXPMWEFT3);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmArticleBomFabric() {
        return (RowIterator)getAttributeInternal(XXPMARTICLEBOMFABRIC);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmWarp2() {
        return (RowIterator)getAttributeInternal(XXPMWARP2);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmWarp3() {
        return (RowIterator)getAttributeInternal(XXPMWARP3);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmAttachments1() {
        return (RowIterator)getAttributeInternal(XXPMATTACHMENTS1);
    }


    /**
     * @param imId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence imId) {
        return new Key(new Object[] { imId });
    }

    /**
     * Validation method for XxpmItemMaster.
     */
    public boolean validateXxpmItemMaster() {
        if (getSegment1() == "14" && getAccItemUom() == null) {
            return false;
        }
        return true;
    }


    /**
     * Add locking logic here.
     */
    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);

            super.lock();
        }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */

    protected void doDML(int operation, TransactionEvent e) {
        ModelActions ma = new ModelActions();
        String s1 = this.getSegment1();
        String s2 = this.getSegment2();
        String s3 = this.getSegment3();
        String s4 = this.getSegment4();
        String s5 = this.getSegment5();
        String s6 = this.getSegment6();
        String s7 = this.getSegment7();
        String dsc = this.getDescription();
        String dicResult = null;
        int isFlexValCreated = 0;
        ////////////////////////
        if (operation == DML_INSERT && (s2 == null || s2.length() < 1)) {

            s2 =
 ma.getMaxSegCode(this.getDBTransaction(), s1, (this.getAccAccessoryType() !=
                                                null ?
                                                this.getAccAccessoryType() :
                                                "A"));

        }
        dicResult =
                ma.dupItmChk(this.getDBTransaction(), dsc, s1, s2, s3, s4, s5,
                             s6, s7,
                             Integer.parseInt(String.valueOf((this.getImId() !=
                                                              null ?
                                                              this.getImId() :
                                                              0))));

        if (dicResult != null && operation == DML_INSERT) {
            this.setSegment2("");
            this.setDescription("");
        }

        if (dicResult == "DB ERROR") {
            ma.showError(this.getDBTransaction(),
                         "There is an error in DB function (XXPM_DUP_ITEM_CHECK_FUNC). Please try again.");
            return;
        } else if (dicResult == "ADF ERROR") {
            ma.showError(this.getDBTransaction(),
                         "There is an error in ADF method (dupItmChk). Please try again.");
            return;
        } else if (dicResult != null && dicResult.length() > 0) {
            ma.showError(this.getDBTransaction(),
                         "Item with same description or same segments already exists in following item(s): " +
                         dicResult);
            return;
        } else if (operation == DML_INSERT) {
            this.setSegment2(s2);
        } else if (operation == DML_UPDATE) {
            this.setLastUpdatedBy((String)ADFContext.getCurrent().getSessionScope().get("userID"));
            this.setRespId((String)ADFContext.getCurrent().getSessionScope().get("respID"));
            this.setLastUpdateDate(new oracle.jbo.domain.Date(new java.sql.Timestamp(Calendar.getInstance().getTimeInMillis())));
        }
        isFlexValCreated =
                ma.createFlexValue(this.getDBTransaction(), "NC_INV_ITEM_CODE",
                                   s1, s2, s7, "I", dsc);
        if (isFlexValCreated == 1) {

            try {
                ADFContext.getCurrent().getSessionScope().put("itemCreationMsg",
                                                              null);
                super.doDML(operation, e);
                if (operation == DML_INSERT) {
                    ADFContext.getCurrent().getSessionScope().put("itemCreationMsg",
                                                                  "Item has been created successfully.");
                } else if (operation == DML_UPDATE) {
                    ADFContext.getCurrent().getSessionScope().put("itemCreationMsg",
                                                                  "Item has been updated successfully.");
                }
            } catch (DMLConstraintException dce) {
                if (operation == DML_INSERT) {
                    this.setSegment2("");
                    this.setDescription("");
                }
                ma.showError(this.getDBTransaction(),
                             "Constraint: " + dce.getConstraintName() +
                             " voilated.");
                return;

            } catch (DMLException de) {
                if (operation == DML_INSERT) {
                    this.setSegment2("");
                    this.setDescription("");
                }
                String exception = de.getCause().toString();
                String msg =
                    exception.substring(exception.indexOf(":", exception.indexOf("ORA")) +
                                        2);
                ma.showError(this.getDBTransaction(),
                             msg.substring(0, msg.indexOf("ORA") > 1 ?
                                              msg.indexOf("ORA") - 1 :
                                              msg.length()));
                return;

            } catch (Exception e1) {
                e1.printStackTrace();
                if (operation == DML_INSERT) {
                    this.setSegment2("");
                    this.setDescription("");
                }
                ma.showError(this.getDBTransaction(),
                             "There is an error in doDML method of XxpmItemMasterImpl. Class: " +
                             e1.getClass());
                return;
            }
        } else {
            ma.showError(this.getDBTransaction(),
                         "There is an error in flex value creation. Please contact system administrator.");
            return;
        }

        ////////////////////////
        //if (this.getSegment1() != ("14")) {
        if (operation == DML_INSERT) {

            logger.warning("operation value -----> " + operation);
            logger.warning("Segment2 value -----> " + s2);

            /* isFlexValCreated =
                        ma.createFlexValue(this.getDBTransaction(), "NC_INV_ITEM_CODE",
                                           s1, s2, dsc); */
            if (isFlexValCreated == 1) {
                ma.createEBSItem(this.getDBTransaction(),
                                 Integer.parseInt(this.getImId().toString()));

                ma.orgSubinvLocAssignment(getDBTransaction(),
                                          Integer.parseInt(String.valueOf(this.getImId())),
                                          getSegment1());
                ma.itemCategoryAssignment(getDBTransaction(),
                                          Integer.parseInt(String.valueOf(this.getImId())));
                ma.itemDefaultCategoryUpdate(getDBTransaction(),
                                             Integer.parseInt(String.valueOf(this.getImId())));
                isFlexValCreated = 0;
            }

        } else if (operation == DML_UPDATE) {
            logger.warning("operation value -----> " + operation);
            logger.warning("Segment2 value -----> " + s2);

            /* isFlexValCreated =
                        ma.createFlexValue(this.getDBTransaction(), "NC_INV_ITEM_CODE",
                                           s1, s2, dsc); */
            if (isFlexValCreated == 1) {
                logger.warning("Item updation msg -----> " +
                               ma.updateEBSItem(this.getDBTransaction(),
                                                Integer.parseInt(getImId().toString())));
                isFlexValCreated = 0;
            }

        }
        //}

        logger.warning("ImId -----> " + getImId());
    }

    private RowIterator newXxpmAttachments;
    private RowIterator newXxpmYarnBlend;
    private RowIterator newXxpmYarnType;
    private RowIterator newXxpmWarp;
    private RowIterator newXxpmWeft;

    @Override
    public void postChanges(TransactionEvent transactionEvent) {
        if (this.getPostState() == STATUS_NEW) {
            this.newXxpmAttachments = this.getXxpmAttachments();
            this.newXxpmYarnBlend = this.getXxpmYarnBlend();
            this.newXxpmYarnType = this.getXxpmYarnType();
            this.newXxpmWarp = this.getXxpmWarp();
            this.newXxpmWeft = this.getXxpmWeft();
        }
        super.postChanges(transactionEvent);
    }

    @Override
    protected void refreshFKInNewContainees() {
        if (this.newXxpmAttachments != null) {
            Number imId = this.getImId().getSequenceNumber();
            while (this.newXxpmAttachments.hasNext()) {
                XxpmAttachmentsImpl attachment =
                    (XxpmAttachmentsImpl)newXxpmAttachments.next();
                attachment.setImId(imId);
            }
        }

        if (this.newXxpmYarnBlend != null) {
            Number imId = this.getImId().getSequenceNumber();
            while (this.newXxpmYarnBlend.hasNext()) {
                XxpmYarnBlendImpl yarnBlend =
                    (XxpmYarnBlendImpl)newXxpmYarnBlend.next();
                yarnBlend.setImId(imId);
            }
        }

        if (this.newXxpmYarnType != null) {
            Number imId = this.getImId().getSequenceNumber();
            while (this.newXxpmYarnType.hasNext()) {
                XxpmYarnTypeImpl yarnType =
                    (XxpmYarnTypeImpl)newXxpmYarnType.next();
                yarnType.setImId(imId);
            }
        }


        if (this.newXxpmWarp != null) {
            Number imId = this.getImId().getSequenceNumber();
            while (this.newXxpmWarp.hasNext()) {
                XxpmWarpImpl warp = (XxpmWarpImpl)newXxpmWarp.next();
                warp.setImId(imId);
            }
        }

        if (this.newXxpmWeft != null) {
            Number imId = this.getImId().getSequenceNumber();
            while (this.newXxpmWeft.hasNext()) {
                XxpmWeftImpl weft = (XxpmWeftImpl)newXxpmWeft.next();
                weft.setImId(imId);
            }
        }


        this.newXxpmAttachments = null;
        this.newXxpmYarnBlend = null;
        this.newXxpmYarnType = null;
        this.newXxpmWarp = null;
        this.newXxpmWeft = null;
        //super.refreshFKInNewContainees();
    }
}
