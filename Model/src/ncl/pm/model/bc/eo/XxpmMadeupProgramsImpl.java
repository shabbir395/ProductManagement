package ncl.pm.model.bc.eo;

import ncl.pm.model.bc.view.xxpmJC.ModelActions;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.DMLConstraintException;
import oracle.jbo.DMLException;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 30 15:29:12 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmMadeupProgramsImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ProgId {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getProgId();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setProgId((DBSequence)value);
            }
        }
        ,
        ProgName {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getProgName();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setProgName((String)value);
            }
        }
        ,
        CustomerId {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getCustomerId();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setCustomerId((Number)value);
            }
        }
        ,
        CustomerCode {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getCustomerCode();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setCustomerCode((String)value);
            }
        }
        ,
        ThreadCount {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getThreadCount();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setThreadCount((String)value);
            }
        }
        ,
        BrandName {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getBrandName();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setBrandName((String)value);
            }
        }
        ,
        WeaveDesign {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getWeaveDesign();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setWeaveDesign((String)value);
            }
        }
        ,
        UserId {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getUserId();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setUserId((Number)value);
            }
        }
        ,
        ManagerId {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getManagerId();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setManagerId((Number)value);
            }
        }
        ,
        ItemStatusFlag {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getItemStatusFlag();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setItemStatusFlag((Number)value);
            }
        }
        ,
        ProgCode {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getProgCode();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setProgCode((String)value);
            }
        }
        ,
        ProgramResultant {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getProgramResultant();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setProgramResultant((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        EbsStatus {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getEbsStatus();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setEbsStatus((Integer)value);
            }
        }
        ,
        FolderCode {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getFolderCode();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setFolderCode((Integer)value);
            }
        }
        ,
        XxpmMadeupColors {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getXxpmMadeupColors();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxpmMadeupArticles {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getXxpmMadeupArticles();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxpmMadeupSets {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getXxpmMadeupSets();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FndUser {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getFndUser();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setFndUser((EntityImpl)value);
            }
        }
        ,
        XxpmMadeupSizes {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getXxpmMadeupSizes();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxpmAttachments {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getXxpmAttachments();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxpmArticleBom {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getXxpmArticleBom();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxpmCustomersV {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getXxpmCustomersV();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setXxpmCustomersV((EntityImpl)value);
            }
        }
        ,
        XxpmPoHeader {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getXxpmPoHeader();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxpmSetBom {
            public Object get(XxpmMadeupProgramsImpl obj) {
                return obj.getXxpmSetBom();
            }

            public void put(XxpmMadeupProgramsImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxpmMadeupProgramsImpl object);

        public abstract void put(XxpmMadeupProgramsImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PROGID = AttributesEnum.ProgId.index();
    public static final int PROGNAME = AttributesEnum.ProgName.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int CUSTOMERCODE = AttributesEnum.CustomerCode.index();
    public static final int THREADCOUNT = AttributesEnum.ThreadCount.index();
    public static final int BRANDNAME = AttributesEnum.BrandName.index();
    public static final int WEAVEDESIGN = AttributesEnum.WeaveDesign.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int MANAGERID = AttributesEnum.ManagerId.index();
    public static final int ITEMSTATUSFLAG = AttributesEnum.ItemStatusFlag.index();
    public static final int PROGCODE = AttributesEnum.ProgCode.index();
    public static final int PROGRAMRESULTANT = AttributesEnum.ProgramResultant.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int EBSSTATUS = AttributesEnum.EbsStatus.index();
    public static final int FOLDERCODE = AttributesEnum.FolderCode.index();
    public static final int XXPMMADEUPCOLORS = AttributesEnum.XxpmMadeupColors.index();
    public static final int XXPMMADEUPARTICLES = AttributesEnum.XxpmMadeupArticles.index();
    public static final int XXPMMADEUPSETS = AttributesEnum.XxpmMadeupSets.index();
    public static final int FNDUSER = AttributesEnum.FndUser.index();
    public static final int XXPMMADEUPSIZES = AttributesEnum.XxpmMadeupSizes.index();
    public static final int XXPMATTACHMENTS = AttributesEnum.XxpmAttachments.index();
    public static final int XXPMARTICLEBOM = AttributesEnum.XxpmArticleBom.index();
    public static final int XXPMCUSTOMERSV = AttributesEnum.XxpmCustomersV.index();
    public static final int XXPMPOHEADER = AttributesEnum.XxpmPoHeader.index();
    public static final int XXPMSETBOM = AttributesEnum.XxpmSetBom.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxpmMadeupProgramsImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("ncl.pm.model.bc.eo.XxpmMadeupPrograms");
        }
        return mDefinitionObject;
    }
    ModelActions ma = new ModelActions();

    /**
     * Gets the attribute value for ProgId, using the alias name ProgId.
     * @return the ProgId
     */
    public DBSequence getProgId() {
        return (DBSequence)getAttributeInternal(PROGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProgId.
     * @param value value to set the ProgId
     */
    public void setProgId(DBSequence value) {
        setAttributeInternal(PROGID, value);
    }

    /**
     * Gets the attribute value for ProgName, using the alias name ProgName.
     * @return the ProgName
     */
    public String getProgName() {
        return (String)getAttributeInternal(PROGNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProgName.
     * @param value value to set the ProgName
     */
    public void setProgName(String value) {
        setAttributeInternal(PROGNAME, value);
    }

    /**
     * Gets the attribute value for CustomerId, using the alias name CustomerId.
     * @return the CustomerId
     */
    public Number getCustomerId() {
        return (Number)getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomerId.
     * @param value value to set the CustomerId
     */
    public void setCustomerId(Number value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * Gets the attribute value for CustomerCode, using the alias name CustomerCode.
     * @return the CustomerCode
     */
    public String getCustomerCode() {
        return (String)getAttributeInternal(CUSTOMERCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomerCode.
     * @param value value to set the CustomerCode
     */
    public void setCustomerCode(String value) {
        setAttributeInternal(CUSTOMERCODE, value);
    }

    /**
     * Gets the attribute value for ThreadCount, using the alias name ThreadCount.
     * @return the ThreadCount
     */
    public String getThreadCount() {
        return (String)getAttributeInternal(THREADCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ThreadCount.
     * @param value value to set the ThreadCount
     */
    public void setThreadCount(String value) {
        setAttributeInternal(THREADCOUNT, value);
    }

    /**
     * Gets the attribute value for BrandName, using the alias name BrandName.
     * @return the BrandName
     */
    public String getBrandName() {
        return (String)getAttributeInternal(BRANDNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BrandName.
     * @param value value to set the BrandName
     */
    public void setBrandName(String value) {
        setAttributeInternal(BRANDNAME, value);
    }

    /**
     * Gets the attribute value for WeaveDesign, using the alias name WeaveDesign.
     * @return the WeaveDesign
     */
    public String getWeaveDesign() {
        return (String)getAttributeInternal(WEAVEDESIGN);
    }

    /**
     * Sets <code>value</code> as the attribute value for WeaveDesign.
     * @param value value to set the WeaveDesign
     */
    public void setWeaveDesign(String value) {
        setAttributeInternal(WEAVEDESIGN, value);
    }


    /**
     * Gets the attribute value for UserId, using the alias name UserId.
     * @return the UserId
     */
    public Number getUserId() {
        return (Number)getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserId.
     * @param value value to set the UserId
     */
    public void setUserId(Number value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for ManagerId, using the alias name ManagerId.
     * @return the ManagerId
     */
    public Number getManagerId() {
        return (Number)getAttributeInternal(MANAGERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManagerId.
     * @param value value to set the ManagerId
     */
    public void setManagerId(Number value) {
        setAttributeInternal(MANAGERID, value);
    }


    /**
     * Gets the attribute value for ItemStatusFlag, using the alias name ItemStatusFlag.
     * @return the ItemStatusFlag
     */
    public Number getItemStatusFlag() {
        return (Number)getAttributeInternal(ITEMSTATUSFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemStatusFlag.
     * @param value value to set the ItemStatusFlag
     */
    public void setItemStatusFlag(Number value) {
        setAttributeInternal(ITEMSTATUSFLAG, value);
    }

    /**
     * Gets the attribute value for ProgCode, using the alias name ProgCode.
     * @return the ProgCode
     */
    public String getProgCode() {
        return (String)getAttributeInternal(PROGCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProgCode.
     * @param value value to set the ProgCode
     */
    public void setProgCode(String value) {
        setAttributeInternal(PROGCODE, value);
    }


    /**
     * Gets the attribute value for ProgramResultant, using the alias name ProgramResultant.
     * @return the ProgramResultant
     */
    public String getProgramResultant() {
        return (String)getAttributeInternal(PROGRAMRESULTANT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProgramResultant.
     * @param value value to set the ProgramResultant
     */
    public void setProgramResultant(String value) {
        setAttributeInternal(PROGRAMRESULTANT, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for EbsStatus, using the alias name EbsStatus.
     * @return the EbsStatus
     */
    public Integer getEbsStatus() {
        return (Integer)getAttributeInternal(EBSSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for EbsStatus.
     * @param value value to set the EbsStatus
     */
    public void setEbsStatus(Integer value) {
        setAttributeInternal(EBSSTATUS, value);
    }

    /**
     * Gets the attribute value for FolderCode, using the alias name FolderCode.
     * @return the FolderCode
     */
    public Integer getFolderCode() {
        return (Integer)getAttributeInternal(FOLDERCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FolderCode.
     * @param value value to set the FolderCode
     */
    public void setFolderCode(Integer value) {
        setAttributeInternal(FOLDERCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmMadeupColors() {
        return (RowIterator)getAttributeInternal(XXPMMADEUPCOLORS);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmMadeupArticles() {
        return (RowIterator)getAttributeInternal(XXPMMADEUPARTICLES);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmMadeupSets() {
        return (RowIterator)getAttributeInternal(XXPMMADEUPSETS);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getFndUser() {
        return (EntityImpl)getAttributeInternal(FNDUSER);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setFndUser(EntityImpl value) {
        setAttributeInternal(FNDUSER, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmMadeupSizes() {
        return (RowIterator)getAttributeInternal(XXPMMADEUPSIZES);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmAttachments() {
        return (RowIterator)getAttributeInternal(XXPMATTACHMENTS);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmArticleBom() {
        return (RowIterator)getAttributeInternal(XXPMARTICLEBOM);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getXxpmCustomersV() {
        return (EntityImpl)getAttributeInternal(XXPMCUSTOMERSV);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setXxpmCustomersV(EntityImpl value) {
        setAttributeInternal(XXPMCUSTOMERSV, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmPoHeader() {
        return (RowIterator)getAttributeInternal(XXPMPOHEADER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxpmSetBom() {
        return (RowIterator)getAttributeInternal(XXPMSETBOM);
    }


    /**
     * @param progId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence progId) {
        return new Key(new Object[]{progId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);

            super.lock();
        }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        String progCode = this.getProgCode();
        if (operation == DML_INSERT && this.getProgCode() == null) {
            progCode = ma.getMaxSegCode(this.getDBTransaction(), "24", "M");
        }
        if (operation != DML_DELETE) {
            this.setProgName(this.getProgramResultant());
            this.setProgCode(progCode);
        }
        int isFlexValCreated = 0;
        isFlexValCreated =
                ma.createFlexValue(this.getDBTransaction(), "NC_INV_ITEM_SPARE2",
                                   "24", "00000", this.getProgCode(), "M",
                                   this.getProgName());
        if (isFlexValCreated == 1) {

            try {
                ADFContext.getCurrent().getSessionScope().put("progErrors",
                                                              "N");
                super.doDML(operation, e);
            } catch (DMLConstraintException dce) {
                ADFContext.getCurrent().getSessionScope().put("progErrors",
                                                              "Y");
                ma.showError(this.getDBTransaction(),
                             "Constraint: " + dce.getConstraintName() +
                             " voilated.");
                return;

            } catch (DMLException de) {
                ADFContext.getCurrent().getSessionScope().put("progErrors",
                                                              "Y");
                String exception = de.getCause().toString();
                String msg =
                    exception.substring(exception.indexOf(":", exception.indexOf("ORA")) +
                                        2);
                ma.showError(this.getDBTransaction(),
                             msg.substring(0, msg.indexOf("ORA") > 1 ?
                                              msg.indexOf("ORA") - 1 :
                                              msg.length()));
                return;

            } catch (Exception e1) {
                e1.printStackTrace();
                ADFContext.getCurrent().getSessionScope().put("progErrors",
                                                              "Y");
                ma.showError(this.getDBTransaction(),
                             "There is an error in doDML method of XxpmMadeupProgramsImpl. Class: " + e1.getClass());
                return;
            }
        } else {
            ma.showError(this.getDBTransaction(),
                         "An unexpected error occured. Please contact system administrator.");
            return;
        }
    }

    private RowIterator newXxpmAttachments;
    private RowIterator newXxpmMadeupArticles;
    private RowIterator newXxpmMadeupSets;
    private RowIterator newXxpmMadeupColors;
    private RowIterator newXxpmMadeupSizes;

    @Override
    public void postChanges(TransactionEvent transactionEvent) {
        if (this.getPostState() == STATUS_NEW) {
            this.newXxpmAttachments = this.getXxpmAttachments();
            this.newXxpmMadeupArticles = this.getXxpmMadeupArticles();
            this.newXxpmMadeupSets = this.getXxpmMadeupSets();
            this.newXxpmMadeupColors = this.getXxpmMadeupColors();
            this.newXxpmMadeupSizes = this.getXxpmMadeupSizes();
        }
        super.postChanges(transactionEvent);
    }

    @Override
    protected void refreshFKInNewContainees() {
        if (this.newXxpmAttachments != null) {
            Number progId = this.getProgId().getSequenceNumber();
            while (this.newXxpmAttachments.hasNext()) {
                XxpmAttachmentsImpl attachment =
                    (XxpmAttachmentsImpl)newXxpmAttachments.next();
                attachment.setProgId(progId);
            }
        }

        if (this.newXxpmMadeupArticles != null) {
            Number progId = this.getProgId().getSequenceNumber();
            while (this.newXxpmMadeupArticles.hasNext()) {
                XxpmMadeupArticlesImpl articles =
                    (XxpmMadeupArticlesImpl)newXxpmMadeupArticles.next();
                articles.setProgId(progId);
            }
        }

        if (this.newXxpmMadeupSets != null) {
            Number progId = this.getProgId().getSequenceNumber();
            while (this.newXxpmMadeupSets.hasNext()) {
                XxpmMadeupSetsImpl sets =
                    (XxpmMadeupSetsImpl)newXxpmMadeupSets.next();
                sets.setProgId(progId);
            }
        }

        if (this.newXxpmMadeupColors != null) {
            Number progId = this.getProgId().getSequenceNumber();
            while (this.newXxpmMadeupColors.hasNext()) {
                XxpmMadeupColorsImpl colors =
                    (XxpmMadeupColorsImpl)newXxpmMadeupColors.next();
                colors.setProgId(progId);
            }
        }

        if (this.newXxpmMadeupSizes != null) {
            Number progId = this.getProgId().getSequenceNumber();
            while (this.newXxpmMadeupSizes.hasNext()) {
                XxpmMadeupSizesImpl sizes =
                    (XxpmMadeupSizesImpl)newXxpmMadeupSizes.next();
                sizes.setProgId(progId);
            }
        }

        this.newXxpmAttachments = null;
        this.newXxpmMadeupArticles = null;
        this.newXxpmMadeupSets = null;
        this.newXxpmMadeupColors = null;
        this.newXxpmMadeupSizes = null;
        //super.refreshFKInNewContainees();
    }
}
