package ncl.pm.model.bc.vo;

import java.util.ArrayList;

import java.util.Collections;

import ncl.pm.model.bc.eo.XxpmItemMasterImpl;


import ncl.pm.model.bc.view.xxpmJC.Logger;
import ncl.pm.model.bc.vo.common.XxpmItemMasterSpnViewRow;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 12 18:36:10 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmItemMasterSpnViewRowImpl extends ViewRowImpl implements XxpmItemMasterSpnViewRow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Segment2 {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getSegment2();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setSegment2((String)value);
            }
        },
        Description {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getDescription();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        },
        YarnCount {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getYarnCount();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setYarnCount((Number)value);
            }
        },
        YarnPlies {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getYarnPlies();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setYarnPlies((String)value);
            }
        },
        YarnType {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getYarnType();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setYarnType((String)value);
            }
        },
        MeasuringSystem {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getMeasuringSystem();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setMeasuringSystem((String)value);
            }
        },
        YarnStatus {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getYarnStatus();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setYarnStatus((String)value);
            }
        },
        MasterResultant {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getMasterResultant();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setMasterResultant((String)value);
            }
        },
        SumYBTotRatio {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getSumYBTotRatio();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setSumYBTotRatio((Number)value);
            }
        },
        Segment1 {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getSegment1();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setSegment1((String)value);
            }
        },
        RowStatus {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getRowStatus();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setRowStatus((Integer)value);
            }
        },
        ImId {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getImId();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setImId((DBSequence)value);
            }
        },
        EbsItemId {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getEbsItemId();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setEbsItemId((Number)value);
            }
        },
        ItemStatusFlag {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getItemStatusFlag();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setItemStatusFlag((Integer)value);
            }
        },
        Segment3 {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getSegment3();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setSegment3((String)value);
            }
        },
        Segment4 {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getSegment4();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setSegment4((String)value);
            }
        },
        Segment5 {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getSegment5();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setSegment5((String)value);
            }
        },
        Segment6 {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getSegment6();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setSegment6((String)value);
            }
        },
        Segment7 {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getSegment7();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setSegment7((String)value);
            }
        },
        YarnOutput {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getYarnOutput();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setYarnOutput((String)value);
            }
        },
        FolderCode {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getFolderCode();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setFolderCode((Integer)value);
            }
        },
        YbResultantSum {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getYbResultantSum();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setYbResultantSum((String)value);
            }
        },
        YtResultantSum {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getYtResultantSum();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setYtResultantSum((String)value);
            }
        },
        SpnResultant {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getSpnResultant();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setSpnResultant((String)value);
            }
        },
        Segment3Value {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getSegment3Value();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setSegment3Value((String)value);
            }
        },
        Dyed {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getDyed();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setDyed((String)value);
            }
        },
        DyeColor {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getDyeColor();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setDyeColor((String)value);
            }
        },
        DyeColorNameTrans {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getDyeColorNameTrans();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setDyeColorNameTrans((String)value);
            }
        },
        RefLotNum {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getRefLotNum();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setRefLotNum((String)value);
            }
        },
        DyedResultant {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getDyedResultant();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setDyedResultant((String)value);
            }
        },
        XxpmYarnBlendView {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getXxpmYarnBlendView();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmYarnTypeView {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getXxpmYarnTypeView();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmAttachmentsView {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getXxpmAttachmentsView();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmWeftView {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getXxpmWeftView();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        YarnPliesLOV {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getYarnPliesLOV();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        YarnTypeLOV {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getYarnTypeLOV();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        MeasuringSystemLOV {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getMeasuringSystemLOV();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        YarnStatusLOV {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getYarnStatusLOV();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        YarnOutputLov {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getYarnOutputLov();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItemStatusLov {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getItemStatusLov();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SpnDyedLov {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getSpnDyedLov();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItemColorsLov {
            public Object get(XxpmItemMasterSpnViewRowImpl obj) {
                return obj.getItemColorsLov();
            }

            public void put(XxpmItemMasterSpnViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxpmItemMasterSpnViewRowImpl object);

        public abstract void put(XxpmItemMasterSpnViewRowImpl object,
                                 Object value);

        public int index() {
            return XxpmItemMasterSpnViewRowImpl.AttributesEnum.firstIndex() +
                ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return XxpmItemMasterSpnViewRowImpl.AttributesEnum.firstIndex() +
                XxpmItemMasterSpnViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = XxpmItemMasterSpnViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SEGMENT2 = AttributesEnum.Segment2.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int YARNCOUNT = AttributesEnum.YarnCount.index();
    public static final int YARNPLIES = AttributesEnum.YarnPlies.index();
    public static final int YARNTYPE = AttributesEnum.YarnType.index();
    public static final int MEASURINGSYSTEM =
        AttributesEnum.MeasuringSystem.index();
    public static final int YARNSTATUS = AttributesEnum.YarnStatus.index();
    public static final int MASTERRESULTANT =
        AttributesEnum.MasterResultant.index();
    public static final int SUMYBTOTRATIO =
        AttributesEnum.SumYBTotRatio.index();
    public static final int SEGMENT1 = AttributesEnum.Segment1.index();
    public static final int ROWSTATUS = AttributesEnum.RowStatus.index();
    public static final int IMID = AttributesEnum.ImId.index();
    public static final int EBSITEMID = AttributesEnum.EbsItemId.index();
    public static final int ITEMSTATUSFLAG =
        AttributesEnum.ItemStatusFlag.index();
    public static final int SEGMENT3 = AttributesEnum.Segment3.index();
    public static final int SEGMENT4 = AttributesEnum.Segment4.index();
    public static final int SEGMENT5 = AttributesEnum.Segment5.index();
    public static final int SEGMENT6 = AttributesEnum.Segment6.index();
    public static final int SEGMENT7 = AttributesEnum.Segment7.index();
    public static final int YARNOUTPUT = AttributesEnum.YarnOutput.index();
    public static final int FOLDERCODE = AttributesEnum.FolderCode.index();
    public static final int YBRESULTANTSUM =
        AttributesEnum.YbResultantSum.index();
    public static final int YTRESULTANTSUM =
        AttributesEnum.YtResultantSum.index();
    public static final int SPNRESULTANT = AttributesEnum.SpnResultant.index();
    public static final int SEGMENT3VALUE =
        AttributesEnum.Segment3Value.index();
    public static final int DYED = AttributesEnum.Dyed.index();
    public static final int DYECOLOR = AttributesEnum.DyeColor.index();
    public static final int DYECOLORNAMETRANS =
        AttributesEnum.DyeColorNameTrans.index();
    public static final int REFLOTNUM = AttributesEnum.RefLotNum.index();
    public static final int DYEDRESULTANT =
        AttributesEnum.DyedResultant.index();
    public static final int XXPMYARNBLENDVIEW =
        AttributesEnum.XxpmYarnBlendView.index();
    public static final int XXPMYARNTYPEVIEW =
        AttributesEnum.XxpmYarnTypeView.index();
    public static final int XXPMATTACHMENTSVIEW =
        AttributesEnum.XxpmAttachmentsView.index();
    public static final int XXPMWEFTVIEW = AttributesEnum.XxpmWeftView.index();
    public static final int YARNPLIESLOV = AttributesEnum.YarnPliesLOV.index();
    public static final int YARNTYPELOV = AttributesEnum.YarnTypeLOV.index();
    public static final int MEASURINGSYSTEMLOV =
        AttributesEnum.MeasuringSystemLOV.index();
    public static final int YARNSTATUSLOV =
        AttributesEnum.YarnStatusLOV.index();
    public static final int YARNOUTPUTLOV =
        AttributesEnum.YarnOutputLov.index();
    public static final int ITEMSTATUSLOV =
        AttributesEnum.ItemStatusLov.index();
    public static final int SPNDYEDLOV = AttributesEnum.SpnDyedLov.index();
    public static final int ITEMCOLORSLOV =
        AttributesEnum.ItemColorsLov.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxpmItemMasterSpnViewRowImpl() {
    }

    /**
     * Gets XxpmItemMaster entity object.
     * @return the XxpmItemMaster
     */
    public XxpmItemMasterImpl getXxpmItemMaster() {
        return (XxpmItemMasterImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for SEGMENT2 using the alias name Segment2.
     * @return the SEGMENT2
     */
    public String getSegment2() {
        return (String)getAttributeInternal(SEGMENT2);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT2 using the alias name Segment2.
     * @param value value to set the SEGMENT2
     */
    public void setSegment2(String value) {
        setAttributeInternal(SEGMENT2, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for YARN_COUNT using the alias name YarnCount.
     * @return the YARN_COUNT
     */
    public Number getYarnCount() {
        return (Number)getAttributeInternal(YARNCOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for YARN_COUNT using the alias name YarnCount.
     * @param value value to set the YARN_COUNT
     */
    public void setYarnCount(Number value) {
        setAttributeInternal(YARNCOUNT, value);
    }

    /**
     * Gets the attribute value for YARN_PLIES using the alias name YarnPlies.
     * @return the YARN_PLIES
     */
    public String getYarnPlies() {
        return (String)getAttributeInternal(YARNPLIES);
    }

    /**
     * Sets <code>value</code> as attribute value for YARN_PLIES using the alias name YarnPlies.
     * @param value value to set the YARN_PLIES
     */
    public void setYarnPlies(String value) {
        setAttributeInternal(YARNPLIES, value);
    }

    /**
     * Gets the attribute value for YARN_TYPE using the alias name YarnType.
     * @return the YARN_TYPE
     */
    public String getYarnType() {
        return (String)getAttributeInternal(YARNTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for YARN_TYPE using the alias name YarnType.
     * @param value value to set the YARN_TYPE
     */
    public void setYarnType(String value) {
        setAttributeInternal(YARNTYPE, value);
    }

    /**
     * Gets the attribute value for MEASURING_SYSTEM using the alias name MeasuringSystem.
     * @return the MEASURING_SYSTEM
     */
    public String getMeasuringSystem() {
        return (String)getAttributeInternal(MEASURINGSYSTEM);
    }

    /**
     * Sets <code>value</code> as attribute value for MEASURING_SYSTEM using the alias name MeasuringSystem.
     * @param value value to set the MEASURING_SYSTEM
     */
    public void setMeasuringSystem(String value) {
        setAttributeInternal(MEASURINGSYSTEM, value);
    }

    /**
     * Gets the attribute value for YARN_STATUS using the alias name YarnStatus.
     * @return the YARN_STATUS
     */
    public String getYarnStatus() {
        return (String)getAttributeInternal(YARNSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for YARN_STATUS using the alias name YarnStatus.
     * @param value value to set the YARN_STATUS
     */
    public void setYarnStatus(String value) {
        setAttributeInternal(YARNSTATUS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute MasterResultant.
     * @return the MasterResultant
     */
    public String getMasterResultant() {
        return (String)getAttributeInternal(MASTERRESULTANT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MasterResultant.
     * @param value value to set the  MasterResultant
     */
    public void setMasterResultant(String value) {
        setAttributeInternal(MASTERRESULTANT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SumYBTotRatio.
     * @return the SumYBTotRatio
     */
    public Number getSumYBTotRatio() {
        return (Number)getAttributeInternal(SUMYBTOTRATIO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SumYBTotRatio.
     * @param value value to set the  SumYBTotRatio
     */
    public void setSumYBTotRatio(Number value) {
        setAttributeInternal(SUMYBTOTRATIO, value);
    }

    /**
     * Gets the attribute value for SEGMENT1 using the alias name Segment1.
     * @return the SEGMENT1
     */
    public String getSegment1() {
        return (String)getAttributeInternal(SEGMENT1);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT1 using the alias name Segment1.
     * @param value value to set the SEGMENT1
     */
    public void setSegment1(String value) {
        setAttributeInternal(SEGMENT1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RowStatus.
     * @return the RowStatus
     */
    public Integer getRowStatus() {
        //return (Integer) getAttributeInternal(ROWSTATUS);
        byte entityState = this.getEntity(0).getEntityState();
        return new Integer(entityState);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RowStatus.
     * @param value value to set the  RowStatus
     */
    public void setRowStatus(Integer value) {
        setAttributeInternal(ROWSTATUS, value);
    }

    /**
     * Gets the attribute value for IM_ID using the alias name ImId.
     * @return the IM_ID
     */
    public DBSequence getImId() {
        return (DBSequence)getAttributeInternal(IMID);
    }

    /**
     * Sets <code>value</code> as attribute value for IM_ID using the alias name ImId.
     * @param value value to set the IM_ID
     */
    public void setImId(DBSequence value) {
        setAttributeInternal(IMID, value);
    }

    /**
     * Gets the attribute value for EBS_ITEM_ID using the alias name EbsItemId.
     * @return the EBS_ITEM_ID
     */
    public Number getEbsItemId() {
        return (Number)getAttributeInternal(EBSITEMID);
    }

    /**
     * Sets <code>value</code> as attribute value for EBS_ITEM_ID using the alias name EbsItemId.
     * @param value value to set the EBS_ITEM_ID
     */
    public void setEbsItemId(Number value) {
        setAttributeInternal(EBSITEMID, value);
    }

    /**
     * Gets the attribute value for ITEM_STATUS_FLAG using the alias name ItemStatusFlag.
     * @return the ITEM_STATUS_FLAG
     */
    public Integer getItemStatusFlag() {
        return (Integer)getAttributeInternal(ITEMSTATUSFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_STATUS_FLAG using the alias name ItemStatusFlag.
     * @param value value to set the ITEM_STATUS_FLAG
     */
    public void setItemStatusFlag(Integer value) {
        setAttributeInternal(ITEMSTATUSFLAG, value);
    }

    /**
     * Gets the attribute value for SEGMENT3 using the alias name Segment3.
     * @return the SEGMENT3
     */
    public String getSegment3() {
        return (String)getAttributeInternal(SEGMENT3);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT3 using the alias name Segment3.
     * @param value value to set the SEGMENT3
     */
    public void setSegment3(String value) {
        setAttributeInternal(SEGMENT3, value);
    }

    /**
     * Gets the attribute value for SEGMENT4 using the alias name Segment4.
     * @return the SEGMENT4
     */
    public String getSegment4() {
        return (String)getAttributeInternal(SEGMENT4);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT4 using the alias name Segment4.
     * @param value value to set the SEGMENT4
     */
    public void setSegment4(String value) {
        setAttributeInternal(SEGMENT4, value);
    }

    /**
     * Gets the attribute value for SEGMENT5 using the alias name Segment5.
     * @return the SEGMENT5
     */
    public String getSegment5() {
        return (String)getAttributeInternal(SEGMENT5);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT5 using the alias name Segment5.
     * @param value value to set the SEGMENT5
     */
    public void setSegment5(String value) {
        setAttributeInternal(SEGMENT5, value);
    }

    /**
     * Gets the attribute value for SEGMENT6 using the alias name Segment6.
     * @return the SEGMENT6
     */
    public String getSegment6() {
        return (String)getAttributeInternal(SEGMENT6);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT6 using the alias name Segment6.
     * @param value value to set the SEGMENT6
     */
    public void setSegment6(String value) {
        setAttributeInternal(SEGMENT6, value);
    }

    /**
     * Gets the attribute value for SEGMENT7 using the alias name Segment7.
     * @return the SEGMENT7
     */
    public String getSegment7() {
        return (String)getAttributeInternal(SEGMENT7);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT7 using the alias name Segment7.
     * @param value value to set the SEGMENT7
     */
    public void setSegment7(String value) {
        setAttributeInternal(SEGMENT7, value);
    }

    /**
     * Gets the attribute value for YARN_OUTPUT using the alias name YarnOutput.
     * @return the YARN_OUTPUT
     */
    public String getYarnOutput() {
        return (String)getAttributeInternal(YARNOUTPUT);
    }

    /**
     * Sets <code>value</code> as attribute value for YARN_OUTPUT using the alias name YarnOutput.
     * @param value value to set the YARN_OUTPUT
     */
    public void setYarnOutput(String value) {
        setAttributeInternal(YARNOUTPUT, value);
    }

    /**
     * Gets the attribute value for FOLDER_CODE using the alias name FolderCode.
     * @return the FOLDER_CODE
     */
    public Integer getFolderCode() {
        return (Integer)getAttributeInternal(FOLDERCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for FOLDER_CODE using the alias name FolderCode.
     * @param value value to set the FOLDER_CODE
     */
    public void setFolderCode(Integer value) {
        setAttributeInternal(FOLDERCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute YbResultantSum.
     * @return the YbResultantSum
     */
    public String getYbResultantSum() {
        //return (String) getAttributeInternal(YBRESULTANTSUM);
        String result = "";
        String cotton = "";
        String fiber = "";
        String pct = "";
        RowIterator ybIter = this.getXxpmYarnBlendView();
        Row curRow = null;
        ArrayList<String> ctnArray = new ArrayList<String>();
        ArrayList<String> fbrArray = new ArrayList<String>();
        //ybIter.reset();
        int i = 0;
        while (ybIter.hasNext()) {
            curRow = ybIter.next();
            if (curRow != null) {
                /* cotton +=
                        (curRow.getAttribute("CottonRatio") != null ? curRow.getAttribute("CottonRatio") +
                         "% " : "") +
                        (curRow.getAttribute("Cotton") != null ? curRow.getAttribute("Cotton") +
                         " " : ""); */
                ctnArray.add(i,
                             (curRow.getAttribute("Cotton") != null ? curRow.getAttribute("Cotton") :
                              "") +
                             (curRow.getAttribute("CottonRatio") != null &&
                              curRow.getAttribute("Cotton") != null ? "^#&$" :
                              "") +
                             (curRow.getAttribute("CottonRatio") != null ?
                              curRow.getAttribute("CottonRatio") + "%" : ""));
                /* fiber +=
                        (curRow.getAttribute("FiberRatio") != null ? curRow.getAttribute("FiberRatio") +
                         "% " : "") +
                        (curRow.getAttribute("Fiber") != null ? curRow.getAttribute("Fiber") +
                         " " : ""); */
                fbrArray.add(i,
                             (curRow.getAttribute("Fiber") != null ? curRow.getAttribute("Fiber") :
                              "") +
                             (curRow.getAttribute("FiberRatio") != null &&
                              curRow.getAttribute("Fiber") != null ? "^#&$" :
                              "") +
                             (curRow.getAttribute("FiberRatio") != null ?
                              curRow.getAttribute("FiberRatio") + "%" : ""));
            }
            i++;
        }
        Logger.adfLogger.warning("ctnArray List before sorting: " + ctnArray);
        Collections.sort(ctnArray);
        Logger.adfLogger.warning("ctnArray List after sorting: " + ctnArray);

        Logger.adfLogger.warning("fbrArray List before sorting: " + fbrArray);
        Collections.sort(fbrArray);
        Logger.adfLogger.warning("fbrArray List after sorting: " + fbrArray);

        for (int j = 0; j < ctnArray.size(); j++) {
            if (ctnArray.get(j) != null && ctnArray.get(j).length() > 0) {
                if (ctnArray.get(j).indexOf("^#&$") > -1) {
                    cotton +=
                            ctnArray.get(j).substring(ctnArray.get(j).indexOf("^#&$") +
                                                      4) + " " +
                            ctnArray.get(j).substring(0,
                                                      ctnArray.get(j).indexOf("^#&$")) +
                            " ";
                }
            }
        }
        Logger.adfLogger.warning("pct: " + cotton);

        for (int j = 0; j < fbrArray.size(); j++) {
            if (fbrArray.get(j) != null && fbrArray.get(j).length() > 0) {
                if (fbrArray.get(j).indexOf("^#&$") > -1) {
                    fiber +=
                            fbrArray.get(j).substring(fbrArray.get(j).indexOf("^#&$") +
                                                      4) + " " +
                            fbrArray.get(j).substring(0,
                                                      fbrArray.get(j).indexOf("^#&$")) +
                            " ";
                }
            }
        }
        Logger.adfLogger.warning("pct2: " + cotton);

        result = cotton + fiber;
         Logger.adfLogger.warning("YB Resultant -----> " + result);
        return result;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute YbResultantSum.
     * @param value value to set the  YbResultantSum
     */
    public void setYbResultantSum(String value) {
        setAttributeInternal(YBRESULTANTSUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SpnResultant.
     * @return the SpnResultant
     */
    public String getSpnResultant() {
        //return (String) getAttributeInternal(SPNRESULTANT);
        String result = "";
        String dualCore = "";
        RowIterator ytIter = this.getXxpmYarnTypeView();
        Row ytRow = null;
        while (ytIter.hasNext()) {
            ytRow = ytIter.next();
            if (ytRow != null) {
                 Logger.adfLogger.warning("ytRow is not null");
                dualCore =
                        (ytRow.getAttribute("DualCore") != null ? (String)ytRow.getAttribute("DualCore") :
                         "");
            }
        }

        Logger.adfLogger.warning("dualCore val ===== " + dualCore);
        result =
                (getMasterResultant() != null ? getMasterResultant() : "") + " " +
                dualCore + " " + this.getYbResultantSum() +
                this.getYtResultantSum() + " " + this.getDyedResultant() +
                " " + (getYarnStatus() != null ? getYarnStatus() : "") + " " +
                (getYarnOutput() != null ? getYarnOutput() : "");

        result = result.replaceAll("\\s+", " ").trim();
        return result;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SpnResultant.
     * @param value value to set the  SpnResultant
     */
    public void setSpnResultant(String value) {
        setAttributeInternal(SPNRESULTANT, value);
    }


    /**
     * Gets the attribute value for SEGMENT3VALUE using the alias name Segment3Value.
     * @return the SEGMENT3VALUE
     */
    public String getSegment3Value() {
        return (String)getAttributeInternal(SEGMENT3VALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT3VALUE using the alias name Segment3Value.
     * @param value value to set the SEGMENT3VALUE
     */
    public void setSegment3Value(String value) {
        setAttributeInternal(SEGMENT3VALUE, value);
    }


    /**
     * Gets the attribute value for DYED using the alias name Dyed.
     * @return the DYED
     */
    public String getDyed() {
        return (String)getAttributeInternal(DYED);
    }

    /**
     * Sets <code>value</code> as attribute value for DYED using the alias name Dyed.
     * @param value value to set the DYED
     */
    public void setDyed(String value) {
        setAttributeInternal(DYED, value);
    }

    /**
     * Gets the attribute value for DYE_COLOR using the alias name DyeColor.
     * @return the DYE_COLOR
     */
    public String getDyeColor() {
        return (String)getAttributeInternal(DYECOLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for DYE_COLOR using the alias name DyeColor.
     * @param value value to set the DYE_COLOR
     */
    public void setDyeColor(String value) {
        setAttributeInternal(DYECOLOR, value);
    }

    /**
     * Gets the attribute value for REF_LOT_NUM using the alias name RefLotNum.
     * @return the REF_LOT_NUM
     */
    public String getRefLotNum() {
        return (String)getAttributeInternal(REFLOTNUM);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_LOT_NUM using the alias name RefLotNum.
     * @param value value to set the REF_LOT_NUM
     */
    public void setRefLotNum(String value) {
        setAttributeInternal(REFLOTNUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DyedResultant.
     * @return the DyedResultant
     */
    public String getDyedResultant() {
        return (String)getAttributeInternal(DYEDRESULTANT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DyedResultant.
     * @param value value to set the  DyedResultant
     */
    public void setDyedResultant(String value) {
        setAttributeInternal(DYEDRESULTANT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DyeColorNameTrans.
     * @return the DyeColorNameTrans
     */
    public String getDyeColorNameTrans() {
        return (String)getAttributeInternal(DYECOLORNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DyeColorNameTrans.
     * @param value value to set the  DyeColorNameTrans
     */
    public void setDyeColorNameTrans(String value) {
        setAttributeInternal(DYECOLORNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute YtResultantSum.
     * @return the YtResultantSum
     */
    public String getYtResultantSum() {
        //return (String) getAttributeInternal(YTRESULTANTSUM);
        String result = "";
        RowIterator ytIter = this.getXxpmYarnTypeView();
        Row curRow = null;
        ytIter.reset();
        while (ytIter.hasNext()) {
            curRow = ytIter.next();
            if (curRow != null) {
                result += curRow.getAttribute("YTResultant") + " ";
            }
        }
        return result;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute YtResultantSum.
     * @param value value to set the  YtResultantSum
     */
    public void setYtResultantSum(String value) {
        setAttributeInternal(YTRESULTANTSUM, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxpmYarnBlendView.
     */
    public RowIterator getXxpmYarnBlendView() {
        return (RowIterator)getAttributeInternal(XXPMYARNBLENDVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxpmYarnTypeView.
     */
    public RowIterator getXxpmYarnTypeView() {
        return (RowIterator)getAttributeInternal(XXPMYARNTYPEVIEW);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxpmAttachmentsView.
     */
    public RowIterator getXxpmAttachmentsView() {
        return (RowIterator)getAttributeInternal(XXPMATTACHMENTSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxpmWeftView.
     */
    public RowIterator getXxpmWeftView() {
        return (RowIterator)getAttributeInternal(XXPMWEFTVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YarnPliesLOV.
     */
    public RowSet getYarnPliesLOV() {
        return (RowSet)getAttributeInternal(YARNPLIESLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YarnTypeLOV.
     */
    public RowSet getYarnTypeLOV() {
        return (RowSet)getAttributeInternal(YARNTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MeasuringSystemLOV.
     */
    public RowSet getMeasuringSystemLOV() {
        return (RowSet)getAttributeInternal(MEASURINGSYSTEMLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YarnStatusLOV.
     */
    public RowSet getYarnStatusLOV() {
        return (RowSet)getAttributeInternal(YARNSTATUSLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YarnOutputLov.
     */
    public RowSet getYarnOutputLov() {
        return (RowSet)getAttributeInternal(YARNOUTPUTLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemStatusLov.
     */
    public RowSet getItemStatusLov() {
        return (RowSet)getAttributeInternal(ITEMSTATUSLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SpnDyedLov.
     */
    public RowSet getSpnDyedLov() {
        return (RowSet)getAttributeInternal(SPNDYEDLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemColorsLov.
     */
    public RowSet getItemColorsLov() {
        return (RowSet)getAttributeInternal(ITEMCOLORSLOV);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    public void updateSpnLovsAccessor() {
        getYarnPliesLOV().executeQuery();
        getYarnTypeLOV().executeQuery();
        getMeasuringSystemLOV().executeQuery();
        getYarnStatusLOV().executeQuery();
        getYarnOutputLov().executeQuery();
        //getItemStatusLov().executeQuery();
    }

    /*  @Override
    public void setNewRowState(byte state) {
        if (state != Row.STATUS_INITIALIZED ||
            getNewRowState() != Row.STATUS_NEW) {
            super.setNewRowState(state);
        }
    } */
}
