package ncl.pm.model.bc.vo;

import java.math.BigDecimal;

import ncl.pm.model.bc.eo.XxpmItemMasterImpl;

import ncl.pm.model.bc.vo.common.XxpmItemMasterAccViewRow;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 05 15:02:11 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmItemMasterAccViewRowImpl extends ViewRowImpl implements XxpmItemMasterAccViewRow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Segment1,
        Segment2,
        Segment3,
        Segment4,
        Segment5,
        Segment6,
        Segment7,
        ImId,
        BgBagDimensions,
        BgBagMaterial,
        BgBagPocket,
        BgBagType,
        BgBpLength,
        BgBpWidth,
        BgBtnColor,
        BgBtnMaterial,
        BgFlap,
        BgFpLength,
        BgFpWidth,
        BagPocketTrans,
        BgGusset,
        BgMaterialGuage,
        BgMaterialSpecs,
        BgPrintType,
        BgZipColor,
        BgZipMaterial,
        BgZipSize,
        InsDimensions,
        InsFixType,
        InsGusset,
        InsInsertType,
        InsLamination,
        InsMaterialGsm,
        InsPaperType,
        InsVarnish,
        StfGusset1,
        StfGusset2,
        StfMaterial,
        StfPly,
        StfStifnerType,
        CrtBusting,
        CrtCartonType,
        CrtEct,
        CrtInnDimensions,
        CrtInnHeight,
        CrtInnLength,
        CrtInnUom,
        CrtInnWidth,
        CrtMaterial,
        CrtOutDimensions,
        CrtOutHeight,
        CrtOutLength,
        CrtOutUom,
        CrtOutWidth,
        CrtPly,
        CrtPrintType,
        CrtPrintedType,
        LblFoldLength,
        LblFoldSize,
        LblFoldSwingMargin,
        LblFoldWidth,
        LblFoldingType,
        LblLableType,
        LblMaterial,
        LblPlainLength,
        LblPlainSize,
        LblPlainSwingMargin,
        LblPlainWidth,
        ZipMaterialType,
        ZipTeethType,
        ZipUom,
        ThrMaterial,
        ThrTexSizePly,
        ThrThreadType,
        ThrThreadUsage,
        ElsCordType,
        ElsElasticType,
        ElsRatio,
        CtcDiaThickness,
        CtcMaterial,
        FusGsm,
        FusMaterial,
        NwvGsm,
        NwvMaterial,
        WdGsm,
        WdLoaft,
        WdMaterial,
        WdRatio,
        BfMaterial,
        BfMaterialType,
        BtnButtonColor,
        BtnButtonMaterial,
        BtnButtonSize,
        BtnButtonType,
        BtnHolesNum,
        PprPaperColor,
        PprPaperMaterial,
        StkColor,
        StkMaterial,
        StkPeelableType,
        StkPerforatedType,
        StkStickerType,
        StkText,
        SgItem,
        SgWeight,
        TpColor,
        TpMaterialType,
        LacColor,
        LacMaterial,
        LacType,
        LacUom,
        EyColor,
        EyFinish,
        EyMaterial,
        HngHookType,
        HngMaterialCombination,
        HngThickness,
        HngThicknessUom,
        StrDescription,
        TapMaterial,
        TapPrintText,
        AccAccessoryType,
        AccDiameter,
        AccDiameterUom,
        AccHeight,
        AccHeightUom,
        AccLength,
        AccLength1,
        AccLength1Uom,
        AccLength2,
        AccLength2Uom,
        AccLengthUom,
        AccListPrice,
        AccRemarks,
        AccWastage,
        AccWidth,
        AccWidth1,
        AccWidth1Uom,
        AccWidth2,
        AccWidth2Uom,
        AccWidthUom,
        CtcItemType,
        AccTypeValueDisplay,
        BagDimensionsTrans,
        BagSizeTrans,
        BagResultantTrans,
        ProgramNameDesc,
        InsDimensionsTrans,
        InsSizeTrans,
        InsText,
        InsResultantTrans,
        Description,
        StfSizeTrans,
        StfResultantTrans,
        CrtOutDimensionTrans,
        CrtInDimensionTrans,
        CrtSizeTrans,
        CrtText,
        CrtResultantTrans,
        LblPlainSizeTrans,
        LblFoldSizeTrans,
        LblResultantTrans,
        ZipResultantTrans,
        ThrResultantTrans,
        ElsResultantTrans,
        CtcResultantTrans,
        FusResultantTrans,
        NwvResultantTrans,
        WdResultantTrans,
        BfResultantTrans,
        BtnResultantTrans,
        PprResultantTrans,
        StkResultantTrans,
        SgResultantTrans,
        TpResultantTrans,
        TgResultantTrans,
        LacResultantTrans,
        EyResultantTrans,
        HngResultantTrans,
        PmResultantTrans,
        StrResultantTrans,
        TapResultantTrans,
        ItemStatusFlag,
        ItemStatusFlagTrans,
        FolderCode,
        RowStatus,
        AccSize,
        AccItemUom,
        MinOrderQty,
        AccCustVal,
        XxpmAttachmentsView,
        XxpmMadeupProgramsView,
        AccCategoryTypeLov,
        AccBagPrintingTypeLov,
        AccBagTypeLov,
        AccBagBtnMaterialLov,
        AccColorLov,
        AccBagZipMaterialLov,
        AccBagMaterialLov,
        AccBagPocketLov,
        AccInsTypeLov,
        AccInsMaterialGsmLov,
        AccInsPprTypeLov,
        AccInsVarnishLov,
        AccInsLaminationLov,
        AccInsEmboseType,
        AccStfTypeLov,
        AccStfPlyLov,
        AccStfMateriaLov,
        AccCrtPrintTypeLov,
        AccCrtPrintSideLov,
        AccUomLov,
        AccCrtPlyLov,
        AccCrtMaterialLov,
        AccLblTypeLov,
        AccLblFoldingtypeLov,
        AccLblMaterialLov,
        AccZpMaterialTypeLov,
        AccZpTeethType,
        AccThrUsageLov,
        AccThrTypeLov,
        AccThrMaterialLov,
        AccElsTypeLov,
        AccCtcItemTypeLov,
        AccCtcMaterialLov,
        AccFusMaterialLov,
        AccNwvMaterialLov,
        AccWdMaterialLov,
        AccBfMaterialLov,
        AccBfTypeLov,
        AccBtnTypeLov,
        AccBtnMateralLov,
        AccPprMaterialLov,
        AccStkTypeLov,
        AccStkMaterialLov,
        AccStkPeelTypeLov,
        AccStkPeforateTypeLov,
        AccSgItemLov,
        AccTpMaterialLov,
        AccLacTypeLov,
        AccLacMaterialLov,
        AccEyMaterialLov,
        AccEyFinishLov,
        AccHngHookTypeLov,
        AccTapMaterialLov,
        AccTapPrintLov,
        ItemStatusLov,
        AccItemStatusLov,
        ItemSizeLov,
        ProgramNameLov,
        AccLengthUomLov,
        AccCrtTypeLov,
        ItemUomLov;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SEGMENT1 = AttributesEnum.Segment1.index();
    public static final int SEGMENT2 = AttributesEnum.Segment2.index();
    public static final int SEGMENT3 = AttributesEnum.Segment3.index();
    public static final int SEGMENT4 = AttributesEnum.Segment4.index();
    public static final int SEGMENT5 = AttributesEnum.Segment5.index();
    public static final int SEGMENT6 = AttributesEnum.Segment6.index();
    public static final int SEGMENT7 = AttributesEnum.Segment7.index();
    public static final int IMID = AttributesEnum.ImId.index();
    public static final int BGBAGDIMENSIONS = AttributesEnum.BgBagDimensions.index();
    public static final int BGBAGMATERIAL = AttributesEnum.BgBagMaterial.index();
    public static final int BGBAGPOCKET = AttributesEnum.BgBagPocket.index();
    public static final int BGBAGTYPE = AttributesEnum.BgBagType.index();
    public static final int BGBPLENGTH = AttributesEnum.BgBpLength.index();
    public static final int BGBPWIDTH = AttributesEnum.BgBpWidth.index();
    public static final int BGBTNCOLOR = AttributesEnum.BgBtnColor.index();
    public static final int BGBTNMATERIAL = AttributesEnum.BgBtnMaterial.index();
    public static final int BGFLAP = AttributesEnum.BgFlap.index();
    public static final int BGFPLENGTH = AttributesEnum.BgFpLength.index();
    public static final int BGFPWIDTH = AttributesEnum.BgFpWidth.index();
    public static final int BAGPOCKETTRANS = AttributesEnum.BagPocketTrans.index();
    public static final int BGGUSSET = AttributesEnum.BgGusset.index();
    public static final int BGMATERIALGUAGE = AttributesEnum.BgMaterialGuage.index();
    public static final int BGMATERIALSPECS = AttributesEnum.BgMaterialSpecs.index();
    public static final int BGPRINTTYPE = AttributesEnum.BgPrintType.index();
    public static final int BGZIPCOLOR = AttributesEnum.BgZipColor.index();
    public static final int BGZIPMATERIAL = AttributesEnum.BgZipMaterial.index();
    public static final int BGZIPSIZE = AttributesEnum.BgZipSize.index();
    public static final int INSDIMENSIONS = AttributesEnum.InsDimensions.index();
    public static final int INSFIXTYPE = AttributesEnum.InsFixType.index();
    public static final int INSGUSSET = AttributesEnum.InsGusset.index();
    public static final int INSINSERTTYPE = AttributesEnum.InsInsertType.index();
    public static final int INSLAMINATION = AttributesEnum.InsLamination.index();
    public static final int INSMATERIALGSM = AttributesEnum.InsMaterialGsm.index();
    public static final int INSPAPERTYPE = AttributesEnum.InsPaperType.index();
    public static final int INSVARNISH = AttributesEnum.InsVarnish.index();
    public static final int STFGUSSET1 = AttributesEnum.StfGusset1.index();
    public static final int STFGUSSET2 = AttributesEnum.StfGusset2.index();
    public static final int STFMATERIAL = AttributesEnum.StfMaterial.index();
    public static final int STFPLY = AttributesEnum.StfPly.index();
    public static final int STFSTIFNERTYPE = AttributesEnum.StfStifnerType.index();
    public static final int CRTBUSTING = AttributesEnum.CrtBusting.index();
    public static final int CRTCARTONTYPE = AttributesEnum.CrtCartonType.index();
    public static final int CRTECT = AttributesEnum.CrtEct.index();
    public static final int CRTINNDIMENSIONS = AttributesEnum.CrtInnDimensions.index();
    public static final int CRTINNHEIGHT = AttributesEnum.CrtInnHeight.index();
    public static final int CRTINNLENGTH = AttributesEnum.CrtInnLength.index();
    public static final int CRTINNUOM = AttributesEnum.CrtInnUom.index();
    public static final int CRTINNWIDTH = AttributesEnum.CrtInnWidth.index();
    public static final int CRTMATERIAL = AttributesEnum.CrtMaterial.index();
    public static final int CRTOUTDIMENSIONS = AttributesEnum.CrtOutDimensions.index();
    public static final int CRTOUTHEIGHT = AttributesEnum.CrtOutHeight.index();
    public static final int CRTOUTLENGTH = AttributesEnum.CrtOutLength.index();
    public static final int CRTOUTUOM = AttributesEnum.CrtOutUom.index();
    public static final int CRTOUTWIDTH = AttributesEnum.CrtOutWidth.index();
    public static final int CRTPLY = AttributesEnum.CrtPly.index();
    public static final int CRTPRINTTYPE = AttributesEnum.CrtPrintType.index();
    public static final int CRTPRINTEDTYPE = AttributesEnum.CrtPrintedType.index();
    public static final int LBLFOLDLENGTH = AttributesEnum.LblFoldLength.index();
    public static final int LBLFOLDSIZE = AttributesEnum.LblFoldSize.index();
    public static final int LBLFOLDSWINGMARGIN = AttributesEnum.LblFoldSwingMargin.index();
    public static final int LBLFOLDWIDTH = AttributesEnum.LblFoldWidth.index();
    public static final int LBLFOLDINGTYPE = AttributesEnum.LblFoldingType.index();
    public static final int LBLLABLETYPE = AttributesEnum.LblLableType.index();
    public static final int LBLMATERIAL = AttributesEnum.LblMaterial.index();
    public static final int LBLPLAINLENGTH = AttributesEnum.LblPlainLength.index();
    public static final int LBLPLAINSIZE = AttributesEnum.LblPlainSize.index();
    public static final int LBLPLAINSWINGMARGIN = AttributesEnum.LblPlainSwingMargin.index();
    public static final int LBLPLAINWIDTH = AttributesEnum.LblPlainWidth.index();
    public static final int ZIPMATERIALTYPE = AttributesEnum.ZipMaterialType.index();
    public static final int ZIPTEETHTYPE = AttributesEnum.ZipTeethType.index();
    public static final int ZIPUOM = AttributesEnum.ZipUom.index();
    public static final int THRMATERIAL = AttributesEnum.ThrMaterial.index();
    public static final int THRTEXSIZEPLY = AttributesEnum.ThrTexSizePly.index();
    public static final int THRTHREADTYPE = AttributesEnum.ThrThreadType.index();
    public static final int THRTHREADUSAGE = AttributesEnum.ThrThreadUsage.index();
    public static final int ELSCORDTYPE = AttributesEnum.ElsCordType.index();
    public static final int ELSELASTICTYPE = AttributesEnum.ElsElasticType.index();
    public static final int ELSRATIO = AttributesEnum.ElsRatio.index();
    public static final int CTCDIATHICKNESS = AttributesEnum.CtcDiaThickness.index();
    public static final int CTCMATERIAL = AttributesEnum.CtcMaterial.index();
    public static final int FUSGSM = AttributesEnum.FusGsm.index();
    public static final int FUSMATERIAL = AttributesEnum.FusMaterial.index();
    public static final int NWVGSM = AttributesEnum.NwvGsm.index();
    public static final int NWVMATERIAL = AttributesEnum.NwvMaterial.index();
    public static final int WDGSM = AttributesEnum.WdGsm.index();
    public static final int WDLOAFT = AttributesEnum.WdLoaft.index();
    public static final int WDMATERIAL = AttributesEnum.WdMaterial.index();
    public static final int WDRATIO = AttributesEnum.WdRatio.index();
    public static final int BFMATERIAL = AttributesEnum.BfMaterial.index();
    public static final int BFMATERIALTYPE = AttributesEnum.BfMaterialType.index();
    public static final int BTNBUTTONCOLOR = AttributesEnum.BtnButtonColor.index();
    public static final int BTNBUTTONMATERIAL = AttributesEnum.BtnButtonMaterial.index();
    public static final int BTNBUTTONSIZE = AttributesEnum.BtnButtonSize.index();
    public static final int BTNBUTTONTYPE = AttributesEnum.BtnButtonType.index();
    public static final int BTNHOLESNUM = AttributesEnum.BtnHolesNum.index();
    public static final int PPRPAPERCOLOR = AttributesEnum.PprPaperColor.index();
    public static final int PPRPAPERMATERIAL = AttributesEnum.PprPaperMaterial.index();
    public static final int STKCOLOR = AttributesEnum.StkColor.index();
    public static final int STKMATERIAL = AttributesEnum.StkMaterial.index();
    public static final int STKPEELABLETYPE = AttributesEnum.StkPeelableType.index();
    public static final int STKPERFORATEDTYPE = AttributesEnum.StkPerforatedType.index();
    public static final int STKSTICKERTYPE = AttributesEnum.StkStickerType.index();
    public static final int STKTEXT = AttributesEnum.StkText.index();
    public static final int SGITEM = AttributesEnum.SgItem.index();
    public static final int SGWEIGHT = AttributesEnum.SgWeight.index();
    public static final int TPCOLOR = AttributesEnum.TpColor.index();
    public static final int TPMATERIALTYPE = AttributesEnum.TpMaterialType.index();
    public static final int LACCOLOR = AttributesEnum.LacColor.index();
    public static final int LACMATERIAL = AttributesEnum.LacMaterial.index();
    public static final int LACTYPE = AttributesEnum.LacType.index();
    public static final int LACUOM = AttributesEnum.LacUom.index();
    public static final int EYCOLOR = AttributesEnum.EyColor.index();
    public static final int EYFINISH = AttributesEnum.EyFinish.index();
    public static final int EYMATERIAL = AttributesEnum.EyMaterial.index();
    public static final int HNGHOOKTYPE = AttributesEnum.HngHookType.index();
    public static final int HNGMATERIALCOMBINATION = AttributesEnum.HngMaterialCombination.index();
    public static final int HNGTHICKNESS = AttributesEnum.HngThickness.index();
    public static final int HNGTHICKNESSUOM = AttributesEnum.HngThicknessUom.index();
    public static final int STRDESCRIPTION = AttributesEnum.StrDescription.index();
    public static final int TAPMATERIAL = AttributesEnum.TapMaterial.index();
    public static final int TAPPRINTTEXT = AttributesEnum.TapPrintText.index();
    public static final int ACCACCESSORYTYPE = AttributesEnum.AccAccessoryType.index();
    public static final int ACCDIAMETER = AttributesEnum.AccDiameter.index();
    public static final int ACCDIAMETERUOM = AttributesEnum.AccDiameterUom.index();
    public static final int ACCHEIGHT = AttributesEnum.AccHeight.index();
    public static final int ACCHEIGHTUOM = AttributesEnum.AccHeightUom.index();
    public static final int ACCLENGTH = AttributesEnum.AccLength.index();
    public static final int ACCLENGTH1 = AttributesEnum.AccLength1.index();
    public static final int ACCLENGTH1UOM = AttributesEnum.AccLength1Uom.index();
    public static final int ACCLENGTH2 = AttributesEnum.AccLength2.index();
    public static final int ACCLENGTH2UOM = AttributesEnum.AccLength2Uom.index();
    public static final int ACCLENGTHUOM = AttributesEnum.AccLengthUom.index();
    public static final int ACCLISTPRICE = AttributesEnum.AccListPrice.index();
    public static final int ACCREMARKS = AttributesEnum.AccRemarks.index();
    public static final int ACCWASTAGE = AttributesEnum.AccWastage.index();
    public static final int ACCWIDTH = AttributesEnum.AccWidth.index();
    public static final int ACCWIDTH1 = AttributesEnum.AccWidth1.index();
    public static final int ACCWIDTH1UOM = AttributesEnum.AccWidth1Uom.index();
    public static final int ACCWIDTH2 = AttributesEnum.AccWidth2.index();
    public static final int ACCWIDTH2UOM = AttributesEnum.AccWidth2Uom.index();
    public static final int ACCWIDTHUOM = AttributesEnum.AccWidthUom.index();
    public static final int CTCITEMTYPE = AttributesEnum.CtcItemType.index();
    public static final int ACCTYPEVALUEDISPLAY = AttributesEnum.AccTypeValueDisplay.index();
    public static final int BAGDIMENSIONSTRANS = AttributesEnum.BagDimensionsTrans.index();
    public static final int BAGSIZETRANS = AttributesEnum.BagSizeTrans.index();
    public static final int BAGRESULTANTTRANS = AttributesEnum.BagResultantTrans.index();
    public static final int PROGRAMNAMEDESC = AttributesEnum.ProgramNameDesc.index();
    public static final int INSDIMENSIONSTRANS = AttributesEnum.InsDimensionsTrans.index();
    public static final int INSSIZETRANS = AttributesEnum.InsSizeTrans.index();
    public static final int INSTEXT = AttributesEnum.InsText.index();
    public static final int INSRESULTANTTRANS = AttributesEnum.InsResultantTrans.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int STFSIZETRANS = AttributesEnum.StfSizeTrans.index();
    public static final int STFRESULTANTTRANS = AttributesEnum.StfResultantTrans.index();
    public static final int CRTOUTDIMENSIONTRANS = AttributesEnum.CrtOutDimensionTrans.index();
    public static final int CRTINDIMENSIONTRANS = AttributesEnum.CrtInDimensionTrans.index();
    public static final int CRTSIZETRANS = AttributesEnum.CrtSizeTrans.index();
    public static final int CRTTEXT = AttributesEnum.CrtText.index();
    public static final int CRTRESULTANTTRANS = AttributesEnum.CrtResultantTrans.index();
    public static final int LBLPLAINSIZETRANS = AttributesEnum.LblPlainSizeTrans.index();
    public static final int LBLFOLDSIZETRANS = AttributesEnum.LblFoldSizeTrans.index();
    public static final int LBLRESULTANTTRANS = AttributesEnum.LblResultantTrans.index();
    public static final int ZIPRESULTANTTRANS = AttributesEnum.ZipResultantTrans.index();
    public static final int THRRESULTANTTRANS = AttributesEnum.ThrResultantTrans.index();
    public static final int ELSRESULTANTTRANS = AttributesEnum.ElsResultantTrans.index();
    public static final int CTCRESULTANTTRANS = AttributesEnum.CtcResultantTrans.index();
    public static final int FUSRESULTANTTRANS = AttributesEnum.FusResultantTrans.index();
    public static final int NWVRESULTANTTRANS = AttributesEnum.NwvResultantTrans.index();
    public static final int WDRESULTANTTRANS = AttributesEnum.WdResultantTrans.index();
    public static final int BFRESULTANTTRANS = AttributesEnum.BfResultantTrans.index();
    public static final int BTNRESULTANTTRANS = AttributesEnum.BtnResultantTrans.index();
    public static final int PPRRESULTANTTRANS = AttributesEnum.PprResultantTrans.index();
    public static final int STKRESULTANTTRANS = AttributesEnum.StkResultantTrans.index();
    public static final int SGRESULTANTTRANS = AttributesEnum.SgResultantTrans.index();
    public static final int TPRESULTANTTRANS = AttributesEnum.TpResultantTrans.index();
    public static final int TGRESULTANTTRANS = AttributesEnum.TgResultantTrans.index();
    public static final int LACRESULTANTTRANS = AttributesEnum.LacResultantTrans.index();
    public static final int EYRESULTANTTRANS = AttributesEnum.EyResultantTrans.index();
    public static final int HNGRESULTANTTRANS = AttributesEnum.HngResultantTrans.index();
    public static final int PMRESULTANTTRANS = AttributesEnum.PmResultantTrans.index();
    public static final int STRRESULTANTTRANS = AttributesEnum.StrResultantTrans.index();
    public static final int TAPRESULTANTTRANS = AttributesEnum.TapResultantTrans.index();
    public static final int ITEMSTATUSFLAG = AttributesEnum.ItemStatusFlag.index();
    public static final int ITEMSTATUSFLAGTRANS = AttributesEnum.ItemStatusFlagTrans.index();
    public static final int FOLDERCODE = AttributesEnum.FolderCode.index();
    public static final int ROWSTATUS = AttributesEnum.RowStatus.index();
    public static final int ACCSIZE = AttributesEnum.AccSize.index();
    public static final int ACCITEMUOM = AttributesEnum.AccItemUom.index();
    public static final int MINORDERQTY = AttributesEnum.MinOrderQty.index();
    public static final int ACCCUSTVAL = AttributesEnum.AccCustVal.index();
    public static final int XXPMATTACHMENTSVIEW = AttributesEnum.XxpmAttachmentsView.index();
    public static final int XXPMMADEUPPROGRAMSVIEW = AttributesEnum.XxpmMadeupProgramsView.index();
    public static final int ACCCATEGORYTYPELOV = AttributesEnum.AccCategoryTypeLov.index();
    public static final int ACCBAGPRINTINGTYPELOV = AttributesEnum.AccBagPrintingTypeLov.index();
    public static final int ACCBAGTYPELOV = AttributesEnum.AccBagTypeLov.index();
    public static final int ACCBAGBTNMATERIALLOV = AttributesEnum.AccBagBtnMaterialLov.index();
    public static final int ACCCOLORLOV = AttributesEnum.AccColorLov.index();
    public static final int ACCBAGZIPMATERIALLOV = AttributesEnum.AccBagZipMaterialLov.index();
    public static final int ACCBAGMATERIALLOV = AttributesEnum.AccBagMaterialLov.index();
    public static final int ACCBAGPOCKETLOV = AttributesEnum.AccBagPocketLov.index();
    public static final int ACCINSTYPELOV = AttributesEnum.AccInsTypeLov.index();
    public static final int ACCINSMATERIALGSMLOV = AttributesEnum.AccInsMaterialGsmLov.index();
    public static final int ACCINSPPRTYPELOV = AttributesEnum.AccInsPprTypeLov.index();
    public static final int ACCINSVARNISHLOV = AttributesEnum.AccInsVarnishLov.index();
    public static final int ACCINSLAMINATIONLOV = AttributesEnum.AccInsLaminationLov.index();
    public static final int ACCINSEMBOSETYPE = AttributesEnum.AccInsEmboseType.index();
    public static final int ACCSTFTYPELOV = AttributesEnum.AccStfTypeLov.index();
    public static final int ACCSTFPLYLOV = AttributesEnum.AccStfPlyLov.index();
    public static final int ACCSTFMATERIALOV = AttributesEnum.AccStfMateriaLov.index();
    public static final int ACCCRTPRINTTYPELOV = AttributesEnum.AccCrtPrintTypeLov.index();
    public static final int ACCCRTPRINTSIDELOV = AttributesEnum.AccCrtPrintSideLov.index();
    public static final int ACCUOMLOV = AttributesEnum.AccUomLov.index();
    public static final int ACCCRTPLYLOV = AttributesEnum.AccCrtPlyLov.index();
    public static final int ACCCRTMATERIALLOV = AttributesEnum.AccCrtMaterialLov.index();
    public static final int ACCLBLTYPELOV = AttributesEnum.AccLblTypeLov.index();
    public static final int ACCLBLFOLDINGTYPELOV = AttributesEnum.AccLblFoldingtypeLov.index();
    public static final int ACCLBLMATERIALLOV = AttributesEnum.AccLblMaterialLov.index();
    public static final int ACCZPMATERIALTYPELOV = AttributesEnum.AccZpMaterialTypeLov.index();
    public static final int ACCZPTEETHTYPE = AttributesEnum.AccZpTeethType.index();
    public static final int ACCTHRUSAGELOV = AttributesEnum.AccThrUsageLov.index();
    public static final int ACCTHRTYPELOV = AttributesEnum.AccThrTypeLov.index();
    public static final int ACCTHRMATERIALLOV = AttributesEnum.AccThrMaterialLov.index();
    public static final int ACCELSTYPELOV = AttributesEnum.AccElsTypeLov.index();
    public static final int ACCCTCITEMTYPELOV = AttributesEnum.AccCtcItemTypeLov.index();
    public static final int ACCCTCMATERIALLOV = AttributesEnum.AccCtcMaterialLov.index();
    public static final int ACCFUSMATERIALLOV = AttributesEnum.AccFusMaterialLov.index();
    public static final int ACCNWVMATERIALLOV = AttributesEnum.AccNwvMaterialLov.index();
    public static final int ACCWDMATERIALLOV = AttributesEnum.AccWdMaterialLov.index();
    public static final int ACCBFMATERIALLOV = AttributesEnum.AccBfMaterialLov.index();
    public static final int ACCBFTYPELOV = AttributesEnum.AccBfTypeLov.index();
    public static final int ACCBTNTYPELOV = AttributesEnum.AccBtnTypeLov.index();
    public static final int ACCBTNMATERALLOV = AttributesEnum.AccBtnMateralLov.index();
    public static final int ACCPPRMATERIALLOV = AttributesEnum.AccPprMaterialLov.index();
    public static final int ACCSTKTYPELOV = AttributesEnum.AccStkTypeLov.index();
    public static final int ACCSTKMATERIALLOV = AttributesEnum.AccStkMaterialLov.index();
    public static final int ACCSTKPEELTYPELOV = AttributesEnum.AccStkPeelTypeLov.index();
    public static final int ACCSTKPEFORATETYPELOV = AttributesEnum.AccStkPeforateTypeLov.index();
    public static final int ACCSGITEMLOV = AttributesEnum.AccSgItemLov.index();
    public static final int ACCTPMATERIALLOV = AttributesEnum.AccTpMaterialLov.index();
    public static final int ACCLACTYPELOV = AttributesEnum.AccLacTypeLov.index();
    public static final int ACCLACMATERIALLOV = AttributesEnum.AccLacMaterialLov.index();
    public static final int ACCEYMATERIALLOV = AttributesEnum.AccEyMaterialLov.index();
    public static final int ACCEYFINISHLOV = AttributesEnum.AccEyFinishLov.index();
    public static final int ACCHNGHOOKTYPELOV = AttributesEnum.AccHngHookTypeLov.index();
    public static final int ACCTAPMATERIALLOV = AttributesEnum.AccTapMaterialLov.index();
    public static final int ACCTAPPRINTLOV = AttributesEnum.AccTapPrintLov.index();
    public static final int ITEMSTATUSLOV = AttributesEnum.ItemStatusLov.index();
    public static final int ACCITEMSTATUSLOV = AttributesEnum.AccItemStatusLov.index();
    public static final int ITEMSIZELOV = AttributesEnum.ItemSizeLov.index();
    public static final int PROGRAMNAMELOV = AttributesEnum.ProgramNameLov.index();
    public static final int ACCLENGTHUOMLOV = AttributesEnum.AccLengthUomLov.index();
    public static final int ACCCRTTYPELOV = AttributesEnum.AccCrtTypeLov.index();
    public static final int ITEMUOMLOV = AttributesEnum.ItemUomLov.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxpmItemMasterAccViewRowImpl() {
    }

    /**
     * Gets XxpmItemMaster entity object.
     * @return the XxpmItemMaster
     */
    public XxpmItemMasterImpl getXxpmItemMaster() {
        return (XxpmItemMasterImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for SEGMENT1 using the alias name Segment1.
     * @return the SEGMENT1
     */
    public String getSegment1() {
        return (String)getAttributeInternal(SEGMENT1);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT1 using the alias name Segment1.
     * @param value value to set the SEGMENT1
     */
    public void setSegment1(String value) {
        setAttributeInternal(SEGMENT1, value);
    }

    /**
     * Gets the attribute value for SEGMENT2 using the alias name Segment2.
     * @return the SEGMENT2
     */
    public String getSegment2() {
        return (String)getAttributeInternal(SEGMENT2);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT2 using the alias name Segment2.
     * @param value value to set the SEGMENT2
     */
    public void setSegment2(String value) {
        setAttributeInternal(SEGMENT2, value);
    }

    /**
     * Gets the attribute value for SEGMENT3 using the alias name Segment3.
     * @return the SEGMENT3
     */
    public String getSegment3() {
        return (String)getAttributeInternal(SEGMENT3);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT3 using the alias name Segment3.
     * @param value value to set the SEGMENT3
     */
    public void setSegment3(String value) {
        setAttributeInternal(SEGMENT3, value);
    }

    /**
     * Gets the attribute value for SEGMENT4 using the alias name Segment4.
     * @return the SEGMENT4
     */
    public String getSegment4() {
        return (String)getAttributeInternal(SEGMENT4);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT4 using the alias name Segment4.
     * @param value value to set the SEGMENT4
     */
    public void setSegment4(String value) {
        setAttributeInternal(SEGMENT4, value);
    }

    /**
     * Gets the attribute value for SEGMENT5 using the alias name Segment5.
     * @return the SEGMENT5
     */
    public String getSegment5() {
        return (String)getAttributeInternal(SEGMENT5);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT5 using the alias name Segment5.
     * @param value value to set the SEGMENT5
     */
    public void setSegment5(String value) {
        setAttributeInternal(SEGMENT5, value);
    }

    /**
     * Gets the attribute value for SEGMENT6 using the alias name Segment6.
     * @return the SEGMENT6
     */
    public String getSegment6() {
        return (String)getAttributeInternal(SEGMENT6);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT6 using the alias name Segment6.
     * @param value value to set the SEGMENT6
     */
    public void setSegment6(String value) {
        setAttributeInternal(SEGMENT6, value);
    }

    /**
     * Gets the attribute value for SEGMENT7 using the alias name Segment7.
     * @return the SEGMENT7
     */
    public String getSegment7() {
        return (String)getAttributeInternal(SEGMENT7);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT7 using the alias name Segment7.
     * @param value value to set the SEGMENT7
     */
    public void setSegment7(String value) {
        setAttributeInternal(SEGMENT7, value);
    }

    /**
     * Gets the attribute value for IM_ID using the alias name ImId.
     * @return the IM_ID
     */
    public DBSequence getImId() {
        return (DBSequence)getAttributeInternal(IMID);
    }

    /**
     * Sets <code>value</code> as attribute value for IM_ID using the alias name ImId.
     * @param value value to set the IM_ID
     */
    public void setImId(DBSequence value) {
        setAttributeInternal(IMID, value);
    }

    /**
     * Gets the attribute value for BG_BAG_DIMENSIONS using the alias name BgBagDimensions.
     * @return the BG_BAG_DIMENSIONS
     */
    public String getBgBagDimensions() {
        return (String)getAttributeInternal(BGBAGDIMENSIONS);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_BAG_DIMENSIONS using the alias name BgBagDimensions.
     * @param value value to set the BG_BAG_DIMENSIONS
     */
    public void setBgBagDimensions(String value) {
        setAttributeInternal(BGBAGDIMENSIONS, value);
    }

    /**
     * Gets the attribute value for BG_BAG_MATERIAL using the alias name BgBagMaterial.
     * @return the BG_BAG_MATERIAL
     */
    public String getBgBagMaterial() {
        return (String)getAttributeInternal(BGBAGMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_BAG_MATERIAL using the alias name BgBagMaterial.
     * @param value value to set the BG_BAG_MATERIAL
     */
    public void setBgBagMaterial(String value) {
        setAttributeInternal(BGBAGMATERIAL, value);
    }

    /**
     * Gets the attribute value for BG_BAG_POCKET using the alias name BgBagPocket.
     * @return the BG_BAG_POCKET
     */
    public String getBgBagPocket() {
        return (String)getAttributeInternal(BGBAGPOCKET);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_BAG_POCKET using the alias name BgBagPocket.
     * @param value value to set the BG_BAG_POCKET
     */
    public void setBgBagPocket(String value) {
        setAttributeInternal(BGBAGPOCKET, value);
    }

    /**
     * Gets the attribute value for BG_BAG_TYPE using the alias name BgBagType.
     * @return the BG_BAG_TYPE
     */
    public String getBgBagType() {
        return (String)getAttributeInternal(BGBAGTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_BAG_TYPE using the alias name BgBagType.
     * @param value value to set the BG_BAG_TYPE
     */
    public void setBgBagType(String value) {
        setAttributeInternal(BGBAGTYPE, value);
    }

    /**
     * Gets the attribute value for BG_BP_LENGTH using the alias name BgBpLength.
     * @return the BG_BP_LENGTH
     */
    public Number getBgBpLength() {
        return (Number)getAttributeInternal(BGBPLENGTH);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_BP_LENGTH using the alias name BgBpLength.
     * @param value value to set the BG_BP_LENGTH
     */
    public void setBgBpLength(Number value) {
        setAttributeInternal(BGBPLENGTH, value);
    }

    /**
     * Gets the attribute value for BG_BP_WIDTH using the alias name BgBpWidth.
     * @return the BG_BP_WIDTH
     */
    public Number getBgBpWidth() {
        return (Number)getAttributeInternal(BGBPWIDTH);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_BP_WIDTH using the alias name BgBpWidth.
     * @param value value to set the BG_BP_WIDTH
     */
    public void setBgBpWidth(Number value) {
        setAttributeInternal(BGBPWIDTH, value);
    }

    /**
     * Gets the attribute value for BG_BTN_COLOR using the alias name BgBtnColor.
     * @return the BG_BTN_COLOR
     */
    public String getBgBtnColor() {
        return (String)getAttributeInternal(BGBTNCOLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_BTN_COLOR using the alias name BgBtnColor.
     * @param value value to set the BG_BTN_COLOR
     */
    public void setBgBtnColor(String value) {
        setAttributeInternal(BGBTNCOLOR, value);
    }

    /**
     * Gets the attribute value for BG_BTN_MATERIAL using the alias name BgBtnMaterial.
     * @return the BG_BTN_MATERIAL
     */
    public String getBgBtnMaterial() {
        return (String)getAttributeInternal(BGBTNMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_BTN_MATERIAL using the alias name BgBtnMaterial.
     * @param value value to set the BG_BTN_MATERIAL
     */
    public void setBgBtnMaterial(String value) {
        setAttributeInternal(BGBTNMATERIAL, value);
    }

    /**
     * Gets the attribute value for BG_FLAP using the alias name BgFlap.
     * @return the BG_FLAP
     */
    public Number getBgFlap() {
        return (Number)getAttributeInternal(BGFLAP);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_FLAP using the alias name BgFlap.
     * @param value value to set the BG_FLAP
     */
    public void setBgFlap(Number value) {
        setAttributeInternal(BGFLAP, value);
    }

    /**
     * Gets the attribute value for BG_FP_LENGTH using the alias name BgFpLength.
     * @return the BG_FP_LENGTH
     */
    public Number getBgFpLength() {
        return (Number)getAttributeInternal(BGFPLENGTH);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_FP_LENGTH using the alias name BgFpLength.
     * @param value value to set the BG_FP_LENGTH
     */
    public void setBgFpLength(Number value) {
        setAttributeInternal(BGFPLENGTH, value);
    }

    /**
     * Gets the attribute value for BG_FP_WIDTH using the alias name BgFpWidth.
     * @return the BG_FP_WIDTH
     */
    public Number getBgFpWidth() {
        return (Number)getAttributeInternal(BGFPWIDTH);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_FP_WIDTH using the alias name BgFpWidth.
     * @param value value to set the BG_FP_WIDTH
     */
    public void setBgFpWidth(Number value) {
        setAttributeInternal(BGFPWIDTH, value);
    }

    /**
     * Gets the attribute value for BG_GUSSET using the alias name BgGusset.
     * @return the BG_GUSSET
     */
    public Number getBgGusset() {
        return (Number)getAttributeInternal(BGGUSSET);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_GUSSET using the alias name BgGusset.
     * @param value value to set the BG_GUSSET
     */
    public void setBgGusset(Number value) {
        setAttributeInternal(BGGUSSET, value);
    }

    /**
     * Gets the attribute value for BG_MATERIAL_GUAGE using the alias name BgMaterialGuage.
     * @return the BG_MATERIAL_GUAGE
     */
    public String getBgMaterialGuage() {
        return (String)getAttributeInternal(BGMATERIALGUAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_MATERIAL_GUAGE using the alias name BgMaterialGuage.
     * @param value value to set the BG_MATERIAL_GUAGE
     */
    public void setBgMaterialGuage(String value) {
        setAttributeInternal(BGMATERIALGUAGE, value);
    }

    /**
     * Gets the attribute value for BG_MATERIAL_SPECS using the alias name BgMaterialSpecs.
     * @return the BG_MATERIAL_SPECS
     */
    public String getBgMaterialSpecs() {
        return (String)getAttributeInternal(BGMATERIALSPECS);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_MATERIAL_SPECS using the alias name BgMaterialSpecs.
     * @param value value to set the BG_MATERIAL_SPECS
     */
    public void setBgMaterialSpecs(String value) {
        setAttributeInternal(BGMATERIALSPECS, value);
    }

    /**
     * Gets the attribute value for BG_PRINT_TYPE using the alias name BgPrintType.
     * @return the BG_PRINT_TYPE
     */
    public String getBgPrintType() {
        return (String)getAttributeInternal(BGPRINTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_PRINT_TYPE using the alias name BgPrintType.
     * @param value value to set the BG_PRINT_TYPE
     */
    public void setBgPrintType(String value) {
        setAttributeInternal(BGPRINTTYPE, value);
    }

    /**
     * Gets the attribute value for BG_ZIP_COLOR using the alias name BgZipColor.
     * @return the BG_ZIP_COLOR
     */
    public String getBgZipColor() {
        return (String)getAttributeInternal(BGZIPCOLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_ZIP_COLOR using the alias name BgZipColor.
     * @param value value to set the BG_ZIP_COLOR
     */
    public void setBgZipColor(String value) {
        setAttributeInternal(BGZIPCOLOR, value);
    }

    /**
     * Gets the attribute value for BG_ZIP_MATERIAL using the alias name BgZipMaterial.
     * @return the BG_ZIP_MATERIAL
     */
    public String getBgZipMaterial() {
        return (String)getAttributeInternal(BGZIPMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_ZIP_MATERIAL using the alias name BgZipMaterial.
     * @param value value to set the BG_ZIP_MATERIAL
     */
    public void setBgZipMaterial(String value) {
        setAttributeInternal(BGZIPMATERIAL, value);
    }

    /**
     * Gets the attribute value for BG_ZIP_SIZE using the alias name BgZipSize.
     * @return the BG_ZIP_SIZE
     */
    public BigDecimal getBgZipSize() {
        return (BigDecimal)getAttributeInternal(BGZIPSIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for BG_ZIP_SIZE using the alias name BgZipSize.
     * @param value value to set the BG_ZIP_SIZE
     */
    public void setBgZipSize(BigDecimal value) {
        setAttributeInternal(BGZIPSIZE, value);
    }

    /**
     * Gets the attribute value for INS_DIMENSIONS using the alias name InsDimensions.
     * @return the INS_DIMENSIONS
     */
    public String getInsDimensions() {
        return (String)getAttributeInternal(INSDIMENSIONS);
    }

    /**
     * Sets <code>value</code> as attribute value for INS_DIMENSIONS using the alias name InsDimensions.
     * @param value value to set the INS_DIMENSIONS
     */
    public void setInsDimensions(String value) {
        setAttributeInternal(INSDIMENSIONS, value);
    }

    /**
     * Gets the attribute value for INS_FIX_TYPE using the alias name InsFixType.
     * @return the INS_FIX_TYPE
     */
    public String getInsFixType() {
        return (String)getAttributeInternal(INSFIXTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for INS_FIX_TYPE using the alias name InsFixType.
     * @param value value to set the INS_FIX_TYPE
     */
    public void setInsFixType(String value) {
        setAttributeInternal(INSFIXTYPE, value);
    }

    /**
     * Gets the attribute value for INS_GUSSET using the alias name InsGusset.
     * @return the INS_GUSSET
     */
    public Number getInsGusset() {
        return (Number)getAttributeInternal(INSGUSSET);
    }

    /**
     * Sets <code>value</code> as attribute value for INS_GUSSET using the alias name InsGusset.
     * @param value value to set the INS_GUSSET
     */
    public void setInsGusset(Number value) {
        setAttributeInternal(INSGUSSET, value);
    }

    /**
     * Gets the attribute value for INS_INSERT_TYPE using the alias name InsInsertType.
     * @return the INS_INSERT_TYPE
     */
    public String getInsInsertType() {
        return (String)getAttributeInternal(INSINSERTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for INS_INSERT_TYPE using the alias name InsInsertType.
     * @param value value to set the INS_INSERT_TYPE
     */
    public void setInsInsertType(String value) {
        setAttributeInternal(INSINSERTTYPE, value);
    }

    /**
     * Gets the attribute value for INS_LAMINATION using the alias name InsLamination.
     * @return the INS_LAMINATION
     */
    public String getInsLamination() {
        return (String)getAttributeInternal(INSLAMINATION);
    }

    /**
     * Sets <code>value</code> as attribute value for INS_LAMINATION using the alias name InsLamination.
     * @param value value to set the INS_LAMINATION
     */
    public void setInsLamination(String value) {
        setAttributeInternal(INSLAMINATION, value);
    }

    /**
     * Gets the attribute value for INS_MATERIAL_GSM using the alias name InsMaterialGsm.
     * @return the INS_MATERIAL_GSM
     */
    public String getInsMaterialGsm() {
        return (String)getAttributeInternal(INSMATERIALGSM);
    }

    /**
     * Sets <code>value</code> as attribute value for INS_MATERIAL_GSM using the alias name InsMaterialGsm.
     * @param value value to set the INS_MATERIAL_GSM
     */
    public void setInsMaterialGsm(String value) {
        setAttributeInternal(INSMATERIALGSM, value);
    }

    /**
     * Gets the attribute value for INS_PAPER_TYPE using the alias name InsPaperType.
     * @return the INS_PAPER_TYPE
     */
    public String getInsPaperType() {
        return (String)getAttributeInternal(INSPAPERTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for INS_PAPER_TYPE using the alias name InsPaperType.
     * @param value value to set the INS_PAPER_TYPE
     */
    public void setInsPaperType(String value) {
        setAttributeInternal(INSPAPERTYPE, value);
    }

    /**
     * Gets the attribute value for INS_VARNISH using the alias name InsVarnish.
     * @return the INS_VARNISH
     */
    public String getInsVarnish() {
        return (String)getAttributeInternal(INSVARNISH);
    }

    /**
     * Sets <code>value</code> as attribute value for INS_VARNISH using the alias name InsVarnish.
     * @param value value to set the INS_VARNISH
     */
    public void setInsVarnish(String value) {
        setAttributeInternal(INSVARNISH, value);
    }

    /**
     * Gets the attribute value for STF_GUSSET1 using the alias name StfGusset1.
     * @return the STF_GUSSET1
     */
    public Number getStfGusset1() {
        return (Number)getAttributeInternal(STFGUSSET1);
    }

    /**
     * Sets <code>value</code> as attribute value for STF_GUSSET1 using the alias name StfGusset1.
     * @param value value to set the STF_GUSSET1
     */
    public void setStfGusset1(Number value) {
        setAttributeInternal(STFGUSSET1, value);
    }

    /**
     * Gets the attribute value for STF_GUSSET2 using the alias name StfGusset2.
     * @return the STF_GUSSET2
     */
    public Number getStfGusset2() {
        return (Number)getAttributeInternal(STFGUSSET2);
    }

    /**
     * Sets <code>value</code> as attribute value for STF_GUSSET2 using the alias name StfGusset2.
     * @param value value to set the STF_GUSSET2
     */
    public void setStfGusset2(Number value) {
        setAttributeInternal(STFGUSSET2, value);
    }

    /**
     * Gets the attribute value for STF_MATERIAL using the alias name StfMaterial.
     * @return the STF_MATERIAL
     */
    public String getStfMaterial() {
        return (String)getAttributeInternal(STFMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for STF_MATERIAL using the alias name StfMaterial.
     * @param value value to set the STF_MATERIAL
     */
    public void setStfMaterial(String value) {
        setAttributeInternal(STFMATERIAL, value);
    }

    /**
     * Gets the attribute value for STF_PLY using the alias name StfPly.
     * @return the STF_PLY
     */
    public String getStfPly() {
        return (String)getAttributeInternal(STFPLY);
    }

    /**
     * Sets <code>value</code> as attribute value for STF_PLY using the alias name StfPly.
     * @param value value to set the STF_PLY
     */
    public void setStfPly(String value) {
        setAttributeInternal(STFPLY, value);
    }

    /**
     * Gets the attribute value for STF_STIFNER_TYPE using the alias name StfStifnerType.
     * @return the STF_STIFNER_TYPE
     */
    public String getStfStifnerType() {
        return (String)getAttributeInternal(STFSTIFNERTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for STF_STIFNER_TYPE using the alias name StfStifnerType.
     * @param value value to set the STF_STIFNER_TYPE
     */
    public void setStfStifnerType(String value) {
        setAttributeInternal(STFSTIFNERTYPE, value);
    }

    /**
     * Gets the attribute value for CRT_BUSTING using the alias name CrtBusting.
     * @return the CRT_BUSTING
     */
    public String getCrtBusting() {
        return (String)getAttributeInternal(CRTBUSTING);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_BUSTING using the alias name CrtBusting.
     * @param value value to set the CRT_BUSTING
     */
    public void setCrtBusting(String value) {
        setAttributeInternal(CRTBUSTING, value);
    }

    /**
     * Gets the attribute value for CRT_CARTON_TYPE using the alias name CrtCartonType.
     * @return the CRT_CARTON_TYPE
     */
    public String getCrtCartonType() {
        return (String)getAttributeInternal(CRTCARTONTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_CARTON_TYPE using the alias name CrtCartonType.
     * @param value value to set the CRT_CARTON_TYPE
     */
    public void setCrtCartonType(String value) {
        setAttributeInternal(CRTCARTONTYPE, value);
    }

    /**
     * Gets the attribute value for CRT_ECT using the alias name CrtEct.
     * @return the CRT_ECT
     */
    public String getCrtEct() {
        return (String)getAttributeInternal(CRTECT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_ECT using the alias name CrtEct.
     * @param value value to set the CRT_ECT
     */
    public void setCrtEct(String value) {
        setAttributeInternal(CRTECT, value);
    }

    /**
     * Gets the attribute value for CRT_INN_DIMENSIONS using the alias name CrtInnDimensions.
     * @return the CRT_INN_DIMENSIONS
     */
    public String getCrtInnDimensions() {
        return (String)getAttributeInternal(CRTINNDIMENSIONS);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_INN_DIMENSIONS using the alias name CrtInnDimensions.
     * @param value value to set the CRT_INN_DIMENSIONS
     */
    public void setCrtInnDimensions(String value) {
        setAttributeInternal(CRTINNDIMENSIONS, value);
    }

    /**
     * Gets the attribute value for CRT_INN_HEIGHT using the alias name CrtInnHeight.
     * @return the CRT_INN_HEIGHT
     */
    public Number getCrtInnHeight() {
        return (Number)getAttributeInternal(CRTINNHEIGHT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_INN_HEIGHT using the alias name CrtInnHeight.
     * @param value value to set the CRT_INN_HEIGHT
     */
    public void setCrtInnHeight(Number value) {
        setAttributeInternal(CRTINNHEIGHT, value);
    }

    /**
     * Gets the attribute value for CRT_INN_LENGTH using the alias name CrtInnLength.
     * @return the CRT_INN_LENGTH
     */
    public Number getCrtInnLength() {
        return (Number)getAttributeInternal(CRTINNLENGTH);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_INN_LENGTH using the alias name CrtInnLength.
     * @param value value to set the CRT_INN_LENGTH
     */
    public void setCrtInnLength(Number value) {
        setAttributeInternal(CRTINNLENGTH, value);
    }

    /**
     * Gets the attribute value for CRT_INN_UOM using the alias name CrtInnUom.
     * @return the CRT_INN_UOM
     */
    public String getCrtInnUom() {
        return (String)getAttributeInternal(CRTINNUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_INN_UOM using the alias name CrtInnUom.
     * @param value value to set the CRT_INN_UOM
     */
    public void setCrtInnUom(String value) {
        setAttributeInternal(CRTINNUOM, value);
    }

    /**
     * Gets the attribute value for CRT_INN_WIDTH using the alias name CrtInnWidth.
     * @return the CRT_INN_WIDTH
     */
    public Number getCrtInnWidth() {
        return (Number)getAttributeInternal(CRTINNWIDTH);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_INN_WIDTH using the alias name CrtInnWidth.
     * @param value value to set the CRT_INN_WIDTH
     */
    public void setCrtInnWidth(Number value) {
        setAttributeInternal(CRTINNWIDTH, value);
    }

    /**
     * Gets the attribute value for CRT_MATERIAL using the alias name CrtMaterial.
     * @return the CRT_MATERIAL
     */
    public String getCrtMaterial() {
        return (String)getAttributeInternal(CRTMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_MATERIAL using the alias name CrtMaterial.
     * @param value value to set the CRT_MATERIAL
     */
    public void setCrtMaterial(String value) {
        setAttributeInternal(CRTMATERIAL, value);
    }

    /**
     * Gets the attribute value for CRT_OUT_DIMENSIONS using the alias name CrtOutDimensions.
     * @return the CRT_OUT_DIMENSIONS
     */
    public String getCrtOutDimensions() {
        return (String)getAttributeInternal(CRTOUTDIMENSIONS);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_OUT_DIMENSIONS using the alias name CrtOutDimensions.
     * @param value value to set the CRT_OUT_DIMENSIONS
     */
    public void setCrtOutDimensions(String value) {
        setAttributeInternal(CRTOUTDIMENSIONS, value);
    }

    /**
     * Gets the attribute value for CRT_OUT_HEIGHT using the alias name CrtOutHeight.
     * @return the CRT_OUT_HEIGHT
     */
    public Number getCrtOutHeight() {
        return (Number)getAttributeInternal(CRTOUTHEIGHT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_OUT_HEIGHT using the alias name CrtOutHeight.
     * @param value value to set the CRT_OUT_HEIGHT
     */
    public void setCrtOutHeight(Number value) {
        setAttributeInternal(CRTOUTHEIGHT, value);
    }

    /**
     * Gets the attribute value for CRT_OUT_LENGTH using the alias name CrtOutLength.
     * @return the CRT_OUT_LENGTH
     */
    public Number getCrtOutLength() {
        return (Number)getAttributeInternal(CRTOUTLENGTH);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_OUT_LENGTH using the alias name CrtOutLength.
     * @param value value to set the CRT_OUT_LENGTH
     */
    public void setCrtOutLength(Number value) {
        setAttributeInternal(CRTOUTLENGTH, value);
    }

    /**
     * Gets the attribute value for CRT_OUT_UOM using the alias name CrtOutUom.
     * @return the CRT_OUT_UOM
     */
    public String getCrtOutUom() {
        return (String)getAttributeInternal(CRTOUTUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_OUT_UOM using the alias name CrtOutUom.
     * @param value value to set the CRT_OUT_UOM
     */
    public void setCrtOutUom(String value) {
        setAttributeInternal(CRTOUTUOM, value);
    }

    /**
     * Gets the attribute value for CRT_OUT_WIDTH using the alias name CrtOutWidth.
     * @return the CRT_OUT_WIDTH
     */
    public Number getCrtOutWidth() {
        return (Number)getAttributeInternal(CRTOUTWIDTH);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_OUT_WIDTH using the alias name CrtOutWidth.
     * @param value value to set the CRT_OUT_WIDTH
     */
    public void setCrtOutWidth(Number value) {
        setAttributeInternal(CRTOUTWIDTH, value);
    }

    /**
     * Gets the attribute value for CRT_PLY using the alias name CrtPly.
     * @return the CRT_PLY
     */
    public String getCrtPly() {
        return (String)getAttributeInternal(CRTPLY);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_PLY using the alias name CrtPly.
     * @param value value to set the CRT_PLY
     */
    public void setCrtPly(String value) {
        setAttributeInternal(CRTPLY, value);
    }

    /**
     * Gets the attribute value for CRT_PRINT_TYPE using the alias name CrtPrintType.
     * @return the CRT_PRINT_TYPE
     */
    public String getCrtPrintType() {
        return (String)getAttributeInternal(CRTPRINTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_PRINT_TYPE using the alias name CrtPrintType.
     * @param value value to set the CRT_PRINT_TYPE
     */
    public void setCrtPrintType(String value) {
        setAttributeInternal(CRTPRINTTYPE, value);
    }

    /**
     * Gets the attribute value for CRT_PRINTED_TYPE using the alias name CrtPrintedType.
     * @return the CRT_PRINTED_TYPE
     */
    public String getCrtPrintedType() {
        return (String)getAttributeInternal(CRTPRINTEDTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_PRINTED_TYPE using the alias name CrtPrintedType.
     * @param value value to set the CRT_PRINTED_TYPE
     */
    public void setCrtPrintedType(String value) {
        setAttributeInternal(CRTPRINTEDTYPE, value);
    }

    /**
     * Gets the attribute value for LBL_FOLD_LENGTH using the alias name LblFoldLength.
     * @return the LBL_FOLD_LENGTH
     */
    public Number getLblFoldLength() {
        return (Number)getAttributeInternal(LBLFOLDLENGTH);
    }

    /**
     * Sets <code>value</code> as attribute value for LBL_FOLD_LENGTH using the alias name LblFoldLength.
     * @param value value to set the LBL_FOLD_LENGTH
     */
    public void setLblFoldLength(Number value) {
        setAttributeInternal(LBLFOLDLENGTH, value);
    }

    /**
     * Gets the attribute value for LBL_FOLD_SIZE using the alias name LblFoldSize.
     * @return the LBL_FOLD_SIZE
     */
    public String getLblFoldSize() {
        return (String)getAttributeInternal(LBLFOLDSIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for LBL_FOLD_SIZE using the alias name LblFoldSize.
     * @param value value to set the LBL_FOLD_SIZE
     */
    public void setLblFoldSize(String value) {
        setAttributeInternal(LBLFOLDSIZE, value);
    }

    /**
     * Gets the attribute value for LBL_FOLD_SWING_MARGIN using the alias name LblFoldSwingMargin.
     * @return the LBL_FOLD_SWING_MARGIN
     */
    public String getLblFoldSwingMargin() {
        return (String)getAttributeInternal(LBLFOLDSWINGMARGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LBL_FOLD_SWING_MARGIN using the alias name LblFoldSwingMargin.
     * @param value value to set the LBL_FOLD_SWING_MARGIN
     */
    public void setLblFoldSwingMargin(String value) {
        setAttributeInternal(LBLFOLDSWINGMARGIN, value);
    }

    /**
     * Gets the attribute value for LBL_FOLD_WIDTH using the alias name LblFoldWidth.
     * @return the LBL_FOLD_WIDTH
     */
    public Number getLblFoldWidth() {
        return (Number)getAttributeInternal(LBLFOLDWIDTH);
    }

    /**
     * Sets <code>value</code> as attribute value for LBL_FOLD_WIDTH using the alias name LblFoldWidth.
     * @param value value to set the LBL_FOLD_WIDTH
     */
    public void setLblFoldWidth(Number value) {
        setAttributeInternal(LBLFOLDWIDTH, value);
    }

    /**
     * Gets the attribute value for LBL_FOLDING_TYPE using the alias name LblFoldingType.
     * @return the LBL_FOLDING_TYPE
     */
    public String getLblFoldingType() {
        return (String)getAttributeInternal(LBLFOLDINGTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for LBL_FOLDING_TYPE using the alias name LblFoldingType.
     * @param value value to set the LBL_FOLDING_TYPE
     */
    public void setLblFoldingType(String value) {
        setAttributeInternal(LBLFOLDINGTYPE, value);
    }

    /**
     * Gets the attribute value for LBL_LABLE_TYPE using the alias name LblLableType.
     * @return the LBL_LABLE_TYPE
     */
    public String getLblLableType() {
        return (String)getAttributeInternal(LBLLABLETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for LBL_LABLE_TYPE using the alias name LblLableType.
     * @param value value to set the LBL_LABLE_TYPE
     */
    public void setLblLableType(String value) {
        setAttributeInternal(LBLLABLETYPE, value);
    }

    /**
     * Gets the attribute value for LBL_MATERIAL using the alias name LblMaterial.
     * @return the LBL_MATERIAL
     */
    public String getLblMaterial() {
        return (String)getAttributeInternal(LBLMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for LBL_MATERIAL using the alias name LblMaterial.
     * @param value value to set the LBL_MATERIAL
     */
    public void setLblMaterial(String value) {
        setAttributeInternal(LBLMATERIAL, value);
    }

    /**
     * Gets the attribute value for LBL_PLAIN_LENGTH using the alias name LblPlainLength.
     * @return the LBL_PLAIN_LENGTH
     */
    public Number getLblPlainLength() {
        return (Number)getAttributeInternal(LBLPLAINLENGTH);
    }

    /**
     * Sets <code>value</code> as attribute value for LBL_PLAIN_LENGTH using the alias name LblPlainLength.
     * @param value value to set the LBL_PLAIN_LENGTH
     */
    public void setLblPlainLength(Number value) {
        setAttributeInternal(LBLPLAINLENGTH, value);
    }

    /**
     * Gets the attribute value for LBL_PLAIN_SIZE using the alias name LblPlainSize.
     * @return the LBL_PLAIN_SIZE
     */
    public String getLblPlainSize() {
        return (String)getAttributeInternal(LBLPLAINSIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for LBL_PLAIN_SIZE using the alias name LblPlainSize.
     * @param value value to set the LBL_PLAIN_SIZE
     */
    public void setLblPlainSize(String value) {
        setAttributeInternal(LBLPLAINSIZE, value);
    }

    /**
     * Gets the attribute value for LBL_PLAIN_SWING_MARGIN using the alias name LblPlainSwingMargin.
     * @return the LBL_PLAIN_SWING_MARGIN
     */
    public String getLblPlainSwingMargin() {
        return (String)getAttributeInternal(LBLPLAINSWINGMARGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LBL_PLAIN_SWING_MARGIN using the alias name LblPlainSwingMargin.
     * @param value value to set the LBL_PLAIN_SWING_MARGIN
     */
    public void setLblPlainSwingMargin(String value) {
        setAttributeInternal(LBLPLAINSWINGMARGIN, value);
    }

    /**
     * Gets the attribute value for LBL_PLAIN_WIDTH using the alias name LblPlainWidth.
     * @return the LBL_PLAIN_WIDTH
     */
    public Number getLblPlainWidth() {
        return (Number)getAttributeInternal(LBLPLAINWIDTH);
    }

    /**
     * Sets <code>value</code> as attribute value for LBL_PLAIN_WIDTH using the alias name LblPlainWidth.
     * @param value value to set the LBL_PLAIN_WIDTH
     */
    public void setLblPlainWidth(Number value) {
        setAttributeInternal(LBLPLAINWIDTH, value);
    }

    /**
     * Gets the attribute value for ZIP_MATERIAL_TYPE using the alias name ZipMaterialType.
     * @return the ZIP_MATERIAL_TYPE
     */
    public String getZipMaterialType() {
        return (String)getAttributeInternal(ZIPMATERIALTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ZIP_MATERIAL_TYPE using the alias name ZipMaterialType.
     * @param value value to set the ZIP_MATERIAL_TYPE
     */
    public void setZipMaterialType(String value) {
        setAttributeInternal(ZIPMATERIALTYPE, value);
    }

    /**
     * Gets the attribute value for ZIP_TEETH_TYPE using the alias name ZipTeethType.
     * @return the ZIP_TEETH_TYPE
     */
    public String getZipTeethType() {
        return (String)getAttributeInternal(ZIPTEETHTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ZIP_TEETH_TYPE using the alias name ZipTeethType.
     * @param value value to set the ZIP_TEETH_TYPE
     */
    public void setZipTeethType(String value) {
        setAttributeInternal(ZIPTEETHTYPE, value);
    }

    /**
     * Gets the attribute value for ZIP_UOM using the alias name ZipUom.
     * @return the ZIP_UOM
     */
    public String getZipUom() {
        return (String)getAttributeInternal(ZIPUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ZIP_UOM using the alias name ZipUom.
     * @param value value to set the ZIP_UOM
     */
    public void setZipUom(String value) {
        setAttributeInternal(ZIPUOM, value);
    }

    /**
     * Gets the attribute value for THR_MATERIAL using the alias name ThrMaterial.
     * @return the THR_MATERIAL
     */
    public String getThrMaterial() {
        return (String)getAttributeInternal(THRMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for THR_MATERIAL using the alias name ThrMaterial.
     * @param value value to set the THR_MATERIAL
     */
    public void setThrMaterial(String value) {
        setAttributeInternal(THRMATERIAL, value);
    }

    /**
     * Gets the attribute value for THR_TEX_SIZE_PLY using the alias name ThrTexSizePly.
     * @return the THR_TEX_SIZE_PLY
     */
    public String getThrTexSizePly() {
        return (String)getAttributeInternal(THRTEXSIZEPLY);
    }

    /**
     * Sets <code>value</code> as attribute value for THR_TEX_SIZE_PLY using the alias name ThrTexSizePly.
     * @param value value to set the THR_TEX_SIZE_PLY
     */
    public void setThrTexSizePly(String value) {
        setAttributeInternal(THRTEXSIZEPLY, value);
    }

    /**
     * Gets the attribute value for THR_THREAD_TYPE using the alias name ThrThreadType.
     * @return the THR_THREAD_TYPE
     */
    public String getThrThreadType() {
        return (String)getAttributeInternal(THRTHREADTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for THR_THREAD_TYPE using the alias name ThrThreadType.
     * @param value value to set the THR_THREAD_TYPE
     */
    public void setThrThreadType(String value) {
        setAttributeInternal(THRTHREADTYPE, value);
    }

    /**
     * Gets the attribute value for THR_THREAD_USAGE using the alias name ThrThreadUsage.
     * @return the THR_THREAD_USAGE
     */
    public String getThrThreadUsage() {
        return (String)getAttributeInternal(THRTHREADUSAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for THR_THREAD_USAGE using the alias name ThrThreadUsage.
     * @param value value to set the THR_THREAD_USAGE
     */
    public void setThrThreadUsage(String value) {
        setAttributeInternal(THRTHREADUSAGE, value);
    }

    /**
     * Gets the attribute value for ELS_CORD_TYPE using the alias name ElsCordType.
     * @return the ELS_CORD_TYPE
     */
    public String getElsCordType() {
        return (String)getAttributeInternal(ELSCORDTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ELS_CORD_TYPE using the alias name ElsCordType.
     * @param value value to set the ELS_CORD_TYPE
     */
    public void setElsCordType(String value) {
        setAttributeInternal(ELSCORDTYPE, value);
    }

    /**
     * Gets the attribute value for ELS_ELASTIC_TYPE using the alias name ElsElasticType.
     * @return the ELS_ELASTIC_TYPE
     */
    public String getElsElasticType() {
        return (String)getAttributeInternal(ELSELASTICTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ELS_ELASTIC_TYPE using the alias name ElsElasticType.
     * @param value value to set the ELS_ELASTIC_TYPE
     */
    public void setElsElasticType(String value) {
        setAttributeInternal(ELSELASTICTYPE, value);
    }

    /**
     * Gets the attribute value for ELS_RATIO using the alias name ElsRatio.
     * @return the ELS_RATIO
     */
    public String getElsRatio() {
        return (String)getAttributeInternal(ELSRATIO);
    }

    /**
     * Sets <code>value</code> as attribute value for ELS_RATIO using the alias name ElsRatio.
     * @param value value to set the ELS_RATIO
     */
    public void setElsRatio(String value) {
        setAttributeInternal(ELSRATIO, value);
    }

    /**
     * Gets the attribute value for CTC_DIA_THICKNESS using the alias name CtcDiaThickness.
     * @return the CTC_DIA_THICKNESS
     */
    public String getCtcDiaThickness() {
        return (String)getAttributeInternal(CTCDIATHICKNESS);
    }

    /**
     * Sets <code>value</code> as attribute value for CTC_DIA_THICKNESS using the alias name CtcDiaThickness.
     * @param value value to set the CTC_DIA_THICKNESS
     */
    public void setCtcDiaThickness(String value) {
        setAttributeInternal(CTCDIATHICKNESS, value);
    }

    /**
     * Gets the attribute value for CTC_MATERIAL using the alias name CtcMaterial.
     * @return the CTC_MATERIAL
     */
    public String getCtcMaterial() {
        return (String)getAttributeInternal(CTCMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for CTC_MATERIAL using the alias name CtcMaterial.
     * @param value value to set the CTC_MATERIAL
     */
    public void setCtcMaterial(String value) {
        setAttributeInternal(CTCMATERIAL, value);
    }

    /**
     * Gets the attribute value for FUS_GSM using the alias name FusGsm.
     * @return the FUS_GSM
     */
    public String getFusGsm() {
        return (String)getAttributeInternal(FUSGSM);
    }

    /**
     * Sets <code>value</code> as attribute value for FUS_GSM using the alias name FusGsm.
     * @param value value to set the FUS_GSM
     */
    public void setFusGsm(String value) {
        setAttributeInternal(FUSGSM, value);
    }

    /**
     * Gets the attribute value for FUS_MATERIAL using the alias name FusMaterial.
     * @return the FUS_MATERIAL
     */
    public String getFusMaterial() {
        return (String)getAttributeInternal(FUSMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for FUS_MATERIAL using the alias name FusMaterial.
     * @param value value to set the FUS_MATERIAL
     */
    public void setFusMaterial(String value) {
        setAttributeInternal(FUSMATERIAL, value);
    }

    /**
     * Gets the attribute value for NWV_GSM using the alias name NwvGsm.
     * @return the NWV_GSM
     */
    public Integer getNwvGsm() {
        return (Integer)getAttributeInternal(NWVGSM);
    }

    /**
     * Sets <code>value</code> as attribute value for NWV_GSM using the alias name NwvGsm.
     * @param value value to set the NWV_GSM
     */
    public void setNwvGsm(Integer value) {
        setAttributeInternal(NWVGSM, value);
    }

    /**
     * Gets the attribute value for NWV_MATERIAL using the alias name NwvMaterial.
     * @return the NWV_MATERIAL
     */
    public String getNwvMaterial() {
        return (String)getAttributeInternal(NWVMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for NWV_MATERIAL using the alias name NwvMaterial.
     * @param value value to set the NWV_MATERIAL
     */
    public void setNwvMaterial(String value) {
        setAttributeInternal(NWVMATERIAL, value);
    }

    /**
     * Gets the attribute value for WD_GSM using the alias name WdGsm.
     * @return the WD_GSM
     */
    public String getWdGsm() {
        return (String)getAttributeInternal(WDGSM);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_GSM using the alias name WdGsm.
     * @param value value to set the WD_GSM
     */
    public void setWdGsm(String value) {
        setAttributeInternal(WDGSM, value);
    }

    /**
     * Gets the attribute value for WD_LOAFT using the alias name WdLoaft.
     * @return the WD_LOAFT
     */
    public String getWdLoaft() {
        return (String)getAttributeInternal(WDLOAFT);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_LOAFT using the alias name WdLoaft.
     * @param value value to set the WD_LOAFT
     */
    public void setWdLoaft(String value) {
        setAttributeInternal(WDLOAFT, value);
    }

    /**
     * Gets the attribute value for WD_MATERIAL using the alias name WdMaterial.
     * @return the WD_MATERIAL
     */
    public String getWdMaterial() {
        return (String)getAttributeInternal(WDMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_MATERIAL using the alias name WdMaterial.
     * @param value value to set the WD_MATERIAL
     */
    public void setWdMaterial(String value) {
        setAttributeInternal(WDMATERIAL, value);
    }

    /**
     * Gets the attribute value for WD_RATIO using the alias name WdRatio.
     * @return the WD_RATIO
     */
    public String getWdRatio() {
        return (String)getAttributeInternal(WDRATIO);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_RATIO using the alias name WdRatio.
     * @param value value to set the WD_RATIO
     */
    public void setWdRatio(String value) {
        setAttributeInternal(WDRATIO, value);
    }

    /**
     * Gets the attribute value for BF_MATERIAL using the alias name BfMaterial.
     * @return the BF_MATERIAL
     */
    public String getBfMaterial() {
        return (String)getAttributeInternal(BFMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for BF_MATERIAL using the alias name BfMaterial.
     * @param value value to set the BF_MATERIAL
     */
    public void setBfMaterial(String value) {
        setAttributeInternal(BFMATERIAL, value);
    }

    /**
     * Gets the attribute value for BF_MATERIAL_TYPE using the alias name BfMaterialType.
     * @return the BF_MATERIAL_TYPE
     */
    public String getBfMaterialType() {
        return (String)getAttributeInternal(BFMATERIALTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for BF_MATERIAL_TYPE using the alias name BfMaterialType.
     * @param value value to set the BF_MATERIAL_TYPE
     */
    public void setBfMaterialType(String value) {
        setAttributeInternal(BFMATERIALTYPE, value);
    }

    /**
     * Gets the attribute value for BTN_BUTTON_COLOR using the alias name BtnButtonColor.
     * @return the BTN_BUTTON_COLOR
     */
    public String getBtnButtonColor() {
        return (String)getAttributeInternal(BTNBUTTONCOLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for BTN_BUTTON_COLOR using the alias name BtnButtonColor.
     * @param value value to set the BTN_BUTTON_COLOR
     */
    public void setBtnButtonColor(String value) {
        setAttributeInternal(BTNBUTTONCOLOR, value);
    }

    /**
     * Gets the attribute value for BTN_BUTTON_MATERIAL using the alias name BtnButtonMaterial.
     * @return the BTN_BUTTON_MATERIAL
     */
    public String getBtnButtonMaterial() {
        return (String)getAttributeInternal(BTNBUTTONMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for BTN_BUTTON_MATERIAL using the alias name BtnButtonMaterial.
     * @param value value to set the BTN_BUTTON_MATERIAL
     */
    public void setBtnButtonMaterial(String value) {
        setAttributeInternal(BTNBUTTONMATERIAL, value);
    }

    /**
     * Gets the attribute value for BTN_BUTTON_SIZE using the alias name BtnButtonSize.
     * @return the BTN_BUTTON_SIZE
     */
    public String getBtnButtonSize() {
        return (String)getAttributeInternal(BTNBUTTONSIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for BTN_BUTTON_SIZE using the alias name BtnButtonSize.
     * @param value value to set the BTN_BUTTON_SIZE
     */
    public void setBtnButtonSize(String value) {
        setAttributeInternal(BTNBUTTONSIZE, value);
    }

    /**
     * Gets the attribute value for BTN_BUTTON_TYPE using the alias name BtnButtonType.
     * @return the BTN_BUTTON_TYPE
     */
    public String getBtnButtonType() {
        return (String)getAttributeInternal(BTNBUTTONTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for BTN_BUTTON_TYPE using the alias name BtnButtonType.
     * @param value value to set the BTN_BUTTON_TYPE
     */
    public void setBtnButtonType(String value) {
        setAttributeInternal(BTNBUTTONTYPE, value);
    }

    /**
     * Gets the attribute value for BTN_HOLES_NUM using the alias name BtnHolesNum.
     * @return the BTN_HOLES_NUM
     */
    public Integer getBtnHolesNum() {
        return (Integer)getAttributeInternal(BTNHOLESNUM);
    }

    /**
     * Sets <code>value</code> as attribute value for BTN_HOLES_NUM using the alias name BtnHolesNum.
     * @param value value to set the BTN_HOLES_NUM
     */
    public void setBtnHolesNum(Integer value) {
        setAttributeInternal(BTNHOLESNUM, value);
    }

    /**
     * Gets the attribute value for PPR_PAPER_COLOR using the alias name PprPaperColor.
     * @return the PPR_PAPER_COLOR
     */
    public String getPprPaperColor() {
        return (String)getAttributeInternal(PPRPAPERCOLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for PPR_PAPER_COLOR using the alias name PprPaperColor.
     * @param value value to set the PPR_PAPER_COLOR
     */
    public void setPprPaperColor(String value) {
        setAttributeInternal(PPRPAPERCOLOR, value);
    }

    /**
     * Gets the attribute value for PPR_PAPER_MATERIAL using the alias name PprPaperMaterial.
     * @return the PPR_PAPER_MATERIAL
     */
    public String getPprPaperMaterial() {
        return (String)getAttributeInternal(PPRPAPERMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for PPR_PAPER_MATERIAL using the alias name PprPaperMaterial.
     * @param value value to set the PPR_PAPER_MATERIAL
     */
    public void setPprPaperMaterial(String value) {
        setAttributeInternal(PPRPAPERMATERIAL, value);
    }

    /**
     * Gets the attribute value for STK_COLOR using the alias name StkColor.
     * @return the STK_COLOR
     */
    public String getStkColor() {
        return (String)getAttributeInternal(STKCOLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for STK_COLOR using the alias name StkColor.
     * @param value value to set the STK_COLOR
     */
    public void setStkColor(String value) {
        setAttributeInternal(STKCOLOR, value);
    }

    /**
     * Gets the attribute value for STK_MATERIAL using the alias name StkMaterial.
     * @return the STK_MATERIAL
     */
    public String getStkMaterial() {
        return (String)getAttributeInternal(STKMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for STK_MATERIAL using the alias name StkMaterial.
     * @param value value to set the STK_MATERIAL
     */
    public void setStkMaterial(String value) {
        setAttributeInternal(STKMATERIAL, value);
    }

    /**
     * Gets the attribute value for STK_PEELABLE_TYPE using the alias name StkPeelableType.
     * @return the STK_PEELABLE_TYPE
     */
    public String getStkPeelableType() {
        return (String)getAttributeInternal(STKPEELABLETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for STK_PEELABLE_TYPE using the alias name StkPeelableType.
     * @param value value to set the STK_PEELABLE_TYPE
     */
    public void setStkPeelableType(String value) {
        setAttributeInternal(STKPEELABLETYPE, value);
    }

    /**
     * Gets the attribute value for STK_PERFORATED_TYPE using the alias name StkPerforatedType.
     * @return the STK_PERFORATED_TYPE
     */
    public String getStkPerforatedType() {
        return (String)getAttributeInternal(STKPERFORATEDTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for STK_PERFORATED_TYPE using the alias name StkPerforatedType.
     * @param value value to set the STK_PERFORATED_TYPE
     */
    public void setStkPerforatedType(String value) {
        setAttributeInternal(STKPERFORATEDTYPE, value);
    }

    /**
     * Gets the attribute value for STK_STICKER_TYPE using the alias name StkStickerType.
     * @return the STK_STICKER_TYPE
     */
    public String getStkStickerType() {
        return (String)getAttributeInternal(STKSTICKERTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for STK_STICKER_TYPE using the alias name StkStickerType.
     * @param value value to set the STK_STICKER_TYPE
     */
    public void setStkStickerType(String value) {
        setAttributeInternal(STKSTICKERTYPE, value);
    }

    /**
     * Gets the attribute value for STK_TEXT using the alias name StkText.
     * @return the STK_TEXT
     */
    public String getStkText() {
        return (String)getAttributeInternal(STKTEXT);
    }

    /**
     * Sets <code>value</code> as attribute value for STK_TEXT using the alias name StkText.
     * @param value value to set the STK_TEXT
     */
    public void setStkText(String value) {
        setAttributeInternal(STKTEXT, value);
    }

    /**
     * Gets the attribute value for SG_ITEM using the alias name SgItem.
     * @return the SG_ITEM
     */
    public String getSgItem() {
        return (String)getAttributeInternal(SGITEM);
    }

    /**
     * Sets <code>value</code> as attribute value for SG_ITEM using the alias name SgItem.
     * @param value value to set the SG_ITEM
     */
    public void setSgItem(String value) {
        setAttributeInternal(SGITEM, value);
    }

    /**
     * Gets the attribute value for SG_WEIGHT using the alias name SgWeight.
     * @return the SG_WEIGHT
     */
    public Number getSgWeight() {
        return (Number)getAttributeInternal(SGWEIGHT);
    }

    /**
     * Sets <code>value</code> as attribute value for SG_WEIGHT using the alias name SgWeight.
     * @param value value to set the SG_WEIGHT
     */
    public void setSgWeight(Number value) {
        setAttributeInternal(SGWEIGHT, value);
    }

    /**
     * Gets the attribute value for TP_COLOR using the alias name TpColor.
     * @return the TP_COLOR
     */
    public String getTpColor() {
        return (String)getAttributeInternal(TPCOLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for TP_COLOR using the alias name TpColor.
     * @param value value to set the TP_COLOR
     */
    public void setTpColor(String value) {
        setAttributeInternal(TPCOLOR, value);
    }

    /**
     * Gets the attribute value for TP_MATERIAL_TYPE using the alias name TpMaterialType.
     * @return the TP_MATERIAL_TYPE
     */
    public String getTpMaterialType() {
        return (String)getAttributeInternal(TPMATERIALTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TP_MATERIAL_TYPE using the alias name TpMaterialType.
     * @param value value to set the TP_MATERIAL_TYPE
     */
    public void setTpMaterialType(String value) {
        setAttributeInternal(TPMATERIALTYPE, value);
    }

    /**
     * Gets the attribute value for LAC_COLOR using the alias name LacColor.
     * @return the LAC_COLOR
     */
    public String getLacColor() {
        return (String)getAttributeInternal(LACCOLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for LAC_COLOR using the alias name LacColor.
     * @param value value to set the LAC_COLOR
     */
    public void setLacColor(String value) {
        setAttributeInternal(LACCOLOR, value);
    }

    /**
     * Gets the attribute value for LAC_MATERIAL using the alias name LacMaterial.
     * @return the LAC_MATERIAL
     */
    public String getLacMaterial() {
        return (String)getAttributeInternal(LACMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for LAC_MATERIAL using the alias name LacMaterial.
     * @param value value to set the LAC_MATERIAL
     */
    public void setLacMaterial(String value) {
        setAttributeInternal(LACMATERIAL, value);
    }

    /**
     * Gets the attribute value for LAC_TYPE using the alias name LacType.
     * @return the LAC_TYPE
     */
    public String getLacType() {
        return (String)getAttributeInternal(LACTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAC_TYPE using the alias name LacType.
     * @param value value to set the LAC_TYPE
     */
    public void setLacType(String value) {
        setAttributeInternal(LACTYPE, value);
    }

    /**
     * Gets the attribute value for LAC_UOM using the alias name LacUom.
     * @return the LAC_UOM
     */
    public String getLacUom() {
        return (String)getAttributeInternal(LACUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for LAC_UOM using the alias name LacUom.
     * @param value value to set the LAC_UOM
     */
    public void setLacUom(String value) {
        setAttributeInternal(LACUOM, value);
    }

    /**
     * Gets the attribute value for EY_COLOR using the alias name EyColor.
     * @return the EY_COLOR
     */
    public String getEyColor() {
        return (String)getAttributeInternal(EYCOLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for EY_COLOR using the alias name EyColor.
     * @param value value to set the EY_COLOR
     */
    public void setEyColor(String value) {
        setAttributeInternal(EYCOLOR, value);
    }

    /**
     * Gets the attribute value for EY_FINISH using the alias name EyFinish.
     * @return the EY_FINISH
     */
    public String getEyFinish() {
        return (String)getAttributeInternal(EYFINISH);
    }

    /**
     * Sets <code>value</code> as attribute value for EY_FINISH using the alias name EyFinish.
     * @param value value to set the EY_FINISH
     */
    public void setEyFinish(String value) {
        setAttributeInternal(EYFINISH, value);
    }

    /**
     * Gets the attribute value for EY_MATERIAL using the alias name EyMaterial.
     * @return the EY_MATERIAL
     */
    public String getEyMaterial() {
        return (String)getAttributeInternal(EYMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for EY_MATERIAL using the alias name EyMaterial.
     * @param value value to set the EY_MATERIAL
     */
    public void setEyMaterial(String value) {
        setAttributeInternal(EYMATERIAL, value);
    }

    /**
     * Gets the attribute value for HNG_HOOK_TYPE using the alias name HngHookType.
     * @return the HNG_HOOK_TYPE
     */
    public String getHngHookType() {
        return (String)getAttributeInternal(HNGHOOKTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for HNG_HOOK_TYPE using the alias name HngHookType.
     * @param value value to set the HNG_HOOK_TYPE
     */
    public void setHngHookType(String value) {
        setAttributeInternal(HNGHOOKTYPE, value);
    }

    /**
     * Gets the attribute value for HNG_MATERIAL_COMBINATION using the alias name HngMaterialCombination.
     * @return the HNG_MATERIAL_COMBINATION
     */
    public String getHngMaterialCombination() {
        return (String)getAttributeInternal(HNGMATERIALCOMBINATION);
    }

    /**
     * Sets <code>value</code> as attribute value for HNG_MATERIAL_COMBINATION using the alias name HngMaterialCombination.
     * @param value value to set the HNG_MATERIAL_COMBINATION
     */
    public void setHngMaterialCombination(String value) {
        setAttributeInternal(HNGMATERIALCOMBINATION, value);
    }

    /**
     * Gets the attribute value for HNG_THICKNESS using the alias name HngThickness.
     * @return the HNG_THICKNESS
     */
    public Number getHngThickness() {
        return (Number)getAttributeInternal(HNGTHICKNESS);
    }

    /**
     * Sets <code>value</code> as attribute value for HNG_THICKNESS using the alias name HngThickness.
     * @param value value to set the HNG_THICKNESS
     */
    public void setHngThickness(Number value) {
        setAttributeInternal(HNGTHICKNESS, value);
    }

    /**
     * Gets the attribute value for HNG_THICKNESS_UOM using the alias name HngThicknessUom.
     * @return the HNG_THICKNESS_UOM
     */
    public String getHngThicknessUom() {
        return (String)getAttributeInternal(HNGTHICKNESSUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for HNG_THICKNESS_UOM using the alias name HngThicknessUom.
     * @param value value to set the HNG_THICKNESS_UOM
     */
    public void setHngThicknessUom(String value) {
        setAttributeInternal(HNGTHICKNESSUOM, value);
    }

    /**
     * Gets the attribute value for STR_DESCRIPTION using the alias name StrDescription.
     * @return the STR_DESCRIPTION
     */
    public String getStrDescription() {
        return (String)getAttributeInternal(STRDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for STR_DESCRIPTION using the alias name StrDescription.
     * @param value value to set the STR_DESCRIPTION
     */
    public void setStrDescription(String value) {
        setAttributeInternal(STRDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for TAP_MATERIAL using the alias name TapMaterial.
     * @return the TAP_MATERIAL
     */
    public String getTapMaterial() {
        return (String)getAttributeInternal(TAPMATERIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for TAP_MATERIAL using the alias name TapMaterial.
     * @param value value to set the TAP_MATERIAL
     */
    public void setTapMaterial(String value) {
        setAttributeInternal(TAPMATERIAL, value);
    }

    /**
     * Gets the attribute value for TAP_PRINT_TEXT using the alias name TapPrintText.
     * @return the TAP_PRINT_TEXT
     */
    public String getTapPrintText() {
        return (String)getAttributeInternal(TAPPRINTTEXT);
    }

    /**
     * Sets <code>value</code> as attribute value for TAP_PRINT_TEXT using the alias name TapPrintText.
     * @param value value to set the TAP_PRINT_TEXT
     */
    public void setTapPrintText(String value) {
        setAttributeInternal(TAPPRINTTEXT, value);
    }

    /**
     * Gets the attribute value for ACC_ACCESSORY_TYPE using the alias name AccAccessoryType.
     * @return the ACC_ACCESSORY_TYPE
     */
    public String getAccAccessoryType() {
        return (String)getAttributeInternal(ACCACCESSORYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_ACCESSORY_TYPE using the alias name AccAccessoryType.
     * @param value value to set the ACC_ACCESSORY_TYPE
     */
    public void setAccAccessoryType(String value) {
        setAttributeInternal(ACCACCESSORYTYPE, value);
    }

    /**
     * Gets the attribute value for ACC_DIAMETER using the alias name AccDiameter.
     * @return the ACC_DIAMETER
     */
    public Number getAccDiameter() {
        return (Number)getAttributeInternal(ACCDIAMETER);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_DIAMETER using the alias name AccDiameter.
     * @param value value to set the ACC_DIAMETER
     */
    public void setAccDiameter(Number value) {
        setAttributeInternal(ACCDIAMETER, value);
    }

    /**
     * Gets the attribute value for ACC_DIAMETER_UOM using the alias name AccDiameterUom.
     * @return the ACC_DIAMETER_UOM
     */
    public String getAccDiameterUom() {
        return (String)getAttributeInternal(ACCDIAMETERUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_DIAMETER_UOM using the alias name AccDiameterUom.
     * @param value value to set the ACC_DIAMETER_UOM
     */
    public void setAccDiameterUom(String value) {
        setAttributeInternal(ACCDIAMETERUOM, value);
    }

    /**
     * Gets the attribute value for ACC_HEIGHT using the alias name AccHeight.
     * @return the ACC_HEIGHT
     */
    public Number getAccHeight() {
        return (Number)getAttributeInternal(ACCHEIGHT);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_HEIGHT using the alias name AccHeight.
     * @param value value to set the ACC_HEIGHT
     */
    public void setAccHeight(Number value) {
        setAttributeInternal(ACCHEIGHT, value);
    }

    /**
     * Gets the attribute value for ACC_HEIGHT_UOM using the alias name AccHeightUom.
     * @return the ACC_HEIGHT_UOM
     */
    public String getAccHeightUom() {
        return (String)getAttributeInternal(ACCHEIGHTUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_HEIGHT_UOM using the alias name AccHeightUom.
     * @param value value to set the ACC_HEIGHT_UOM
     */
    public void setAccHeightUom(String value) {
        setAttributeInternal(ACCHEIGHTUOM, value);
    }

    /**
     * Gets the attribute value for ACC_LENGTH using the alias name AccLength.
     * @return the ACC_LENGTH
     */
    public Number getAccLength() {
        return (Number)getAttributeInternal(ACCLENGTH);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_LENGTH using the alias name AccLength.
     * @param value value to set the ACC_LENGTH
     */
    public void setAccLength(Number value) {
        setAttributeInternal(ACCLENGTH, value);
    }

    /**
     * Gets the attribute value for ACC_LENGTH1 using the alias name AccLength1.
     * @return the ACC_LENGTH1
     */
    public Number getAccLength1() {
        return (Number)getAttributeInternal(ACCLENGTH1);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_LENGTH1 using the alias name AccLength1.
     * @param value value to set the ACC_LENGTH1
     */
    public void setAccLength1(Number value) {
        setAttributeInternal(ACCLENGTH1, value);
    }

    /**
     * Gets the attribute value for ACC_LENGTH1_UOM using the alias name AccLength1Uom.
     * @return the ACC_LENGTH1_UOM
     */
    public String getAccLength1Uom() {
        return (String)getAttributeInternal(ACCLENGTH1UOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_LENGTH1_UOM using the alias name AccLength1Uom.
     * @param value value to set the ACC_LENGTH1_UOM
     */
    public void setAccLength1Uom(String value) {
        setAttributeInternal(ACCLENGTH1UOM, value);
    }

    /**
     * Gets the attribute value for ACC_LENGTH2 using the alias name AccLength2.
     * @return the ACC_LENGTH2
     */
    public Number getAccLength2() {
        return (Number)getAttributeInternal(ACCLENGTH2);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_LENGTH2 using the alias name AccLength2.
     * @param value value to set the ACC_LENGTH2
     */
    public void setAccLength2(Number value) {
        setAttributeInternal(ACCLENGTH2, value);
    }

    /**
     * Gets the attribute value for ACC_LENGTH2_UOM using the alias name AccLength2Uom.
     * @return the ACC_LENGTH2_UOM
     */
    public String getAccLength2Uom() {
        return (String)getAttributeInternal(ACCLENGTH2UOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_LENGTH2_UOM using the alias name AccLength2Uom.
     * @param value value to set the ACC_LENGTH2_UOM
     */
    public void setAccLength2Uom(String value) {
        setAttributeInternal(ACCLENGTH2UOM, value);
    }

    /**
     * Gets the attribute value for ACC_LENGTH_UOM using the alias name AccLengthUom.
     * @return the ACC_LENGTH_UOM
     */
    public String getAccLengthUom() {
        return (String)getAttributeInternal(ACCLENGTHUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_LENGTH_UOM using the alias name AccLengthUom.
     * @param value value to set the ACC_LENGTH_UOM
     */
    public void setAccLengthUom(String value) {
        setAttributeInternal(ACCLENGTHUOM, value);
    }

    /**
     * Gets the attribute value for ACC_LIST_PRICE using the alias name AccListPrice.
     * @return the ACC_LIST_PRICE
     */
    public BigDecimal getAccListPrice() {
        return (BigDecimal)getAttributeInternal(ACCLISTPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_LIST_PRICE using the alias name AccListPrice.
     * @param value value to set the ACC_LIST_PRICE
     */
    public void setAccListPrice(BigDecimal value) {
        setAttributeInternal(ACCLISTPRICE, value);
    }

    /**
     * Gets the attribute value for ACC_REMARKS using the alias name AccRemarks.
     * @return the ACC_REMARKS
     */
    public String getAccRemarks() {
        return (String)getAttributeInternal(ACCREMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_REMARKS using the alias name AccRemarks.
     * @param value value to set the ACC_REMARKS
     */
    public void setAccRemarks(String value) {
        setAttributeInternal(ACCREMARKS, value);
    }

    /**
     * Gets the attribute value for ACC_WASTAGE using the alias name AccWastage.
     * @return the ACC_WASTAGE
     */
    public BigDecimal getAccWastage() {
        return (BigDecimal)getAttributeInternal(ACCWASTAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_WASTAGE using the alias name AccWastage.
     * @param value value to set the ACC_WASTAGE
     */
    public void setAccWastage(BigDecimal value) {
        setAttributeInternal(ACCWASTAGE, value);
    }

    /**
     * Gets the attribute value for ACC_WIDTH using the alias name AccWidth.
     * @return the ACC_WIDTH
     */
    public Number getAccWidth() {
        return (Number)getAttributeInternal(ACCWIDTH);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_WIDTH using the alias name AccWidth.
     * @param value value to set the ACC_WIDTH
     */
    public void setAccWidth(Number value) {
        setAttributeInternal(ACCWIDTH, value);
    }

    /**
     * Gets the attribute value for ACC_WIDTH1 using the alias name AccWidth1.
     * @return the ACC_WIDTH1
     */
    public Number getAccWidth1() {
        return (Number)getAttributeInternal(ACCWIDTH1);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_WIDTH1 using the alias name AccWidth1.
     * @param value value to set the ACC_WIDTH1
     */
    public void setAccWidth1(Number value) {
        setAttributeInternal(ACCWIDTH1, value);
    }

    /**
     * Gets the attribute value for ACC_WIDTH1_UOM using the alias name AccWidth1Uom.
     * @return the ACC_WIDTH1_UOM
     */
    public String getAccWidth1Uom() {
        return (String)getAttributeInternal(ACCWIDTH1UOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_WIDTH1_UOM using the alias name AccWidth1Uom.
     * @param value value to set the ACC_WIDTH1_UOM
     */
    public void setAccWidth1Uom(String value) {
        setAttributeInternal(ACCWIDTH1UOM, value);
    }

    /**
     * Gets the attribute value for ACC_WIDTH2 using the alias name AccWidth2.
     * @return the ACC_WIDTH2
     */
    public Number getAccWidth2() {
        return (Number)getAttributeInternal(ACCWIDTH2);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_WIDTH2 using the alias name AccWidth2.
     * @param value value to set the ACC_WIDTH2
     */
    public void setAccWidth2(Number value) {
        setAttributeInternal(ACCWIDTH2, value);
    }

    /**
     * Gets the attribute value for ACC_WIDTH2_UOM using the alias name AccWidth2Uom.
     * @return the ACC_WIDTH2_UOM
     */
    public String getAccWidth2Uom() {
        return (String)getAttributeInternal(ACCWIDTH2UOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_WIDTH2_UOM using the alias name AccWidth2Uom.
     * @param value value to set the ACC_WIDTH2_UOM
     */
    public void setAccWidth2Uom(String value) {
        setAttributeInternal(ACCWIDTH2UOM, value);
    }

    /**
     * Gets the attribute value for ACC_WIDTH_UOM using the alias name AccWidthUom.
     * @return the ACC_WIDTH_UOM
     */
    public String getAccWidthUom() {
        return (String)getAttributeInternal(ACCWIDTHUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_WIDTH_UOM using the alias name AccWidthUom.
     * @param value value to set the ACC_WIDTH_UOM
     */
    public void setAccWidthUom(String value) {
        setAttributeInternal(ACCWIDTHUOM, value);
    }

    /**
     * Gets the attribute value for CTC_ITEM_TYPE using the alias name CtcItemType.
     * @return the CTC_ITEM_TYPE
     */
    public String getCtcItemType() {
        return (String)getAttributeInternal(CTCITEMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for CTC_ITEM_TYPE using the alias name CtcItemType.
     * @param value value to set the CTC_ITEM_TYPE
     */
    public void setCtcItemType(String value) {
        setAttributeInternal(CTCITEMTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AccTypeValueDisplay.
     * @return the AccTypeValueDisplay
     */
    public String getAccTypeValueDisplay() {
        return (String)getAttributeInternal(ACCTYPEVALUEDISPLAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AccTypeValueDisplay.
     * @param value value to set the  AccTypeValueDisplay
     */
    public void setAccTypeValueDisplay(String value) {
        setAttributeInternal(ACCTYPEVALUEDISPLAY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BagDimensionsTrans.
     * @return the BagDimensionsTrans
     */
    public String getBagDimensionsTrans() {
        return (String)getAttributeInternal(BAGDIMENSIONSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BagDimensionsTrans.
     * @param value value to set the  BagDimensionsTrans
     */
    public void setBagDimensionsTrans(String value) {
        setAttributeInternal(BAGDIMENSIONSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BagSizeTrans.
     * @return the BagSizeTrans
     */
    public String getBagSizeTrans() {
        //return (String)getAttributeInternal(BAGSIZETRANS);
        String value = "";
        value =
                (getAccWidth() != null ? getAccWidth() + "x" : "") + (getAccHeight() !=
                                                                      null ?
                                                                      getAccHeight() +
                                                                      "x" :
                                                                      "") +
                (getBgGusset() != null ? getBgGusset() + "x" : "") +
                (getBgFlap() != null ? getBgFlap() + "x" : "");
        value =
                value.substring(0, (value.length() > 1 ? value.length() - 1 : value.length()));
        value =
                (value + " " + (getBagDimensionsTrans() != null ? getBagDimensionsTrans() :
                                "")).replaceAll("\\s+", " ").trim();
        return value;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BagSizeTrans.
     * @param value value to set the  BagSizeTrans
     */
    public void setBagSizeTrans(String value) {
        setAttributeInternal(BAGSIZETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BagResultantTrans.
     * @return the BagResultantTrans
     */
    public String getBagResultantTrans() {
        return (String)getAttributeInternal(BAGRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BagResultantTrans.
     * @param value value to set the  BagResultantTrans
     */
    public void setBagResultantTrans(String value) {
        setAttributeInternal(BAGRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProgramNameDesc.
     * @return the ProgramNameDesc
     */
    public String getProgramNameDesc() {
        return (String)getAttributeInternal(PROGRAMNAMEDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProgramNameDesc.
     * @param value value to set the  ProgramNameDesc
     */
    public void setProgramNameDesc(String value) {
        setAttributeInternal(PROGRAMNAMEDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InsDimensionsTrans.
     * @return the InsDimensionsTrans
     */
    public String getInsDimensionsTrans() {
        return (String)getAttributeInternal(INSDIMENSIONSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InsDimensionsTrans.
     * @param value value to set the  InsDimensionsTrans
     */
    public void setInsDimensionsTrans(String value) {
        setAttributeInternal(INSDIMENSIONSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InsSizeTrans.
     * @return the InsSizeTrans
     */
    public String getInsSizeTrans() {
        //return (String)getAttributeInternal(INSSIZETRANS);
        String value = "";
        value =
                (getAccWidth1() != null ? getAccWidth1() + "x" : "") + (getAccLength1() !=
                                                                        null ?
                                                                        getAccLength1() +
                                                                        "x" :
                                                                        "") +
                (getInsGusset() != null ? getInsGusset() + "x" : "") +
                (getAccLength2() != null ? getAccLength2() + "x" : "");
        value =
                value.substring(0, (value.length() > 1 ? value.length() - 1 : value.length()));
        value =
                (value + (getAccWidth2() != null ? "x" + getAccWidth2() : "") + " " +
                 (getInsDimensionsTrans() != null ? getInsDimensionsTrans() :
                  "")).replaceAll("\\s+", " ").trim();
        return value;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InsSizeTrans.
     * @param value value to set the  InsSizeTrans
     */
    public void setInsSizeTrans(String value) {
        setAttributeInternal(INSSIZETRANS, value);
    }

    /**
     * Gets the attribute value for INS_TEXT using the alias name InsText.
     * @return the INS_TEXT
     */
    public String getInsText() {
        return (String) getAttributeInternal(INSTEXT);
    }

    /**
     * Sets <code>value</code> as attribute value for INS_TEXT using the alias name InsText.
     * @param value value to set the INS_TEXT
     */
    public void setInsText(String value) {
        setAttributeInternal(INSTEXT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InsResultantTrans.
     * @return the InsResultantTrans
     */
    public String getInsResultantTrans() {
        return (String)getAttributeInternal(INSRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InsResultantTrans.
     * @param value value to set the  InsResultantTrans
     */
    public void setInsResultantTrans(String value) {
        setAttributeInternal(INSRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StfSizeTrans.
     * @return the StfSizeTrans
     */
    public String getStfSizeTrans() {
        //return (String)getAttributeInternal(STFSIZETRANS);
        String value = "";
        value =
                ((getAccLength1() != null ? getAccLength1() + "Lx" : "") + (getStfGusset1() !=
                                                                            null ?
                                                                            getStfGusset1() +
                                                                            "Gx" :
                                                                            "") +
                 (getAccLength2() != null ? getAccLength2() + "Lx" : "") +
                 (getStfGusset2() != null ? getStfGusset2() + "Gx" : "") +
                 (getAccWidth() != null ? getAccWidth() + "Wx" :
                  "")).replaceAll("\\s+", " ").trim();
        value =
                value.substring(0, (value.length() > 1 ? value.length() - 1 : value.length()));
        return value;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StfSizeTrans.
     * @param value value to set the  StfSizeTrans
     */
    public void setStfSizeTrans(String value) {
        setAttributeInternal(STFSIZETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StfResultantTrans.
     * @return the StfResultantTrans
     */
    public String getStfResultantTrans() {
        return (String)getAttributeInternal(STFRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StfResultantTrans.
     * @param value value to set the  StfResultantTrans
     */
    public void setStfResultantTrans(String value) {
        setAttributeInternal(STFRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CrtOutDimensionTrans.
     * @return the CrtOutDimensionTrans
     */
    public String getCrtOutDimensionTrans() {
        return (String)getAttributeInternal(CRTOUTDIMENSIONTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CrtOutDimensionTrans.
     * @param value value to set the  CrtOutDimensionTrans
     */
    public void setCrtOutDimensionTrans(String value) {
        setAttributeInternal(CRTOUTDIMENSIONTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CrtInDimensionTrans.
     * @return the CrtInDimensionTrans
     */
    public String getCrtInDimensionTrans() {
        return (String)getAttributeInternal(CRTINDIMENSIONTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CrtInDimensionTrans.
     * @param value value to set the  CrtInDimensionTrans
     */
    public void setCrtInDimensionTrans(String value) {
        setAttributeInternal(CRTINDIMENSIONTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CrtSizeTrans.
     * @return the CrtSizeTrans
     */
    public String getCrtSizeTrans() {
        return (String)getAttributeInternal(CRTSIZETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CrtSizeTrans.
     * @param value value to set the  CrtSizeTrans
     */
    public void setCrtSizeTrans(String value) {
        setAttributeInternal(CRTSIZETRANS, value);
    }

    /**
     * Gets the attribute value for CRT_TEXT using the alias name CrtText.
     * @return the CRT_TEXT
     */
    public String getCrtText() {
        return (String) getAttributeInternal(CRTTEXT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_TEXT using the alias name CrtText.
     * @param value value to set the CRT_TEXT
     */
    public void setCrtText(String value) {
        setAttributeInternal(CRTTEXT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CrtResultantTrans.
     * @return the CrtResultantTrans
     */
    public String getCrtResultantTrans() {
        return (String)getAttributeInternal(CRTRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CrtResultantTrans.
     * @param value value to set the  CrtResultantTrans
     */
    public void setCrtResultantTrans(String value) {
        setAttributeInternal(CRTRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LblPlainSizeTrans.
     * @return the LblPlainSizeTrans
     */
    public String getLblPlainSizeTrans() {
        //return (String)getAttributeInternal(LBLPLAINSIZETRANS);
        String value = "";
        value =
                (((getLblPlainLength() != null ? getLblPlainLength() + "Lx" : "") +
                  (getLblPlainWidth() != null ? getLblPlainWidth() + "Wx" :
                   "")).replaceAll("\\s+", " ").trim());
        value =
                value.substring(0, (value.length() > 1 ? value.length() - 1 : value.length()));
//        Logger.adfLogger.warning("getLblPlainSizeTrans length = " + value.length());
        return value;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LblPlainSizeTrans.
     * @param value value to set the  LblPlainSizeTrans
     */
    public void setLblPlainSizeTrans(String value) {
        setAttributeInternal(LBLPLAINSIZETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LblFoldSizeTrans.
     * @return the LblFoldSizeTrans
     */
    public String getLblFoldSizeTrans() {
        //return (String)getAttributeInternal(LBLFOLDSIZETRANS);
        String value = "";
        value =
                (((getLblFoldLength() != null ? getLblFoldLength() + "Lx" : "") +
                  (getLblFoldWidth() != null ? getLblFoldWidth() + "Wx" :
                   "")).replaceAll("\\s+", " ").trim());
        value =
                value.substring(0, (value.length() > 1 ? value.length() - 1 : value.length()));
//        Logger.adfLogger.warning("getLblFoldSizeTrans length = " + value.length());
        return value;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LblFoldSizeTrans.
     * @param value value to set the  LblFoldSizeTrans
     */
    public void setLblFoldSizeTrans(String value) {
        setAttributeInternal(LBLFOLDSIZETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LblResultantTrans.
     * @return the LblResultantTrans
     */
    public String getLblResultantTrans() {
        return (String)getAttributeInternal(LBLRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LblResultantTrans.
     * @param value value to set the  LblResultantTrans
     */
    public void setLblResultantTrans(String value) {
        setAttributeInternal(LBLRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ZipResultantTrans.
     * @return the ZipResultantTrans
     */
    public String getZipResultantTrans() {
        return (String)getAttributeInternal(ZIPRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ZipResultantTrans.
     * @param value value to set the  ZipResultantTrans
     */
    public void setZipResultantTrans(String value) {
        setAttributeInternal(ZIPRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ThrResultantTrans.
     * @return the ThrResultantTrans
     */
    public String getThrResultantTrans() {
        return (String)getAttributeInternal(THRRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ThrResultantTrans.
     * @param value value to set the  ThrResultantTrans
     */
    public void setThrResultantTrans(String value) {
        setAttributeInternal(THRRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ElsResultantTrans.
     * @return the ElsResultantTrans
     */
    public String getElsResultantTrans() {
        return (String)getAttributeInternal(ELSRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ElsResultantTrans.
     * @param value value to set the  ElsResultantTrans
     */
    public void setElsResultantTrans(String value) {
        setAttributeInternal(ELSRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CtcResultantTrans.
     * @return the CtcResultantTrans
     */
    public String getCtcResultantTrans() {
        return (String)getAttributeInternal(CTCRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CtcResultantTrans.
     * @param value value to set the  CtcResultantTrans
     */
    public void setCtcResultantTrans(String value) {
        setAttributeInternal(CTCRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FusResultantTrans.
     * @return the FusResultantTrans
     */
    public String getFusResultantTrans() {
        return (String)getAttributeInternal(FUSRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FusResultantTrans.
     * @param value value to set the  FusResultantTrans
     */
    public void setFusResultantTrans(String value) {
        setAttributeInternal(FUSRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NwvResultantTrans.
     * @return the NwvResultantTrans
     */
    public String getNwvResultantTrans() {
        return (String)getAttributeInternal(NWVRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NwvResultantTrans.
     * @param value value to set the  NwvResultantTrans
     */
    public void setNwvResultantTrans(String value) {
        setAttributeInternal(NWVRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WdResultantTrans.
     * @return the WdResultantTrans
     */
    public String getWdResultantTrans() {
        return (String)getAttributeInternal(WDRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WdResultantTrans.
     * @param value value to set the  WdResultantTrans
     */
    public void setWdResultantTrans(String value) {
        setAttributeInternal(WDRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BfResultantTrans.
     * @return the BfResultantTrans
     */
    public String getBfResultantTrans() {
        return (String)getAttributeInternal(BFRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BfResultantTrans.
     * @param value value to set the  BfResultantTrans
     */
    public void setBfResultantTrans(String value) {
        setAttributeInternal(BFRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BtnResultantTrans.
     * @return the BtnResultantTrans
     */
    public String getBtnResultantTrans() {
        return (String)getAttributeInternal(BTNRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BtnResultantTrans.
     * @param value value to set the  BtnResultantTrans
     */
    public void setBtnResultantTrans(String value) {
        setAttributeInternal(BTNRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PprResultantTrans.
     * @return the PprResultantTrans
     */
    public String getPprResultantTrans() {
        return (String)getAttributeInternal(PPRRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PprResultantTrans.
     * @param value value to set the  PprResultantTrans
     */
    public void setPprResultantTrans(String value) {
        setAttributeInternal(PPRRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StkResultantTrans.
     * @return the StkResultantTrans
     */
    public String getStkResultantTrans() {
        return (String)getAttributeInternal(STKRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StkResultantTrans.
     * @param value value to set the  StkResultantTrans
     */
    public void setStkResultantTrans(String value) {
        setAttributeInternal(STKRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SgResultantTrans.
     * @return the SgResultantTrans
     */
    public String getSgResultantTrans() {
        return (String)getAttributeInternal(SGRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SgResultantTrans.
     * @param value value to set the  SgResultantTrans
     */
    public void setSgResultantTrans(String value) {
        setAttributeInternal(SGRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TpResultantTrans.
     * @return the TpResultantTrans
     */
    public String getTpResultantTrans() {
        return (String)getAttributeInternal(TPRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TpResultantTrans.
     * @param value value to set the  TpResultantTrans
     */
    public void setTpResultantTrans(String value) {
        setAttributeInternal(TPRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TgResultantTrans.
     * @return the TgResultantTrans
     */
    public String getTgResultantTrans() {
        return (String)getAttributeInternal(TGRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TgResultantTrans.
     * @param value value to set the  TgResultantTrans
     */
    public void setTgResultantTrans(String value) {
        setAttributeInternal(TGRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LacResultantTrans.
     * @return the LacResultantTrans
     */
    public String getLacResultantTrans() {
        return (String)getAttributeInternal(LACRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LacResultantTrans.
     * @param value value to set the  LacResultantTrans
     */
    public void setLacResultantTrans(String value) {
        setAttributeInternal(LACRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EyResultantTrans.
     * @return the EyResultantTrans
     */
    public String getEyResultantTrans() {
        return (String)getAttributeInternal(EYRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EyResultantTrans.
     * @param value value to set the  EyResultantTrans
     */
    public void setEyResultantTrans(String value) {
        setAttributeInternal(EYRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HngResultantTrans.
     * @return the HngResultantTrans
     */
    public String getHngResultantTrans() {
        return (String)getAttributeInternal(HNGRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HngResultantTrans.
     * @param value value to set the  HngResultantTrans
     */
    public void setHngResultantTrans(String value) {
        setAttributeInternal(HNGRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PmResultantTrans.
     * @return the PmResultantTrans
     */
    public String getPmResultantTrans() {
        return (String)getAttributeInternal(PMRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PmResultantTrans.
     * @param value value to set the  PmResultantTrans
     */
    public void setPmResultantTrans(String value) {
        setAttributeInternal(PMRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StrResultantTrans.
     * @return the StrResultantTrans
     */
    public String getStrResultantTrans() {
        return (String)getAttributeInternal(STRRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StrResultantTrans.
     * @param value value to set the  StrResultantTrans
     */
    public void setStrResultantTrans(String value) {
        setAttributeInternal(STRRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TapResultantTrans.
     * @return the TapResultantTrans
     */
    public String getTapResultantTrans() {
        return (String)getAttributeInternal(TAPRESULTANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TapResultantTrans.
     * @param value value to set the  TapResultantTrans
     */
    public void setTapResultantTrans(String value) {
        setAttributeInternal(TAPRESULTANTTRANS, value);
    }

    /**
     * Gets the attribute value for ITEM_STATUS_FLAG using the alias name ItemStatusFlag.
     * @return the ITEM_STATUS_FLAG
     */
    public Integer getItemStatusFlag() {
        return (Integer)getAttributeInternal(ITEMSTATUSFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_STATUS_FLAG using the alias name ItemStatusFlag.
     * @param value value to set the ITEM_STATUS_FLAG
     */
    public void setItemStatusFlag(Integer value) {
        setAttributeInternal(ITEMSTATUSFLAG, value);
    }

    /**
     * Gets the attribute value for FOLDER_CODE using the alias name FolderCode.
     * @return the FOLDER_CODE
     */
    public Integer getFolderCode() {
        return (Integer)getAttributeInternal(FOLDERCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for FOLDER_CODE using the alias name FolderCode.
     * @param value value to set the FOLDER_CODE
     */
    public void setFolderCode(Integer value) {
        setAttributeInternal(FOLDERCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RowStatus.
     * @return the RowStatus
     */
    public Integer getRowStatus() {
        //return (Integer) getAttributeInternal(ROWSTATUS);
        byte entityState = this.getEntity(0).getEntityState();
        return new Integer(entityState);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RowStatus.
     * @param value value to set the  RowStatus
     */
    public void setRowStatus(Integer value) {
        setAttributeInternal(ROWSTATUS, value);
    }

    /**
     * Gets the attribute value for ACC_SIZE using the alias name AccSize.
     * @return the ACC_SIZE
     */
    public String getAccSize() {
        return (String)getAttributeInternal(ACCSIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_SIZE using the alias name AccSize.
     * @param value value to set the ACC_SIZE
     */
    public void setAccSize(String value) {
        setAttributeInternal(ACCSIZE, value);
    }

    /**
     * Gets the attribute value for ACC_ITEM_UOM using the alias name AccItemUom.
     * @return the ACC_ITEM_UOM
     */
    public String getAccItemUom() {
        return (String)getAttributeInternal(ACCITEMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_ITEM_UOM using the alias name AccItemUom.
     * @param value value to set the ACC_ITEM_UOM
     */
    public void setAccItemUom(String value) {
        setAttributeInternal(ACCITEMUOM, value);
    }

    /**
     * Gets the attribute value for MIN_ORDER_QTY using the alias name MinOrderQty.
     * @return the MIN_ORDER_QTY
     */
    public Number getMinOrderQty() {
        return (Number)getAttributeInternal(MINORDERQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for MIN_ORDER_QTY using the alias name MinOrderQty.
     * @param value value to set the MIN_ORDER_QTY
     */
    public void setMinOrderQty(Number value) {
        setAttributeInternal(MINORDERQTY, value);
    }

    /**
     * Gets the attribute value for ACC_CUST_VAL using the alias name AccCustVal.
     * @return the ACC_CUST_VAL
     */
    public String getAccCustVal() {
        return (String)getAttributeInternal(ACCCUSTVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC_CUST_VAL using the alias name AccCustVal.
     * @param value value to set the ACC_CUST_VAL
     */
    public void setAccCustVal(String value) {
        setAttributeInternal(ACCCUSTVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemStatusFlagTrans.
     * @return the ItemStatusFlagTrans
     */
    public String getItemStatusFlagTrans() {
        return (String) getAttributeInternal(ITEMSTATUSFLAGTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemStatusFlagTrans.
     * @param value value to set the  ItemStatusFlagTrans
     */
    public void setItemStatusFlagTrans(String value) {
        setAttributeInternal(ITEMSTATUSFLAGTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BagPocketTrans.
     * @return the BagPocketTrans
     */
    public String getBagPocketTrans() {
        //        return (String) getAttributeInternal(BAGPOCKETTRANS);
        String value = "";
        value =
                (getBgFpLength() != null ? getBgFpLength() + "Lx" : "") + (getBgFpWidth() !=
                                                                           null ?
                                                                           getBgFpWidth() +
                                                                           "Wx" :
                                                                           "") +
                (getBgBpLength() != null ? getBgBpLength() + "Lx" : "") +
                (getBgBpWidth() != null ? getBgBpWidth() + "Wx" : "");
        value =
                value.substring(0, (value.length() > 1 ? value.length() - 1 : value.length()));
        value = value.replaceAll("\\s+", " ").trim();
        return value;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BagPocketTrans.
     * @param value value to set the  BagPocketTrans
     */
    public void setBagPocketTrans(String value) {
        setAttributeInternal(BAGPOCKETTRANS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxpmAttachmentsView.
     */
    public RowIterator getXxpmAttachmentsView() {
        return (RowIterator)getAttributeInternal(XXPMATTACHMENTSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxpmMadeupProgramsView.
     */
    public RowIterator getXxpmMadeupProgramsView() {
        return (RowIterator)getAttributeInternal(XXPMMADEUPPROGRAMSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccCategoryTypeLov.
     */
    public RowSet getAccCategoryTypeLov() {
        return (RowSet)getAttributeInternal(ACCCATEGORYTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccBagPrintingTypeLov.
     */
    public RowSet getAccBagPrintingTypeLov() {
        return (RowSet)getAttributeInternal(ACCBAGPRINTINGTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccBagTypeLov.
     */
    public RowSet getAccBagTypeLov() {
        return (RowSet)getAttributeInternal(ACCBAGTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccBagBtnMaterialLov.
     */
    public RowSet getAccBagBtnMaterialLov() {
        return (RowSet)getAttributeInternal(ACCBAGBTNMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccColorLov.
     */
    public RowSet getAccColorLov() {
        return (RowSet)getAttributeInternal(ACCCOLORLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccBagZipMaterialLov.
     */
    public RowSet getAccBagZipMaterialLov() {
        return (RowSet)getAttributeInternal(ACCBAGZIPMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccBagMaterialLov.
     */
    public RowSet getAccBagMaterialLov() {
        return (RowSet)getAttributeInternal(ACCBAGMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccBagPocketLov.
     */
    public RowSet getAccBagPocketLov() {
        return (RowSet)getAttributeInternal(ACCBAGPOCKETLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccInsTypeLov.
     */
    public RowSet getAccInsTypeLov() {
        return (RowSet)getAttributeInternal(ACCINSTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccInsMaterialGsmLov.
     */
    public RowSet getAccInsMaterialGsmLov() {
        return (RowSet)getAttributeInternal(ACCINSMATERIALGSMLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccInsPprTypeLov.
     */
    public RowSet getAccInsPprTypeLov() {
        return (RowSet)getAttributeInternal(ACCINSPPRTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccInsVarnishLov.
     */
    public RowSet getAccInsVarnishLov() {
        return (RowSet)getAttributeInternal(ACCINSVARNISHLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccInsLaminationLov.
     */
    public RowSet getAccInsLaminationLov() {
        return (RowSet)getAttributeInternal(ACCINSLAMINATIONLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccInsEmboseType.
     */
    public RowSet getAccInsEmboseType() {
        return (RowSet)getAttributeInternal(ACCINSEMBOSETYPE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccStfTypeLov.
     */
    public RowSet getAccStfTypeLov() {
        return (RowSet)getAttributeInternal(ACCSTFTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccStfPlyLov.
     */
    public RowSet getAccStfPlyLov() {
        return (RowSet)getAttributeInternal(ACCSTFPLYLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccStfMateriaLov.
     */
    public RowSet getAccStfMateriaLov() {
        return (RowSet)getAttributeInternal(ACCSTFMATERIALOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccCrtPrintTypeLov.
     */
    public RowSet getAccCrtPrintTypeLov() {
        return (RowSet)getAttributeInternal(ACCCRTPRINTTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccCrtPrintSideLov.
     */
    public RowSet getAccCrtPrintSideLov() {
        return (RowSet)getAttributeInternal(ACCCRTPRINTSIDELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccUomLov.
     */
    public RowSet getAccUomLov() {
        return (RowSet)getAttributeInternal(ACCUOMLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccCrtPlyLov.
     */
    public RowSet getAccCrtPlyLov() {
        return (RowSet)getAttributeInternal(ACCCRTPLYLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccCrtMaterialLov.
     */
    public RowSet getAccCrtMaterialLov() {
        return (RowSet)getAttributeInternal(ACCCRTMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccLblTypeLov.
     */
    public RowSet getAccLblTypeLov() {
        return (RowSet)getAttributeInternal(ACCLBLTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccLblFoldingtypeLov.
     */
    public RowSet getAccLblFoldingtypeLov() {
        return (RowSet)getAttributeInternal(ACCLBLFOLDINGTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccLblMaterialLov.
     */
    public RowSet getAccLblMaterialLov() {
        return (RowSet)getAttributeInternal(ACCLBLMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccZpMaterialTypeLov.
     */
    public RowSet getAccZpMaterialTypeLov() {
        return (RowSet)getAttributeInternal(ACCZPMATERIALTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccZpTeethType.
     */
    public RowSet getAccZpTeethType() {
        return (RowSet)getAttributeInternal(ACCZPTEETHTYPE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccThrUsageLov.
     */
    public RowSet getAccThrUsageLov() {
        return (RowSet)getAttributeInternal(ACCTHRUSAGELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccThrTypeLov.
     */
    public RowSet getAccThrTypeLov() {
        return (RowSet)getAttributeInternal(ACCTHRTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccThrMaterialLov.
     */
    public RowSet getAccThrMaterialLov() {
        return (RowSet)getAttributeInternal(ACCTHRMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccElsTypeLov.
     */
    public RowSet getAccElsTypeLov() {
        return (RowSet)getAttributeInternal(ACCELSTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccCtcItemTypeLov.
     */
    public RowSet getAccCtcItemTypeLov() {
        return (RowSet)getAttributeInternal(ACCCTCITEMTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccCtcMaterialLov.
     */
    public RowSet getAccCtcMaterialLov() {
        return (RowSet)getAttributeInternal(ACCCTCMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccFusMaterialLov.
     */
    public RowSet getAccFusMaterialLov() {
        return (RowSet)getAttributeInternal(ACCFUSMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccNwvMaterialLov.
     */
    public RowSet getAccNwvMaterialLov() {
        return (RowSet)getAttributeInternal(ACCNWVMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccWdMaterialLov.
     */
    public RowSet getAccWdMaterialLov() {
        return (RowSet)getAttributeInternal(ACCWDMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccBfMaterialLov.
     */
    public RowSet getAccBfMaterialLov() {
        return (RowSet)getAttributeInternal(ACCBFMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccBfTypeLov.
     */
    public RowSet getAccBfTypeLov() {
        return (RowSet)getAttributeInternal(ACCBFTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccBtnTypeLov.
     */
    public RowSet getAccBtnTypeLov() {
        return (RowSet)getAttributeInternal(ACCBTNTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccBtnMateralLov.
     */
    public RowSet getAccBtnMateralLov() {
        return (RowSet)getAttributeInternal(ACCBTNMATERALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccPprMaterialLov.
     */
    public RowSet getAccPprMaterialLov() {
        return (RowSet)getAttributeInternal(ACCPPRMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccStkTypeLov.
     */
    public RowSet getAccStkTypeLov() {
        return (RowSet)getAttributeInternal(ACCSTKTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccStkMaterialLov.
     */
    public RowSet getAccStkMaterialLov() {
        return (RowSet)getAttributeInternal(ACCSTKMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccStkPeelTypeLov.
     */
    public RowSet getAccStkPeelTypeLov() {
        return (RowSet)getAttributeInternal(ACCSTKPEELTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccStkPeforateTypeLov.
     */
    public RowSet getAccStkPeforateTypeLov() {
        return (RowSet)getAttributeInternal(ACCSTKPEFORATETYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccSgItemLov.
     */
    public RowSet getAccSgItemLov() {
        return (RowSet)getAttributeInternal(ACCSGITEMLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccTpMaterialLov.
     */
    public RowSet getAccTpMaterialLov() {
        return (RowSet)getAttributeInternal(ACCTPMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccLacTypeLov.
     */
    public RowSet getAccLacTypeLov() {
        return (RowSet)getAttributeInternal(ACCLACTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccLacMaterialLov.
     */
    public RowSet getAccLacMaterialLov() {
        return (RowSet)getAttributeInternal(ACCLACMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccEyMaterialLov.
     */
    public RowSet getAccEyMaterialLov() {
        return (RowSet)getAttributeInternal(ACCEYMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccEyFinishLov.
     */
    public RowSet getAccEyFinishLov() {
        return (RowSet)getAttributeInternal(ACCEYFINISHLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccHngHookTypeLov.
     */
    public RowSet getAccHngHookTypeLov() {
        return (RowSet)getAttributeInternal(ACCHNGHOOKTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccTapMaterialLov.
     */
    public RowSet getAccTapMaterialLov() {
        return (RowSet)getAttributeInternal(ACCTAPMATERIALLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccTapPrintLov.
     */
    public RowSet getAccTapPrintLov() {
        return (RowSet)getAttributeInternal(ACCTAPPRINTLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemStatusLov.
     */
    public RowSet getItemStatusLov() {
        return (RowSet)getAttributeInternal(ITEMSTATUSLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccItemStatusLov.
     */
    public RowSet getAccItemStatusLov() {
        return (RowSet)getAttributeInternal(ACCITEMSTATUSLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemSizeLov.
     */
    public RowSet getItemSizeLov() {
        return (RowSet)getAttributeInternal(ITEMSIZELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProgramNameLov.
     */
    public RowSet getProgramNameLov() {
        return (RowSet)getAttributeInternal(PROGRAMNAMELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccLengthUomLov.
     */
    public RowSet getAccLengthUomLov() {
        return (RowSet)getAttributeInternal(ACCLENGTHUOMLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccCrtTypeLov.
     */
    public RowSet getAccCrtTypeLov() {
        return (RowSet)getAttributeInternal(ACCCRTTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemUomLov.
     */
    public RowSet getItemUomLov() {
        return (RowSet)getAttributeInternal(ITEMUOMLOV);
    }

    public void updateAccLovsAccessor() {
        getAccCategoryTypeLov().executeQuery();
        getAccBagPrintingTypeLov().executeQuery();
        getAccBagTypeLov().executeQuery();
        getAccBagBtnMaterialLov().executeQuery();
        getAccColorLov().executeQuery();
        getAccBagZipMaterialLov().executeQuery();
        getAccBagMaterialLov().executeQuery();
        getAccInsTypeLov().executeQuery();
        getAccInsMaterialGsmLov().executeQuery();
        getAccInsPprTypeLov().executeQuery();
        getAccInsVarnishLov().executeQuery();
        getAccInsLaminationLov().executeQuery();
        getAccInsEmboseType().executeQuery();
        getAccStfTypeLov().executeQuery();
        getAccStfPlyLov().executeQuery();
        getAccStfMateriaLov().executeQuery();
        getAccCrtPrintTypeLov().executeQuery();
        getAccCrtPrintSideLov().executeQuery();
        getAccUomLov().executeQuery();
        getAccCrtPlyLov().executeQuery();
        getAccCrtMaterialLov().executeQuery();
        getAccLblTypeLov().executeQuery();
        getAccLblFoldingtypeLov().executeQuery();
        getAccLblMaterialLov().executeQuery();
        getAccZpMaterialTypeLov().executeQuery();
        getAccZpTeethType().executeQuery();
        getAccThrUsageLov().executeQuery();
        getAccThrTypeLov().executeQuery();
        getAccThrMaterialLov().executeQuery();
        getAccElsTypeLov().executeQuery();
        getAccCtcItemTypeLov().executeQuery();
        getAccCtcMaterialLov().executeQuery();
        getAccFusMaterialLov().executeQuery();
        getAccNwvMaterialLov().executeQuery();
        getAccWdMaterialLov().executeQuery();
        getAccBfMaterialLov().executeQuery();
        getAccBfTypeLov().executeQuery();
        getAccBtnTypeLov().executeQuery();
        getAccBtnMateralLov().executeQuery();
        getAccPprMaterialLov().executeQuery();
        getAccStkTypeLov().executeQuery();
        getAccStkMaterialLov().executeQuery();
        getAccStkPeelTypeLov().executeQuery();
        getAccStkPeforateTypeLov().executeQuery();
        getAccSgItemLov().executeQuery();
        getAccTpMaterialLov().executeQuery();
        getAccLacTypeLov().executeQuery();
        getAccLacMaterialLov().executeQuery();
        getAccEyMaterialLov().executeQuery();
        getAccEyFinishLov().executeQuery();
        getAccHngHookTypeLov().executeQuery();
        getAccTapMaterialLov().executeQuery();
        getAccTapPrintLov().executeQuery();
        getAccLengthUomLov().executeQuery();
        getAccCrtTypeLov().executeQuery();
    }
}
