package ncl.pm.model.bc.vo;

import java.sql.ResultSet;

import oracle.jbo.Row;
import oracle.jbo.ViewObject;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 30 20:29:30 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmItemMasterPrnViewImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public XxpmItemMasterPrnViewImpl() {
    }

    /**
     * Returns the variable value for BindDescPrn.
     * @return variable value for BindDescPrn
     */
    public String getBindDescPrn() {
        return (String)ensureVariableManager().getVariableValue("BindDescPrn");
    }

    /**
     * Sets <code>value</code> for variable BindDescPrn.
     * @param value value to bind as BindDescPrn
     */
    public void setBindDescPrn(String value) {
        ensureVariableManager().setVariableValue("BindDescPrn", value);
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object[] params,
                                             int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc,
                                                 ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        if (value != null) {
            oracle.jbo.domain.Number bId =
                (oracle.jbo.domain.Number)value.getAttribute("BaseImId");
            ViewObjectImpl wvItmDscVo =
                (ViewObjectImpl)this.getApplicationModule().findViewObject("WeavingItemDescLov");
            RowQualifier wvItmDscRQ = new RowQualifier("Id=" + bId);
            Row[] wvItmDscRows = wvItmDscVo.getFilteredRows(wvItmDscRQ);
            Row wvItmDscRow = null;
            for (int i = 0; i < wvItmDscRows.length; i++) {
                wvItmDscRow = wvItmDscRows[i];
                value.setAttribute("TransWeavingDesc",
                                   wvItmDscRow.getAttribute("Description"));
            }
            ////////////////
            String s4 = (String)value.getAttribute("Segment4");
            ViewObjectImpl itmColorVo =
                (ViewObjectImpl)this.getApplicationModule().findViewObject("ItemColorsLov");
            RowQualifier itmColorRQ = new RowQualifier("Value= '" + s4 + "'");
            Row[] itmColorRows = itmColorVo.getFilteredRows(itmColorRQ);
            Row itmColorRow = null;
            for (int i = 0; i < itmColorRows.length; i++) {
                itmColorRow = itmColorRows[i];
                value.setAttribute("PrnColor",
                                   itmColorRow.getAttribute("Display"));
            }
            ////////////////
            String s5 = (String)value.getAttribute("Segment5");
            ViewObjectImpl itmSizeVo =
                (ViewObjectImpl)this.getApplicationModule().findViewObject("ItemSizeLov");
            RowQualifier itmSizeRQ = new RowQualifier("Value= '" + s5 + "'");
            Row[] itmSizeRows = itmSizeVo.getFilteredRows(itmSizeRQ);
            Row itmSizeRow = null;
            for (int i = 0; i < itmSizeRows.length; i++) {
                itmSizeRow = itmSizeRows[i];
                value.setAttribute("PrnFinishWidthDesc",
                                   itmSizeRow.getAttribute("Display"));
            }
        }
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }
}
