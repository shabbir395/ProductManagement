package ncl.pm.model.bc.vo;

import ncl.pm.model.bc.view.xxpmJC.Logger;
import ncl.pm.model.bc.vo.common.XxpmYarnBlendView;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 11 12:42:03 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmYarnBlendViewImpl extends ViewObjectImpl implements XxpmYarnBlendView {
    /**
     * This is the default constructor (do not remove).
     */
    public XxpmYarnBlendViewImpl() {
    }

    /**Method to revert changes of current row
     * @param curRow
     */
    public void revertChangesCurrentRow(Row curRow) {
        if (curRow != null) {
            curRow.refresh(Row.REFRESH_UNDO_CHANGES |
                           Row.REFRESH_WITH_DB_FORGET_CHANGES);
        }
    }

    /**Method to check whether row should be removed or not
     * If it is new - removed
     * If old one- Undo Changes
     * */
    public void revertOrremoveRowValues() {
        ViewObject vo = this;
        RowSetIterator iter = vo.createRowSetIterator(null);
        while (iter.hasNext()) {
            Row nextRow = iter.next();
            if (nextRow.getAttribute("RowStatus") != null) {
                Integer rowStatus = (Integer)nextRow.getAttribute("RowStatus");
                if (rowStatus == 2) {
                    Logger.adfLogger.warning("Row has been modified.");
                    revertChangesCurrentRow(nextRow);
                } else if (rowStatus == 0) {
                    Logger.adfLogger.warning("New Row Removed");
                    nextRow.remove();
                }
            }
        }
        //this.executeQuery();
    }

    public void revertOrremoveCurRowValue() {
        ViewObject vo = this;
        if (vo.getCurrentRow().getAttribute("RowStatus") != null) {
            Integer rowStatus =
                (Integer)vo.getCurrentRow().getAttribute("RowStatus");
            if (rowStatus == 2) {
                Logger.adfLogger.warning("Row has been modified.");
                revertChangesCurrentRow(vo.getCurrentRow());
            } else if (rowStatus == 0) {
                Logger.adfLogger.warning("New Row Removed");
                vo.getCurrentRow().remove();
            }
        } //else
            Logger.adfLogger.warning("Row status is null");
        //this.executeQuery();
    }

    public void insertRow(Row row) {
        Row lastRow = this.last();
        if (lastRow != null) {
            int indx = this.getRangeIndexOf(lastRow) + 1;
            this.insertRowAtRangeIndex(indx, row);
            this.setCurrentRow(row);
        } else
            super.insertRow(row);
    }
}
