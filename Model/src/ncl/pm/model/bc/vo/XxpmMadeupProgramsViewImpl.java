package ncl.pm.model.bc.vo;

import java.sql.ResultSet;

import ncl.pm.model.bc.view.xxpmJC.ModelActions;

import oracle.jbo.Row;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 09 20:35:25 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmMadeupProgramsViewImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public XxpmMadeupProgramsViewImpl() {
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object[] params,
                                             int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    ModelActions ma = new ModelActions();

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc,
                                                 ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        if (value != null) {
            Object customerId = value.getAttribute("CustomerId");
            ViewObjectImpl custVo =
                (ViewObjectImpl)this.getApplicationModule().findViewObject("CustomersLov");
            RowQualifier rq = new RowQualifier("CustomerId = " + customerId);
            Row[] custRows = custVo.getFilteredRows(rq);
            for (int i = 0; i < custRows.length; i++) {
                Row curRow = custRows[i];
                value.setAttribute("CustomerName",
                                   String.valueOf(curRow.getAttribute("CustomerName")));
            }
        }
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }


    public void insertRow(Row row) {
        Row lastRow = this.last();
        if (lastRow != null) {
            int indx = this.getRangeIndexOf(lastRow) + 1;
            this.insertRowAtRangeIndex(indx, row);
            this.setCurrentRow(row);
        } else
            super.insertRow(row);
    }

    /**
     * Returns the bind variable value for BindUser.
     * @return bind variable value for BindUser
     */
    public String getBindUser() {
        return (String)getNamedWhereClauseParam("BindUser");
    }

    /**
     * Sets <code>value</code> for bind variable BindUser.
     * @param value value to bind as BindUser
     */
    public void setBindUser(String value) {
        setNamedWhereClauseParam("BindUser", value);
    }

    /**
     * Returns the variable value for BindDescProg.
     * @return variable value for BindDescProg
     */
    public String getBindDescProg() {
        return (String)ensureVariableManager().getVariableValue("BindDescProg");
    }

    /**
     * Sets <code>value</code> for variable BindDescProg.
     * @param value value to bind as BindDescProg
     */
    public void setBindDescProg(String value) {
        ensureVariableManager().setVariableValue("BindDescProg", value);
    }

    /**
     * Returns the variable value for BindUserId.
     * @return variable value for BindUserId
     */
    public String getBindUserId() {
        return (String)ensureVariableManager().getVariableValue("BindUserId");
    }

    /**
     * Sets <code>value</code> for variable BindUserId.
     * @param value value to bind as BindUserId
     */
    public void setBindUserId(String value) {
        ensureVariableManager().setVariableValue("BindUserId", value);
    }
}
