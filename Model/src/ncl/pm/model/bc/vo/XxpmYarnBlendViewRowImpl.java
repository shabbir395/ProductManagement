package ncl.pm.model.bc.vo;

import ncl.pm.model.bc.eo.XxpmYarnBlendImpl;
import ncl.pm.model.bc.vo.common.XxpmYarnBlendViewRow;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 11 14:45:13 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmYarnBlendViewRowImpl extends ViewRowImpl implements XxpmYarnBlendViewRow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        YbId {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getYbId();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setYbId((DBSequence)value);
            }
        }
        ,
        Cotton {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getCotton();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setCotton((String)value);
            }
        }
        ,
        CottonRatio {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getCottonRatio();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setCottonRatio((Number)value);
            }
        }
        ,
        Fiber {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getFiber();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setFiber((String)value);
            }
        }
        ,
        FiberRatio {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getFiberRatio();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setFiberRatio((Number)value);
            }
        }
        ,
        YBResultant {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getYBResultant();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setYBResultant((String)value);
            }
        }
        ,
        TotRatio {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getTotRatio();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setTotRatio((Number)value);
            }
        }
        ,
        RowStatus {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getRowStatus();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setRowStatus((Integer)value);
            }
        }
        ,
        ImId {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getImId();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setImId((Number)value);
            }
        }
        ,
        XxpmItemMasterSpnView {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getXxpmItemMasterSpnView();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CottonTypeLOV {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getCottonTypeLOV();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FiberTypeLOV {
            public Object get(XxpmYarnBlendViewRowImpl obj) {
                return obj.getFiberTypeLOV();
            }

            public void put(XxpmYarnBlendViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxpmYarnBlendViewRowImpl object);

        public abstract void put(XxpmYarnBlendViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int YBID = AttributesEnum.YbId.index();
    public static final int COTTON = AttributesEnum.Cotton.index();
    public static final int COTTONRATIO = AttributesEnum.CottonRatio.index();
    public static final int FIBER = AttributesEnum.Fiber.index();
    public static final int FIBERRATIO = AttributesEnum.FiberRatio.index();
    public static final int YBRESULTANT = AttributesEnum.YBResultant.index();
    public static final int TOTRATIO = AttributesEnum.TotRatio.index();
    public static final int ROWSTATUS = AttributesEnum.RowStatus.index();
    public static final int IMID = AttributesEnum.ImId.index();
    public static final int XXPMITEMMASTERSPNVIEW = AttributesEnum.XxpmItemMasterSpnView.index();
    public static final int COTTONTYPELOV = AttributesEnum.CottonTypeLOV.index();
    public static final int FIBERTYPELOV = AttributesEnum.FiberTypeLOV.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxpmYarnBlendViewRowImpl() {
    }

    /**
     * Gets XxpmYarnBlend entity object.
     * @return the XxpmYarnBlend
     */
    public XxpmYarnBlendImpl getXxpmYarnBlend() {
        return (XxpmYarnBlendImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for YB_ID using the alias name YbId.
     * @return the YB_ID
     */
    public DBSequence getYbId() {
        return (DBSequence)getAttributeInternal(YBID);
    }

    /**
     * Sets <code>value</code> as attribute value for YB_ID using the alias name YbId.
     * @param value value to set the YB_ID
     */
    public void setYbId(DBSequence value) {
        setAttributeInternal(YBID, value);
    }


    /**
     * Gets the attribute value for COTTON using the alias name Cotton.
     * @return the COTTON
     */
    public String getCotton() {
        return (String) getAttributeInternal(COTTON);
    }

    /**
     * Sets <code>value</code> as attribute value for COTTON using the alias name Cotton.
     * @param value value to set the COTTON
     */
    public void setCotton(String value) {
        setAttributeInternal(COTTON, value);
    }

    /**
     * Gets the attribute value for COTTON_RATIO using the alias name CottonRatio.
     * @return the COTTON_RATIO
     */
    public Number getCottonRatio() {
        return (Number) getAttributeInternal(COTTONRATIO);
    }

    /**
     * Sets <code>value</code> as attribute value for COTTON_RATIO using the alias name CottonRatio.
     * @param value value to set the COTTON_RATIO
     */
    public void setCottonRatio(Number value) {
        setAttributeInternal(COTTONRATIO, value);
    }

    /**
     * Gets the attribute value for FIBER using the alias name Fiber.
     * @return the FIBER
     */
    public String getFiber() {
        return (String) getAttributeInternal(FIBER);
    }

    /**
     * Sets <code>value</code> as attribute value for FIBER using the alias name Fiber.
     * @param value value to set the FIBER
     */
    public void setFiber(String value) {
        setAttributeInternal(FIBER, value);
    }

    /**
     * Gets the attribute value for FIBER_RATIO using the alias name FiberRatio.
     * @return the FIBER_RATIO
     */
    public Number getFiberRatio() {
        return (Number) getAttributeInternal(FIBERRATIO);
    }

    /**
     * Sets <code>value</code> as attribute value for FIBER_RATIO using the alias name FiberRatio.
     * @param value value to set the FIBER_RATIO
     */
    public void setFiberRatio(Number value) {
        setAttributeInternal(FIBERRATIO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute YBResultant.
     * @return the YBResultant
     */
    public String getYBResultant() {
        return (String) getAttributeInternal(YBRESULTANT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute YBResultant.
     * @param value value to set the  YBResultant
     */
    public void setYBResultant(String value) {
        setAttributeInternal(YBRESULTANT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotRatio.
     * @return the TotRatio
     */
    public Number getTotRatio() {
        return (Number) getAttributeInternal(TOTRATIO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotRatio.
     * @param value value to set the  TotRatio
     */
    public void setTotRatio(Number value) {
        setAttributeInternal(TOTRATIO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RowStatus.
     * @return the RowStatus
     */
    public Integer getRowStatus() {
        //return (String) getAttributeInternal(ROWSTATUS);
        byte entityState = this.getEntity(0).getEntityState();
                return new Integer(entityState);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RowStatus.
     * @param value value to set the  RowStatus
     */
    public void setRowStatus(Integer value) {
        setAttributeInternal(ROWSTATUS, value);
    }

    /**
     * Gets the attribute value for IM_ID using the alias name ImId.
     * @return the IM_ID
     */
    public Number getImId() {
        return (Number) getAttributeInternal(IMID);
    }

    /**
     * Sets <code>value</code> as attribute value for IM_ID using the alias name ImId.
     * @param value value to set the IM_ID
     */
    public void setImId(Number value) {
        setAttributeInternal(IMID, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link XxpmItemMasterSpnView.
     */
    public Row getXxpmItemMasterSpnView() {
        return (Row)getAttributeInternal(XXPMITEMMASTERSPNVIEW);
    }

    /**
     * Sets the master-detail link XxpmItemMasterSpnView between this object and <code>value</code>.
     */
    public void setXxpmItemMasterSpnView(Row value) {
        setAttributeInternal(XXPMITEMMASTERSPNVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CottonTypeLOV.
     */
    public RowSet getCottonTypeLOV() {
        return (RowSet)getAttributeInternal(COTTONTYPELOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> FiberTypeLOV.
     */
    public RowSet getFiberTypeLOV() {
        return (RowSet)getAttributeInternal(FIBERTYPELOV);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    public void updateYbLovsAccessor(){
        getCottonTypeLOV().executeQuery();
        getFiberTypeLOV().executeQuery();
    }
}
