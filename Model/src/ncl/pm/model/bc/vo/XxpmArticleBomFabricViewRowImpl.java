package ncl.pm.model.bc.vo;

import ncl.pm.model.bc.eo.XxpmArticleBomFabricImpl;


import java.util.logging.Logger;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Aug 27 22:00:48 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmArticleBomFabricViewRowImpl extends ViewRowImpl {
    Logger logger = Logger.getLogger(this.getClass().getName());

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ArtBomFabId {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getArtBomFabId();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setArtBomFabId((DBSequence)value);
            }
        },
        ArtBomId {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getArtBomId();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setArtBomId((Number)value);
            }
        },
        ImId {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getImId();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setImId((Integer)value);
            }
        },
        Segment2 {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getSegment2();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setSegment2((String)value);
            }
        },
        Description {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getDescription();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setDescription((String)value);
            }
        },
        ItemColor {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getItemColor();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setItemColor((String)value);
            }
        },
        ItemSize {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getItemSize();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setItemSize((String)value);
            }
        },
        Uom {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getUom();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setUom((String)value);
            }
        },
        SubInv {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getSubInv();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setSubInv((String)value);
            }
        },
        Consumption {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getConsumption();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setConsumption((Number)value);
            }
        },
        Wastage {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getWastage();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setWastage((Number)value);
            }
        },
        Active {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getActive();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setActive((Integer)value);
            }
        },
        EbsStatus {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getEbsStatus();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setEbsStatus((Integer)value);
            }
        },
        ColorChkbox {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getColorChkbox();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setColorChkbox((Integer)value);
            }
        },
        SizeChkbox {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getSizeChkbox();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setSizeChkbox((Integer)value);
            }
        },
        XxpmAbFabricColorsView {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getXxpmAbFabricColorsView();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxpmAbFabricSizesView {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getXxpmAbFabricSizesView();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ArticleBomFablov {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getArticleBomFablov();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ArticleBomItemSubInvLov {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getArticleBomItemSubInvLov();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        YesNoIntlov {
            public Object get(XxpmArticleBomFabricViewRowImpl obj) {
                return obj.getYesNoIntlov();
            }

            public void put(XxpmArticleBomFabricViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxpmArticleBomFabricViewRowImpl object);

        public abstract void put(XxpmArticleBomFabricViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ARTBOMFABID = AttributesEnum.ArtBomFabId.index();
    public static final int ARTBOMID = AttributesEnum.ArtBomId.index();
    public static final int IMID = AttributesEnum.ImId.index();
    public static final int SEGMENT2 = AttributesEnum.Segment2.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int ITEMCOLOR = AttributesEnum.ItemColor.index();
    public static final int ITEMSIZE = AttributesEnum.ItemSize.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int SUBINV = AttributesEnum.SubInv.index();
    public static final int CONSUMPTION = AttributesEnum.Consumption.index();
    public static final int WASTAGE = AttributesEnum.Wastage.index();
    public static final int ACTIVE = AttributesEnum.Active.index();
    public static final int EBSSTATUS = AttributesEnum.EbsStatus.index();
    public static final int COLORCHKBOX = AttributesEnum.ColorChkbox.index();
    public static final int SIZECHKBOX = AttributesEnum.SizeChkbox.index();
    public static final int XXPMABFABRICCOLORSVIEW =
        AttributesEnum.XxpmAbFabricColorsView.index();
    public static final int XXPMABFABRICSIZESVIEW =
        AttributesEnum.XxpmAbFabricSizesView.index();
    public static final int ARTICLEBOMFABLOV =
        AttributesEnum.ArticleBomFablov.index();
    public static final int ARTICLEBOMITEMSUBINVLOV =
        AttributesEnum.ArticleBomItemSubInvLov.index();
    public static final int YESNOINTLOV = AttributesEnum.YesNoIntlov.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxpmArticleBomFabricViewRowImpl() {
    }

    /**
     * Gets XxpmArticleBomFabric entity object.
     * @return the XxpmArticleBomFabric
     */
    public XxpmArticleBomFabricImpl getXxpmArticleBomFabric() {
        return (XxpmArticleBomFabricImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ART_BOM_FAB_ID using the alias name ArtBomFabId.
     * @return the ART_BOM_FAB_ID
     */
    public DBSequence getArtBomFabId() {
        return (DBSequence)getAttributeInternal(ARTBOMFABID);
    }

    /**
     * Sets <code>value</code> as attribute value for ART_BOM_FAB_ID using the alias name ArtBomFabId.
     * @param value value to set the ART_BOM_FAB_ID
     */
    public void setArtBomFabId(DBSequence value) {
        setAttributeInternal(ARTBOMFABID, value);
    }

    /**
     * Gets the attribute value for ART_BOM_ID using the alias name ArtBomId.
     * @return the ART_BOM_ID
     */
    public Number getArtBomId() {
        return (Number)getAttributeInternal(ARTBOMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ART_BOM_ID using the alias name ArtBomId.
     * @param value value to set the ART_BOM_ID
     */
    public void setArtBomId(Number value) {
        setAttributeInternal(ARTBOMID, value);
    }

    /**
     * Gets the attribute value for IM_ID using the alias name ImId.
     * @return the IM_ID
     */
    public Integer getImId() {
        return (Integer)getAttributeInternal(IMID);
    }

    /**
     * Sets <code>value</code> as attribute value for IM_ID using the alias name ImId.
     * @param value value to set the IM_ID
     */
    public void setImId(Integer value) {
        setAttributeInternal(IMID, value);
        setSubInv(this.getDefaultValForSubInvFab());
    }

    /**
     * Gets the attribute value for SEGMENT2 using the alias name Segment2.
     * @return the SEGMENT2
     */
    public String getSegment2() {
        return (String)getAttributeInternal(SEGMENT2);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT2 using the alias name Segment2.
     * @param value value to set the SEGMENT2
     */
    public void setSegment2(String value) {
        setAttributeInternal(SEGMENT2, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Description.
     * @param value value to set the  Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemColor.
     * @return the ItemColor
     */
    public String getItemColor() {
        return (String)getAttributeInternal(ITEMCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemColor.
     * @param value value to set the  ItemColor
     */
    public void setItemColor(String value) {
        setAttributeInternal(ITEMCOLOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemSize.
     * @return the ItemSize
     */
    public String getItemSize() {
        return (String)getAttributeInternal(ITEMSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemSize.
     * @param value value to set the  ItemSize
     */
    public void setItemSize(String value) {
        setAttributeInternal(ITEMSIZE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Uom.
     * @return the Uom
     */
    public String getUom() {
        return (String)getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Uom.
     * @param value value to set the  Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for SUB_INV using the alias name SubInv.
     * @return the SUB_INV
     */
    public String getSubInv() {
        return (String)getAttributeInternal(SUBINV);
    }

    /**
     * Sets <code>value</code> as attribute value for SUB_INV using the alias name SubInv.
     * @param value value to set the SUB_INV
     */
    public void setSubInv(String value) {
        setAttributeInternal(SUBINV, value);
    }

    /**
     * Gets the attribute value for CONSUMPTION using the alias name Consumption.
     * @return the CONSUMPTION
     */
    public Number getConsumption() {
        return (Number)getAttributeInternal(CONSUMPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for CONSUMPTION using the alias name Consumption.
     * @param value value to set the CONSUMPTION
     */
    public void setConsumption(Number value) {
        setAttributeInternal(CONSUMPTION, value);
    }

    /**
     * Gets the attribute value for WASTAGE using the alias name Wastage.
     * @return the WASTAGE
     */
    public Number getWastage() {
        return (Number)getAttributeInternal(WASTAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for WASTAGE using the alias name Wastage.
     * @param value value to set the WASTAGE
     */
    public void setWastage(Number value) {
        setAttributeInternal(WASTAGE, value);
    }

    /**
     * Gets the attribute value for ACTIVE using the alias name Active.
     * @return the ACTIVE
     */
    public Integer getActive() {
        return (Integer)getAttributeInternal(ACTIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVE using the alias name Active.
     * @param value value to set the ACTIVE
     */
    public void setActive(Integer value) {
        setAttributeInternal(ACTIVE, value);
    }

    /**
     * Gets the attribute value for EBS_STATUS using the alias name EbsStatus.
     * @return the EBS_STATUS
     */
    public Integer getEbsStatus() {
        return (Integer)getAttributeInternal(EBSSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for EBS_STATUS using the alias name EbsStatus.
     * @param value value to set the EBS_STATUS
     */
    public void setEbsStatus(Integer value) {
        setAttributeInternal(EBSSTATUS, value);
    }

    /**
     * Gets the attribute value for COLOR_CHKBOX using the alias name ColorChkbox.
     * @return the COLOR_CHKBOX
     */
    public Integer getColorChkbox() {
        return (Integer)getAttributeInternal(COLORCHKBOX);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_CHKBOX using the alias name ColorChkbox.
     * @param value value to set the COLOR_CHKBOX
     */
    public void setColorChkbox(Integer value) {
        setAttributeInternal(COLORCHKBOX, value);
    }

    /**
     * Gets the attribute value for SIZE_CHKBOX using the alias name SizeChkbox.
     * @return the SIZE_CHKBOX
     */
    public Integer getSizeChkbox() {
        return (Integer)getAttributeInternal(SIZECHKBOX);
    }

    /**
     * Sets <code>value</code> as attribute value for SIZE_CHKBOX using the alias name SizeChkbox.
     * @param value value to set the SIZE_CHKBOX
     */
    public void setSizeChkbox(Integer value) {
        setAttributeInternal(SIZECHKBOX, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxpmAbFabricColorsView.
     */
    public RowIterator getXxpmAbFabricColorsView() {
        return (RowIterator)getAttributeInternal(XXPMABFABRICCOLORSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxpmAbFabricSizesView.
     */
    public RowIterator getXxpmAbFabricSizesView() {
        return (RowIterator)getAttributeInternal(XXPMABFABRICSIZESVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ArticleBomFablov.
     */
    public RowSet getArticleBomFablov() {
        return (RowSet)getAttributeInternal(ARTICLEBOMFABLOV);
    }


    /**
     * Gets the view accessor <code>RowSet</code> ArticleBomItemSubInvLov.
     */
    public RowSet getArticleBomItemSubInvLov() {
        return (RowSet)getAttributeInternal(ARTICLEBOMITEMSUBINVLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YesNoIntlov.
     */
    public RowSet getYesNoIntlov() {
        return (RowSet)getAttributeInternal(YESNOINTLOV);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    @Override
    public void setNewRowState(byte state) {
        if (state != Row.STATUS_INITIALIZED ||
            getNewRowState() != Row.STATUS_NEW) {
            super.setNewRowState(state);
        }
    }

    public String getDefaultValForSubInvFab() {
        String result = null;
        if (getImId() != null) {
            Row[] subInvFabRows =
                this.getArticleBomItemSubInvLov().getFilteredRows("ImId",
                                                                  getImId());
            for (int i = 0; i < subInvFabRows.length; i++) {
                Row firstRow = subInvFabRows[i];
                if (firstRow.getAttribute("SubInv") != null) {
                    result = String.valueOf(firstRow.getAttribute("SubInv"));
                    break;
                }
            }
        }
        logger.warning("Fab Sub Inv: " + result);
        return result;
    }
}
