package ncl.pm.model.bc.vo;

import ncl.pm.model.bc.eo.XxpmMadeupColorsImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 29 12:25:58 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmMadeupColorsViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ColorId {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorId();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorId((DBSequence)value);
            }
        }
        ,
        ProgId {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getProgId();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setProgId((Number)value);
            }
        }
        ,
        ColorCategory {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorCategory();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorCategory((String)value);
            }
        }
        ,
        ColorCode {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorCode();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorCode((String)value);
            }
        }
        ,
        ColorCode2 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorCode2();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorCode2((String)value);
            }
        }
        ,
        ColorCode3 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorCode3();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorCode3((String)value);
            }
        }
        ,
        ColorCode4 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorCode4();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorCode4((String)value);
            }
        }
        ,
        ColorCode5 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorCode5();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorCode5((String)value);
            }
        }
        ,
        ColorCode6 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorCode6();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorCode6((String)value);
            }
        }
        ,
        ColorCode7 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorCode7();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorCode7((String)value);
            }
        }
        ,
        ColorCode8 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorCode8();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorCode8((String)value);
            }
        }
        ,
        ColorName {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorName();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorName((String)value);
            }
        }
        ,
        ColorName2 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorName2();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorName2((String)value);
            }
        }
        ,
        ColorName3 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorName3();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorName3((String)value);
            }
        }
        ,
        ColorName4 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorName4();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorName4((String)value);
            }
        }
        ,
        ColorName5 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorName5();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorName5((String)value);
            }
        }
        ,
        ColorName6 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorName6();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorName6((String)value);
            }
        }
        ,
        ColorName7 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorName7();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorName7((String)value);
            }
        }
        ,
        ColorName8 {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getColorName8();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setColorName8((String)value);
            }
        }
        ,
        RowStatus {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getRowStatus();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setRowStatus((Integer)value);
            }
        }
        ,
        EbsStatus {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getEbsStatus();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setEbsStatus((Integer)value);
            }
        }
        ,
        ItemColorsLov {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getItemColorsLov();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MadeupColorCatLov {
            public Object get(XxpmMadeupColorsViewRowImpl obj) {
                return obj.getMadeupColorCatLov();
            }

            public void put(XxpmMadeupColorsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxpmMadeupColorsViewRowImpl object);

        public abstract void put(XxpmMadeupColorsViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COLORID = AttributesEnum.ColorId.index();
    public static final int PROGID = AttributesEnum.ProgId.index();
    public static final int COLORCATEGORY = AttributesEnum.ColorCategory.index();
    public static final int COLORCODE = AttributesEnum.ColorCode.index();
    public static final int COLORCODE2 = AttributesEnum.ColorCode2.index();
    public static final int COLORCODE3 = AttributesEnum.ColorCode3.index();
    public static final int COLORCODE4 = AttributesEnum.ColorCode4.index();
    public static final int COLORCODE5 = AttributesEnum.ColorCode5.index();
    public static final int COLORCODE6 = AttributesEnum.ColorCode6.index();
    public static final int COLORCODE7 = AttributesEnum.ColorCode7.index();
    public static final int COLORCODE8 = AttributesEnum.ColorCode8.index();
    public static final int COLORNAME = AttributesEnum.ColorName.index();
    public static final int COLORNAME2 = AttributesEnum.ColorName2.index();
    public static final int COLORNAME3 = AttributesEnum.ColorName3.index();
    public static final int COLORNAME4 = AttributesEnum.ColorName4.index();
    public static final int COLORNAME5 = AttributesEnum.ColorName5.index();
    public static final int COLORNAME6 = AttributesEnum.ColorName6.index();
    public static final int COLORNAME7 = AttributesEnum.ColorName7.index();
    public static final int COLORNAME8 = AttributesEnum.ColorName8.index();
    public static final int ROWSTATUS = AttributesEnum.RowStatus.index();
    public static final int EBSSTATUS = AttributesEnum.EbsStatus.index();
    public static final int ITEMCOLORSLOV = AttributesEnum.ItemColorsLov.index();
    public static final int MADEUPCOLORCATLOV = AttributesEnum.MadeupColorCatLov.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxpmMadeupColorsViewRowImpl() {
    }

    /**
     * Gets XxpmMadeupColors entity object.
     * @return the XxpmMadeupColors
     */
    public XxpmMadeupColorsImpl getXxpmMadeupColors() {
        return (XxpmMadeupColorsImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for COLOR_ID using the alias name ColorId.
     * @return the COLOR_ID
     */
    public DBSequence getColorId() {
        return (DBSequence)getAttributeInternal(COLORID);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_ID using the alias name ColorId.
     * @param value value to set the COLOR_ID
     */
    public void setColorId(DBSequence value) {
        setAttributeInternal(COLORID, value);
    }

    /**
     * Gets the attribute value for PROG_ID using the alias name ProgId.
     * @return the PROG_ID
     */
    public Number getProgId() {
        return (Number) getAttributeInternal(PROGID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROG_ID using the alias name ProgId.
     * @param value value to set the PROG_ID
     */
    public void setProgId(Number value) {
        setAttributeInternal(PROGID, value);
    }

    /**
     * Gets the attribute value for COLOR_CATEGORY using the alias name ColorCategory.
     * @return the COLOR_CATEGORY
     */
    public String getColorCategory() {
        return (String) getAttributeInternal(COLORCATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_CATEGORY using the alias name ColorCategory.
     * @param value value to set the COLOR_CATEGORY
     */
    public void setColorCategory(String value) {
        setAttributeInternal(COLORCATEGORY, value);
    }

    /**
     * Gets the attribute value for COLOR_CODE using the alias name ColorCode.
     * @return the COLOR_CODE
     */
    public String getColorCode() {
        return (String) getAttributeInternal(COLORCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_CODE using the alias name ColorCode.
     * @param value value to set the COLOR_CODE
     */
    public void setColorCode(String value) {
        setAttributeInternal(COLORCODE, value);
    }

    /**
     * Gets the attribute value for COLOR_CODE2 using the alias name ColorCode2.
     * @return the COLOR_CODE2
     */
    public String getColorCode2() {
        return (String) getAttributeInternal(COLORCODE2);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_CODE2 using the alias name ColorCode2.
     * @param value value to set the COLOR_CODE2
     */
    public void setColorCode2(String value) {
        setAttributeInternal(COLORCODE2, value);
    }

    /**
     * Gets the attribute value for COLOR_CODE3 using the alias name ColorCode3.
     * @return the COLOR_CODE3
     */
    public String getColorCode3() {
        return (String) getAttributeInternal(COLORCODE3);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_CODE3 using the alias name ColorCode3.
     * @param value value to set the COLOR_CODE3
     */
    public void setColorCode3(String value) {
        setAttributeInternal(COLORCODE3, value);
    }

    /**
     * Gets the attribute value for COLOR_CODE4 using the alias name ColorCode4.
     * @return the COLOR_CODE4
     */
    public String getColorCode4() {
        return (String) getAttributeInternal(COLORCODE4);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_CODE4 using the alias name ColorCode4.
     * @param value value to set the COLOR_CODE4
     */
    public void setColorCode4(String value) {
        setAttributeInternal(COLORCODE4, value);
    }

    /**
     * Gets the attribute value for COLOR_CODE5 using the alias name ColorCode5.
     * @return the COLOR_CODE5
     */
    public String getColorCode5() {
        return (String) getAttributeInternal(COLORCODE5);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_CODE5 using the alias name ColorCode5.
     * @param value value to set the COLOR_CODE5
     */
    public void setColorCode5(String value) {
        setAttributeInternal(COLORCODE5, value);
    }

    /**
     * Gets the attribute value for COLOR_CODE6 using the alias name ColorCode6.
     * @return the COLOR_CODE6
     */
    public String getColorCode6() {
        return (String) getAttributeInternal(COLORCODE6);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_CODE6 using the alias name ColorCode6.
     * @param value value to set the COLOR_CODE6
     */
    public void setColorCode6(String value) {
        setAttributeInternal(COLORCODE6, value);
    }

    /**
     * Gets the attribute value for COLOR_CODE7 using the alias name ColorCode7.
     * @return the COLOR_CODE7
     */
    public String getColorCode7() {
        return (String) getAttributeInternal(COLORCODE7);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_CODE7 using the alias name ColorCode7.
     * @param value value to set the COLOR_CODE7
     */
    public void setColorCode7(String value) {
        setAttributeInternal(COLORCODE7, value);
    }

    /**
     * Gets the attribute value for COLOR_CODE8 using the alias name ColorCode8.
     * @return the COLOR_CODE8
     */
    public String getColorCode8() {
        return (String) getAttributeInternal(COLORCODE8);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_CODE8 using the alias name ColorCode8.
     * @param value value to set the COLOR_CODE8
     */
    public void setColorCode8(String value) {
        setAttributeInternal(COLORCODE8, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ColorName.
     * @return the ColorName
     */
    public String getColorName() {
        return (String) getAttributeInternal(COLORNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ColorName.
     * @param value value to set the  ColorName
     */
    public void setColorName(String value) {
        setAttributeInternal(COLORNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RowStatus.
     * @return the RowStatus
     */
    public Integer getRowStatus() {
        //return (Integer) getAttributeInternal(ROWSTATUS);
        byte entityState = this.getEntity(0).getEntityState();
        return new Integer(entityState);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RowStatus.
     * @param value value to set the  RowStatus
     */
    public void setRowStatus(Integer value) {
        setAttributeInternal(ROWSTATUS, value);
    }

    /**
     * Gets the attribute value for EBS_STATUS using the alias name EbsStatus.
     * @return the EBS_STATUS
     */
    public Integer getEbsStatus() {
        return (Integer) getAttributeInternal(EBSSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for EBS_STATUS using the alias name EbsStatus.
     * @param value value to set the EBS_STATUS
     */
    public void setEbsStatus(Integer value) {
        setAttributeInternal(EBSSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ColorName2.
     * @return the ColorName2
     */
    public String getColorName2() {
        return (String) getAttributeInternal(COLORNAME2);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ColorName2.
     * @param value value to set the  ColorName2
     */
    public void setColorName2(String value) {
        setAttributeInternal(COLORNAME2, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ColorName3.
     * @return the ColorName3
     */
    public String getColorName3() {
        return (String) getAttributeInternal(COLORNAME3);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ColorName3.
     * @param value value to set the  ColorName3
     */
    public void setColorName3(String value) {
        setAttributeInternal(COLORNAME3, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ColorName4.
     * @return the ColorName4
     */
    public String getColorName4() {
        return (String) getAttributeInternal(COLORNAME4);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ColorName4.
     * @param value value to set the  ColorName4
     */
    public void setColorName4(String value) {
        setAttributeInternal(COLORNAME4, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ColorName5.
     * @return the ColorName5
     */
    public String getColorName5() {
        return (String) getAttributeInternal(COLORNAME5);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ColorName5.
     * @param value value to set the  ColorName5
     */
    public void setColorName5(String value) {
        setAttributeInternal(COLORNAME5, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ColorName6.
     * @return the ColorName6
     */
    public String getColorName6() {
        return (String) getAttributeInternal(COLORNAME6);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ColorName6.
     * @param value value to set the  ColorName6
     */
    public void setColorName6(String value) {
        setAttributeInternal(COLORNAME6, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ColorName7.
     * @return the ColorName7
     */
    public String getColorName7() {
        return (String) getAttributeInternal(COLORNAME7);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ColorName7.
     * @param value value to set the  ColorName7
     */
    public void setColorName7(String value) {
        setAttributeInternal(COLORNAME7, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ColorName8.
     * @return the ColorName8
     */
    public String getColorName8() {
        return (String) getAttributeInternal(COLORNAME8);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ColorName8.
     * @param value value to set the  ColorName8
     */
    public void setColorName8(String value) {
        setAttributeInternal(COLORNAME8, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemColorsLov.
     */
    public RowSet getItemColorsLov() {
        return (RowSet)getAttributeInternal(ITEMCOLORSLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MadeupColorCatLov.
     */
    public RowSet getMadeupColorCatLov() {
        return (RowSet)getAttributeInternal(MADEUPCOLORCATLOV);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
