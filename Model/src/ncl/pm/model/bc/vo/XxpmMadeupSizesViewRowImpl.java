package ncl.pm.model.bc.vo;

import ncl.pm.model.bc.eo.XxpmMadeupSizesImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 01 21:51:49 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmMadeupSizesViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SizeId {
            public Object get(XxpmMadeupSizesViewRowImpl obj) {
                return obj.getSizeId();
            }

            public void put(XxpmMadeupSizesViewRowImpl obj, Object value) {
                obj.setSizeId((DBSequence)value);
            }
        }
        ,
        ProgId {
            public Object get(XxpmMadeupSizesViewRowImpl obj) {
                return obj.getProgId();
            }

            public void put(XxpmMadeupSizesViewRowImpl obj, Object value) {
                obj.setProgId((Number)value);
            }
        }
        ,
        SizeCode {
            public Object get(XxpmMadeupSizesViewRowImpl obj) {
                return obj.getSizeCode();
            }

            public void put(XxpmMadeupSizesViewRowImpl obj, Object value) {
                obj.setSizeCode((String)value);
            }
        }
        ,
        SizeName {
            public Object get(XxpmMadeupSizesViewRowImpl obj) {
                return obj.getSizeName();
            }

            public void put(XxpmMadeupSizesViewRowImpl obj, Object value) {
                obj.setSizeName((String)value);
            }
        }
        ,
        EbsStatus {
            public Object get(XxpmMadeupSizesViewRowImpl obj) {
                return obj.getEbsStatus();
            }

            public void put(XxpmMadeupSizesViewRowImpl obj, Object value) {
                obj.setEbsStatus((Integer)value);
            }
        }
        ,
        XxpmMadeupProgramsView {
            public Object get(XxpmMadeupSizesViewRowImpl obj) {
                return obj.getXxpmMadeupProgramsView();
            }

            public void put(XxpmMadeupSizesViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItemSizeLov {
            public Object get(XxpmMadeupSizesViewRowImpl obj) {
                return obj.getItemSizeLov();
            }

            public void put(XxpmMadeupSizesViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxpmMadeupSizesViewRowImpl object);

        public abstract void put(XxpmMadeupSizesViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SIZEID = AttributesEnum.SizeId.index();
    public static final int PROGID = AttributesEnum.ProgId.index();
    public static final int SIZECODE = AttributesEnum.SizeCode.index();
    public static final int SIZENAME = AttributesEnum.SizeName.index();
    public static final int EBSSTATUS = AttributesEnum.EbsStatus.index();
    public static final int XXPMMADEUPPROGRAMSVIEW = AttributesEnum.XxpmMadeupProgramsView.index();
    public static final int ITEMSIZELOV = AttributesEnum.ItemSizeLov.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxpmMadeupSizesViewRowImpl() {
    }

    /**
     * Gets XxpmMadeupSizes entity object.
     * @return the XxpmMadeupSizes
     */
    public XxpmMadeupSizesImpl getXxpmMadeupSizes() {
        return (XxpmMadeupSizesImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for SIZE_ID using the alias name SizeId.
     * @return the SIZE_ID
     */
    public DBSequence getSizeId() {
        return (DBSequence)getAttributeInternal(SIZEID);
    }

    /**
     * Sets <code>value</code> as attribute value for SIZE_ID using the alias name SizeId.
     * @param value value to set the SIZE_ID
     */
    public void setSizeId(DBSequence value) {
        setAttributeInternal(SIZEID, value);
    }

    /**
     * Gets the attribute value for PROG_ID using the alias name ProgId.
     * @return the PROG_ID
     */
    public Number getProgId() {
        return (Number) getAttributeInternal(PROGID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROG_ID using the alias name ProgId.
     * @param value value to set the PROG_ID
     */
    public void setProgId(Number value) {
        setAttributeInternal(PROGID, value);
    }

    /**
     * Gets the attribute value for SIZE_CODE using the alias name SizeCode.
     * @return the SIZE_CODE
     */
    public String getSizeCode() {
        return (String) getAttributeInternal(SIZECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for SIZE_CODE using the alias name SizeCode.
     * @param value value to set the SIZE_CODE
     */
    public void setSizeCode(String value) {
        setAttributeInternal(SIZECODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SizeName.
     * @return the SizeName
     */
    public String getSizeName() {
        return (String) getAttributeInternal(SIZENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SizeName.
     * @param value value to set the  SizeName
     */
    public void setSizeName(String value) {
        setAttributeInternal(SIZENAME, value);
    }


    /**
     * Gets the attribute value for EBS_STATUS using the alias name EbsStatus.
     * @return the EBS_STATUS
     */
    public Integer getEbsStatus() {
        return (Integer) getAttributeInternal(EBSSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for EBS_STATUS using the alias name EbsStatus.
     * @param value value to set the EBS_STATUS
     */
    public void setEbsStatus(Integer value) {
        setAttributeInternal(EBSSTATUS, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link XxpmMadeupProgramsView.
     */
    public Row getXxpmMadeupProgramsView() {
        return (Row)getAttributeInternal(XXPMMADEUPPROGRAMSVIEW);
    }

    /**
     * Sets the master-detail link XxpmMadeupProgramsView between this object and <code>value</code>.
     */
    public void setXxpmMadeupProgramsView(Row value) {
        setAttributeInternal(XXPMMADEUPPROGRAMSVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemSizeLov.
     */
    public RowSet getItemSizeLov() {
        return (RowSet)getAttributeInternal(ITEMSIZELOV);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
