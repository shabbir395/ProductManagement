package ncl.pm.model.bc.vo;

import java.sql.ResultSet;

import ncl.pm.model.bc.view.xxpmJC.ModelActions;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 15 19:10:16 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpmPoHeaderViewImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public XxpmPoHeaderViewImpl() {
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object[] params,
                                             int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc,
                                                 ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        if(value != null){
            Integer progId = (Integer)value.getAttribute("ProgId");
            value.setAttribute("ProgName", ma.getProgramName(this.getDBTransaction(), progId));
            value.setAttribute("CustomerName", ma.getProgramCustomerName(this.getDBTransaction(), progId));
        }
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }
    
    public void insertRow(Row row) {
        Row lastRow = this.last();
        if (lastRow != null) {
            int indx = this.getRangeIndexOf(lastRow) + 1;
            this.insertRowAtRangeIndex(indx, row);
            this.setCurrentRow(row);
        } else
            super.insertRow(row);
    }
    
    ModelActions ma = new ModelActions();

    /**
     * Returns the variable value for BindProgId.
     * @return variable value for BindProgId
     */
    public Integer getBindProgId() {
        return (Integer)ensureVariableManager().getVariableValue("BindProgId");
    }

    /**
     * Sets <code>value</code> for variable BindProgId.
     * @param value value to bind as BindProgId
     */
    public void setBindProgId(Integer value) {
        ensureVariableManager().setVariableValue("BindProgId", value);
    }

    /**
     * Returns the variable value for BindSoHeaderId.
     * @return variable value for BindSoHeaderId
     */
    public Integer getBindSoHeaderId() {
        return (Integer)ensureVariableManager().getVariableValue("BindSoHeaderId");
    }

    /**
     * Sets <code>value</code> for variable BindSoHeaderId.
     * @param value value to bind as BindSoHeaderId
     */
    public void setBindSoHeaderId(Integer value) {
        ensureVariableManager().setVariableValue("BindSoHeaderId", value);
    }

    /**
     * Returns the variable value for BindProgName.
     * @return variable value for BindProgName
     */
    public String getBindProgName() {
        return (String)ensureVariableManager().getVariableValue("BindProgName");
    }

    /**
     * Sets <code>value</code> for variable BindProgName.
     * @param value value to bind as BindProgName
     */
    public void setBindProgName(String value) {
        ensureVariableManager().setVariableValue("BindProgName", value);
    }

    /**
     * Returns the variable value for BindPoId.
     * @return variable value for BindPoId
     */
    public Integer getBindPoId() {
        return (Integer)ensureVariableManager().getVariableValue("BindPoId");
    }

    /**
     * Sets <code>value</code> for variable BindPoId.
     * @param value value to bind as BindPoId
     */
    public void setBindPoId(Integer value) {
        ensureVariableManager().setVariableValue("BindPoId", value);
    }
}
